/// All in One Game Kit - Easy Ledge Climb Character System
/// LedgeClimbController.cs
///
/// As long as the player has a CharacterController or Rigidbody component, this script allows the player to:
/// 1. Grab on to, and climb up and over ledges (Climbing Detectors).
/// 2. Move from side to side on ledges, either in a fully 3D setting, or in a 2.5D side-scrolling setting (Moving Detectors).
/// 3. Jump from one ledge to another / switch ledges (Ledge Switching Detectors).
/// 4. Grab back on to or jump off of a ledge that you just walked off of (Walking Off Ledge Detectors).
/// 5. Enable or disable scripts when grabbing on to a ledge, as well as when letting go of a ledge (Scripts To Enable On Grab/Scripts To Disable On Grab).
///		-You should always disable any other scripts that affect the movement or rotation of the player. If you do not, this script will not work properly.
///
/// NOTE: *You should always set a layer for your player so that you can disable collisions with that layer (by unchecking it in the script's Collision Layers).
///	If you do not, the raycasts and linecasts will collide with the player himself and keep the script from working properly!*
///
/// (C) 2015-2018 Grant Marrs

using UnityEngine;
using System.Collections;

public class LedgeClimbController : MonoBehaviour {
	
	public bool showMainRaysOnly = false; //show only the main detector rays
	public bool stayUpright = true; //only rotate to the left and right, not up and down
	public bool inheritScale = false; //set the scale of the rays to the scale of the script holder
	public float onLedgeHeight = 0.0f; //determines the player's up distance/height while grabbed on to a ledge
	public float ledgeAngleLimit = 25.00f; //the maximum angle of a ledge you can grab on to
	public float distanceToPushOffOfLedgeAfterLettingGo = 0.5f; //the distance the player pushes off of a ledge after letting go
	public float maxGroundedDistance = 0.2f; //the maximum distance you can be from the ground to be considered grounded
    public GameObject varGameObject;

    [System.Serializable]
	public class ClimbingDetectors {
		public float pullUpSpeed = 4; //the speed the player pulls up and over ledges
		public bool allowClimbingOverLedgesIfInAir = true; //allows player to climb over a ledge that he is currently grabbed on to in mid-air
		public bool allowClimbingOverLedgesIfOnGround = true; //allows player to climb over a ledge if he is on the ground
		public bool automaticallyClimbOverGroundLedgeIfColliding = true; //(if allowClimbingOverLedgesIfOnGround is true) allows player to automatically climb over a ledge on the ground if he is colliding with and moving toward it (as opposed to having to stop and move again if colliding)
		public bool climbOverLedgesWithoutLettingGoOfJoystickFirst = false; //allows the player to climb over ledges without having to let go of the joystick first
		public bool showClimbDetectionRays = true; //the rays that detect whether a ledge can be climbed or not
		public float spaceAboveHeadNeededToGrabOn = 0.0f; //the amount of space above the player’s head needed to grab on to a ledge
		public float spaceAboveHeadNeededToClimbUp = 0.0f; //the amount of space above the player’s head needed to climb up and over a ledge
		public float rodHoldingLedgeDetectorHeight = 0.0f; //the height of the rod that holds the ledge detector
		public float rodHoldingLedgeDetectorForward = 0.0f; //the forward distance of the rod that holds the ledge detector
		public float ledgeDetectorHeight = 0.0f; //the height of the ledge detector (the ray that detects ledges)
		public float ledgeDetectorForward = 0.0f; //the forward distance of the ledge detector (the ray that detects ledges)
		public float topOfLedgeSurfaceDetectorHeight = 0.0f; //the height of the detector that determines where the top (surface) of a ledge is
		public bool showSurfaceLevelRays = false; //shows the rays that detect whether a ledge is low enough to be climbed or not
		public float maxSurfaceLevelHeight = 0.0f; //the maximum height (or level) of a surface that the player can grab on to
		public float underPlatformMaxSurfaceLevelHeight = 0.0f; //the maximum height (or level) of a surface that the player can grab on to when that surface is under a platform/another collider
		public bool showNonLedgeSurfaceDetectionRays = false; //shows the rays that detect whether a surface is actually a ledge or not (instead of something else such as a slope/hillside)
		public float nonLedgeSurfaceDetectorsHeight = 0.0f; //the height of the detectors that determine whether a surface is actually a ledge or not (instead of something else such as a slope/hillside)
		public float nonLedgeSurfaceDetectorsForward = 0.0f; //the forward distance of the detectors that determine whether a surface is actually a ledge or not (instead of something else such as a slope/hillside)
	}
	
	[System.Serializable]
	public class MovingDetectors {
		public float moveSpeed = 3; //the speed the player moves left and right (while grabbed on to a ledge)
		public float rotationSpeed = 8; //the speed the player rotates (while grabbed on to a ledge)
		public bool moveInBursts = true; //move left and right in bursts (while grabbed on to a ledge)
		public float burstLength = 1; //the amount of time a movement burst lasts
		public bool showMovingRays = true; //the rays that detect where and how the player will move when on a ledge
		public float movingDetectorsHeight = 0.0f; //the height of the rays that detect where and how the player will move when on a ledge
		public float firstFrontWallDetectorsForward = 0.0f; //the forward distance of the first set of detectors that detect walls in front of the player
		public float firstFrontWallDetectorsWidth = 0.0f; //the width of the first set of detectors that detect walls in front of the player
		public float firstBackWallDetectorsForward = 0.0f; //the forward distance of the first set of detectors that detect walls behind the player
		public float firstBackWallDetectorsWidth = 0.0f; //the width of the first set of detectors that detect walls behind the player
		public float secondFrontWallDetectorsForward = 0.0f; //the forward distance of the second set of detectors that detect walls in front of the player
		public float secondFrontWallDetectorsWidth = 0.0f; //the width of the second set of detectors that detect walls in front of the player
		public float secondBackWallDetectorsForward = 0.0f; //the forward distance of the second set of detectors that detect walls behind the player
		public float secondBackWallDetectorsWidth = 0.0f; //the width of the second set of detectors that detect walls behind the player
		public float frontTopOfLedgeSurfaceDetectorsForward = 0.0f; //the forward distance of the detectors that determine where the top (surface) of a ledge in front of the player is
		public float backTopOfLedgeSurfaceDetectorsForward = 0.0f; //the forward distance of the detectors that determine where the top (surface) of a ledge behind the player is
		public bool showGroundRays = true; //shows the rays that detect whether the player is too close to the ground to move or not
		public float minDistFromGroundHeight = 0.0f; //the minimum distance (or height) the player must be from the ground in order to grab on to or move on a ledge
		public float minDistFromGroundWidth = 0.0f; //the width of the rays that determine the minimum distance (or height) the player must be from the ground in order to grab on to or move on a ledge
		[System.Serializable]
		public class SideScrolling {
			public bool lockMovementOnZAxis = false; //locks the movement of the player on the z-axis
			public float zValue = 0; //the permanent z-value of the player if his movement on the z-axis is locked
			public bool lockMovementOnXAxis = false; //locks the movement of the player on the x-axis
			public float xValue = 0; //the permanent x-value of the player if his movement on the x-axis is locked
		}
		public SideScrolling sideScrolling = new SideScrolling(); //variables that determine whether or not the player uses 2.5D side-scrolling
	}
	
	[System.Serializable]
	public class BlockingDetectors {
		public bool showRotationBlockingRays = false; //shows the rays that detect whether the player is blocked from rotating on a ledge or not
		public float preventRotatingToSideWallHeight = 0.0f; //the height of the detectors that determine if something to the side of the player (such as a wall) cannot be rotated to
		public float preventRotatingToSideWallWidth = 0.0f; //the width of the detectors that determine if something to the side of the player (such as a wall) cannot be rotated to
		public float firstAllowRotatingIfLedgeHitWidth = 0.0f; //the width of the first set of detectors that determine if something to the side of the player (such as a ledge) can be rotated to
		public float secondAllowRotatingIfLedgeHitWidth = 0.0f; //the width of the second set of detectors that determine if something to the side of the player (such as a ledge) can be rotated to
		public bool showMovementBlockingRays = false; //shows the rays that detect whether the player is blocked from moving on a ledge or not
		public float midSideWallDetectorsForward = 0.0f; //the forward distance of the detectors that determine whether a wall in front of and to the side of the player is blocking the player’s movement
		public float midSideWallDetectorsWidth = 0.0f; //the width of the detectors that determine whether a wall in front of and to the side of the player is blocking the player’s movement
		public float sideWallDetectorsWidth = 0.0f; //the width of the detectors that determine whether a wall to the side of the player is blocking the player’s movement
		public float frontSideBlockageDetectorsHeight = 0.0f; //the height of the detectors that determine if there is something (a collider) in front of the player blocking his movement
		public float frontSideBlockageDetectorsWidth = 0.0f; //the width of the detectors that determine if there is something (a collider) in front of the player blocking his movement
		public float frontSideBlockageDetectorsForward = 0.0f; //the forward distance of the detectors that determine if there is something (a collider) in front of the player blocking his movement
		public float aboveHeadPlatformDetectorsHeight = 0.0f; //the height of the detectors that determine if there is a platform/collider above (and slightly in front of) the player’s head blocking his movement
		public float aboveHeadPlatformDetectorsForward = 0.0f; //the forward distance of the detectors that determine if there is a platform/collider above (and slightly in front of) the player’s head blocking his movement
		public bool showAngleDetectionRays = false; //shows the rays that detect whether a ledge’s angle is too high to be climbed/moved on or not
		public float ledgeAngleDetectorsHeight = 0.0f; //the height of the detectors that determine the angle of a ledge
		public float ledgeAngleDetectorsWidth = 0.0f; //the width of the detectors that determine the angle of a ledge
	}
	
	[System.Serializable]
	public class LedgeSwitchingDetectors {
		public bool allowLedgeSwitching = true; //allows the player to switch between ledges (jump from one ledge to another)
		public float switchJumpHeight = 5; //the height the player jumps when switching ledges
		public float switchJumpSpeed = 4; //the speed the player jumps between ledges
		public float inputPercentageNeededToSwitch = 95; //the amount of input needed to be applied to the joystick or key in order to switch ledges
		public bool showFirstLedgeSwitchingRays = false; //shows the first set of rays that detect whether switching from one ledge to another is possible or not
		public float firstSurfaceDetectorWidth = 0.0f; //the width of the first set of detectors that determine how large of a surface a ledge must be in order for the player to switch to it
		public float firstNoSurfaceDetectorLength = 0.0f; //the length of the first set of detectors that determine if there is no surface blocking the player from switching ledges
		public float firstNoSurfaceDetectorWidth = 0.0f; //the width of the first set of detectors that determine if there is no surface blocking the player from switching ledges
		public bool showSecondLedgeSwitchingRays = false; //shows the second set of rays that detect whether switching from one ledge to another is possible or not
		public float secondSurfaceDetectorWidth = 0.0f; //the width of the second set of detectors that determine how large of a surface a ledge must be in order for the player to switch to it
		public float secondNoSurfaceDetectorLength = 0.0f; //the length of the second set of detectors that determine if there is no surface blocking the player from switching ledges
		public float secondNoSurfaceDetectorWidth = 0.0f; //the width of the second set of detectors that determine if there is no surface blocking the player from switching ledges
		public bool showThirdLedgeSwitchingRays = false; //shows the third set of rays that detect whether switching from one ledge to another is possible or not
		public float thirdSurfaceDetectorWidth = 0.0f; //the width of the third set of detectors that determine how large of a surface a ledge must be in order for the player to switch to it
		public float thirdNoSurfaceDetectorLength = 0.0f; //the length of the third set of detectors that determine if there is no surface blocking the player from switching ledges
		public float thirdNoSurfaceDetectorWidth = 0.0f; //the width of the third set of detectors that determine if there is no surface blocking the player from switching ledges
		public float surfaceDetectorForward = 0.0f; //the forward distance of the detectors that determine how large of a surface a ledge must be in order for the player to switch to it
		public float surfaceDetectorHeight = 0.0f; //the height of the detectors that determine how large of a surface a ledge must be in order for the player to switch to it
		public float surfaceDetectorLength = 0.0f; //the length of the detectors that determine how large of a surface a ledge must be in order for the player to switch to it
		public float surfaceDetectorWidth = 0.0f; //the width of the detectors that determine how large of a surface a ledge must be in order for the player to switch to it
		public float switchPointDetectorWidth = 0.0f; //the width of the detectors that determine where the player will switch to
		public float noSurfaceDetectorHeight = 0.0f; //the height of the detectors that determine if there is no surface blocking the player from switching ledges
		public float noSurfaceDetectorWidth = 0.0f;//the width of the detectors that determine if there is no surface blocking the player from switching ledges
		public float wallInFrontDetectorUpAmount = 0.0f; //the up distance of the detectors that determine if there is a wall in front of the player keeping him from switching ledges
		public float wallInFrontDetectorHeight = 0.0f; //the height of the detectors that determine if there is a wall in front of the player keeping him from switching ledges
	}
	
	[System.Serializable]
    public class WalkingOffLedgeDetectors {
		public bool allowGrabbingBackOnToLedges = true; //allows the player to grab back on to a ledge that he is walking off of
		public bool showGrabBackOnToLedgesRays = true; //shows the rays that detect if the player is walking off of a ledge
		public float spaceInFrontNeededToGrabBackOn = 0.0f; //the amount of space in front of the player needed to grab back on to a ledge
		public float spaceBelowNeededToGrabBackOnHeight = 0.0f; //the height of the detectors that determine the amount of space below the player needed to grab back on to a ledge
		public float spaceBelowNeededToGrabBackOnForward = 0.0f; //the forward distance of the detectors that determine the amount of space below the player needed to grab back on to a ledge
		public float firstSideLedgeDetectorsHeight = 0.0f; //the height of the first set of detectors that determine if there are ledges to the side of the player keeping him from grabbing back on
		public float secondSideLedgeDetectorsHeight = 0.0f; //the height of the second set of detectors that determine if there are ledges to the side of the player keeping him from grabbing back on
		public float thirdSideLedgeDetectorsHeight = 0.0f; //the height of the third set of detectors that determine if there are ledges to the side of the player keeping him from grabbing back on
		public float sideLedgeDetectorsWidth = 0.0f; //the width of the detectors that determine if there are ledges to the side of the player keeping him from grabbing back on
		public float sideLedgeDetectorsLength = 0.0f; //the length of the detectors that determine if there are ledges to the side of the player keeping him from grabbing back on
		public float grabBackOnLocationHeight = 0.0f; //the height of the detectors that determine where the player will grab back on to
		public float grabBackOnLocationWidth = 0.0f; //the height of the detectors that determine where the player will grab back on to
		public float grabBackOnLocationForward = 0.0f; //the forward distance of the detectors that determine where the player will grab back on to
		public bool allowJumpingOffLedges = false; //allows the player to automatically jump off of a ledge that he is walking off of
		public bool showJumpOffLedgesRays = false; //shows the rays that detect if the player can jump off of a ledge
		public float spaceBelowNeededToJump = 0.0f; //the amount of space below the player needed in order to jump off of a ledge
		public float jumpHeight = 7; //the height the player will jump off of a ledge
		public float jumpDistance = 2; //the distance the player will jump off of a ledge
		public float jumpDecelerationRate = 4; //the rate at which the player's jump will decelerate
		public bool useGravity; //determines whether or not to use "gravity" while jumping
		public float gravity = 20; //the amount of downward force, or "gravity," that is constantly applied to the player while jumping
		public float inputPercentageNeededToJump = 95; //the amount of input needed to be applied to the joystick or key in order to jump off of a ledge
		public bool disableScriptsWhileJumping; //determines whether or not to disable the scriptsToDisableOnGrab scripts (and enable the scriptsToEnableOnGrab scripts) while jumping
		public GameObject jumpLandingEffect; //optional dust effect to appear after landing jump
	}
	
	[System.Serializable]
    public class OverallPositionOfDetectors {
        public float upDistance = 0.0f; //the up distance (or height) of every detector
		public float forwardDistance = 0.0f; //the forward distance of every detector
		public float sideDistance = 0.0f; //the side distance of every detector
    }
	
	[System.Serializable]
    public class OverallScaleOfDetectors {
        public float length = 1.0f; //the length of every detector
		public float width = 1.0f; //the width of every detector
		public float height = 1.0f; //the height of every detector
    }
	
	[System.Serializable]
    public class CurrentStatesOfVariables {
		public bool ledgeGrabPossible; //determines if grabbing on to a ledge is currently possible
        public bool climbUpPossible; //determines if climbing up and over a ledge is currently possible
		public bool leftMovementPossible; //determines if movement to the left (while grabbed on to a ledge) is currently possible
		public bool rightMovementPossible; //determines if movement to the right (while grabbed on to a ledge) is currently possible
		public bool currentlyOnLedge; //determines if the player is currently grabbed on to a ledge or not
		public bool grounded; //determines if the player is currently grounded/on the ground or not
    }
	
	public ClimbingDetectors climbingDetectors = new ClimbingDetectors(); //detectors that determine if climbing on to or grabbing on to a ledge is possible
	public MovingDetectors movingDetectors = new MovingDetectors(); //detectors that determine where and how the player will move when on a ledge
	public BlockingDetectors blockingDetectors = new BlockingDetectors(); //detectors that determine whether the player is blocked from moving on a ledge or not
	public LedgeSwitchingDetectors ledgeSwitchingDetectors = new LedgeSwitchingDetectors(); //detectors that determine whether switching from one ledge to another is possible or not
	public WalkingOffLedgeDetectors walkingOffLedgeDetectors = new WalkingOffLedgeDetectors(); //detectors that determine if and what to do when the player walks off of a ledge
	public OverallPositionOfDetectors overallPositionOfDetectors = new OverallPositionOfDetectors(); //the overall position of every detector in this script
    public OverallScaleOfDetectors overallScaleOfDetectors = new OverallScaleOfDetectors(); //the overall scale of every detector in this script
	public string[] scriptsToEnableOnGrab; //scripts to enable when the player grabs on to a ledge (scripts disable when the player lets go of a ledge)
	private MonoBehaviour scriptToEnable; //the current script being enabled (or disabled when the player lets go of a ledge) in the scriptsToEnableOnGrab array
	public string[] scriptsToDisableOnGrab = {"PlayerController"}; //scripts to disable when the player grabs on to a ledge (scripts enable when the player lets go of a ledge)
	private MonoBehaviour scriptToDisable; //the current script being disabled (or enabled when the player lets go of a ledge) in the scriptsToDisableOnGrab array
	public CurrentStatesOfVariables currentStatesOfVariables = new CurrentStatesOfVariables(); //the current states of the main variables
	
	//ClimbingDetectors variables without class name
	//climbable
	private Vector3 spaceAboveHeadNeededToGrabOn2;
	private Vector3 spaceAboveHeadNeededToClimbUp2;
	private Vector3 rodHoldingLedgeDetectorHeight2;
	private Vector3 rodHoldingLedgeDetectorForward2;
	private Vector3 ledgeDetectorHeight2;
	private Vector3 ledgeDetectorForward2;
	private float topOfLedgeSurfaceDetectorHeight2;
	//surface levels
	private Vector3 maxSurfaceLevelHeight2;
	private Vector3 underPlatformMaxSurfaceLevelHeight2;
	//non-ledge surface detectors
	private Vector3 nonLedgeSurfaceDetectorsHeight2;
	private Vector3 nonLedgeSurfaceDetectorsForward2;
	
	//MovingDetectors variables without class name
	//movement
	private Vector3 heightOfMidSideDetectors2;
	private Vector3 firstFrontWallDetectorsForward2;
	private Vector3 secondFrontWallDetectorsForward2;
	private Vector3 firstFrontWallDetectorsWidth2;
	private Vector3 secondFrontWallDetectorsWidth2;
	private Vector3 firstBackWallDetectorsForward2;
	private Vector3 secondBackWallDetectorsForward2;
	private Vector3 firstBackWallDetectorsWidth2;
	private Vector3 secondBackWallDetectorsWidth2;
	private Vector3 frontTopOfLedgeSurfaceDetectorsForward2;
	private Vector3 backTopOfLedgeSurfaceDetectorsForward2;
	//ground
	private Vector3 minDistFromGroundHeight2;
	private Vector3 minDistFromGroundWidth2;
	
	//BlockingDetectors variables without class name
	//rotation blocking
	private Vector3 preventRotatingToSideWallHeight2;
	private Vector3 preventRotatingToSideWallWidth2;
	private Vector3 firstAllowRotatingIfLedgeHitWidth2;
	private Vector3 secondAllowRotatingIfLedgeHitWidth2;
	//movement blocking
	private Vector3 midSideWallDetectorsForward2;
	private Vector3 midSideWallDetectorsWidth2;
	private Vector3 sideWallDetectorsWidth2;
	private Vector3 frontSideBlockageDetectorsHeight2;
	private Vector3 frontSideBlockageDetectorsWidth2;
	private Vector3 frontSideBlockageDetectorsForward2;
	private Vector3 aboveHeadPlatformDetectorsHeight2;
	private Vector3 aboveHeadPlatformDetectorsForward2;
	//angles
	private Vector3 ledgeAngleDetectorsHeight2;
	private Vector3 ledgeAngleDetectorsWidth2;
	
	//LedgeSwitchingDetectors variables without class name
	private Vector3 firstSurfaceDetectorWidth2;
	private float firstNoSurfaceDetectorLength2;
	private float firstNoSurfaceDetectorWidth2;
	private Vector3 secondSurfaceDetectorWidth2;
	private float secondNoSurfaceDetectorLength2;
	private float secondNoSurfaceDetectorWidth2;
	private Vector3 thirdSurfaceDetectorWidth2;
	private float thirdNoSurfaceDetectorLength2;
	private float thirdNoSurfaceDetectorWidth2;
	private Vector3 surfaceDetectorForward2;
	private Vector3 surfaceDetectorHeight2;
	private float surfaceDetectorLength2;
	private Vector3 surfaceDetectorWidth2;
	private Vector3 switchPointDetectorWidth2;
	private Vector3 noSurfaceDetectorHeight2;
	private float noSurfaceDetectorWidth2;
	private Vector3 wallInFrontDetectorUpAmount2;
	private float wallInFrontDetectorHeight2;
	private Vector3 leftSpace;
	private Vector3 rightSpace;
	private Vector3 firstSwitchSurfaceWidth;
	private Vector3 secondSwitchSurfaceWidth;
	private Vector3 thirdSwitchSurfaceWidth;
	
	//WalkingOffLedgeDetectors variables without class name
	//walk off ledge
	private Vector3 spaceInFrontNeededToGrabBackOn2;
	private Vector3 spaceBelowNeededToGrabBackOnHeight2;
	private Vector3 spaceBelowNeededToGrabBackOnForward2;
	private Vector3 firstSideLedgeDetectorsHeight2;
	private Vector3 secondSideLedgeDetectorsHeight2;
	private Vector3 thirdSideLedgeDetectorsHeight2;
	private Vector3 sideLedgeDetectorsWidth2;
	private Vector3 sideLedgeDetectorsLength2;
	private Vector3 grabBackOnLocationHeight2;
	private Vector3 grabBackOnLocationWidth2;
	private Vector3 grabBackOnLocationForward2;
	
	//climbing variables
	private bool climbable = false;
	private bool climbableL = false;
	private bool climbableR = false;
	private bool climbPossible = false;
	private bool climbPossibleL = false;
	private bool climbPossibleR = false;
	private bool getOn = false;
	private bool getOn2 = false;
	[HideInInspector]
	public bool grabbedOn = false;
	[HideInInspector]
	public bool canGrabBackOn = true;
	private float axisBeforeGrab;
	private bool grabbedOnLastUpdate = false;
	private bool hasNotMovedOnLedgeYet;
	private bool hasNotMovedOnLedgeAsideFromLedgeSwitchingYet;
	private float ledgeAngle;
	private bool pullingUp = false;
	private float pullingUpTimer;
	private bool animatePullingUp = false;
	private Vector3 hitPoint;
	private bool pullingUpOnToPlatform;
	private Vector3 originalPullUpPoint;
	private Vector3 playerPosXZ;
	private float playerPosY;
	private float rbPosY;
	private bool rbPosYIncreasing;
	private bool rbUsesGravity;
	private bool canChangeRbGravity;
	private float angle;
	private Vector3 colliderCenter;
	private Vector3 colliderBack;
	private Vector3 colliderFront;
	private Vector3 colliderBottom;
	private Vector3 colliderTop;
	private float colliderLengthFromCenter;
	[HideInInspector]
	public GameObject oldParent; //the player's parent before coming in contact with a platform
	[HideInInspector]
	public GameObject emptyObject; //empty object that undoes the platform's properties that affect the player's scale
	
	//rotation variables
	private Quaternion rotationNormal;
	private float rotationState = 2;
	private float wallInFrontAngle;
	private bool leaningForward;
	private bool upfront;
	private bool upright;
	private bool upleft;
	private bool movingToSide;
	private bool axisChanged;
	private float horizontalAxis;
	private Quaternion lastRot;
	private Quaternion lastRot2;
	private Quaternion lastRot3;
	private float rotTimer;
	private float yRotationValue;
	
	//side movement variables
	private Vector3 lSide;
	private Vector3 rSide;
	private bool leftBlocked;
	private bool rightBlocked;
	private bool leftMovable;
	private bool rightMovable;
	private bool stuckToLeft;
	private bool stuckToRight;
	private bool angledLeft;
	private bool angledRight;
	private bool sR;
	private bool sL;
	private bool movingRight;
	private bool left;
	private bool right;
	private bool startingLeft = true;
	private bool startingRight = true;
	private float movementSpeed;
	private Vector3 lastPos;
	private bool stuckInSamePos;
	private bool stuckInSamePosNoCol;
	private float distFromWall;
	private Vector3 directionVector;
	private Vector3 movementVector;
	
	//ledge switching variables
	private bool switching;
	private bool atMidPoint;
	private bool switchJumping;
	private Vector3 midSwitchPoint;
	private Vector3 ledgeSwitchPoint;
	private Vector3 currentLedgeSwitchPoint;
	private float switchPointDist;
	//left
	//lets you know if a certain point is clear to go to or blocked on the left side
	//1
	private bool l1SecondForwardClear;
	private bool l1FirstForwardClear;
	private bool l1MiddleClear;
	private bool l1FirstBackClear;
	private bool l1SecondBackClear;
	//2
	private bool l2SecondForwardClear;
	private bool l2FirstForwardClear;
	private bool l2MiddleClear;
	private bool l2FirstBackClear;
	private bool l2SecondBackClear;
	//3
	private bool l3SecondForwardClear;
	private bool l3FirstForwardClear;
	private bool l3MiddleClear;
	private bool l3FirstBackClear;
	private bool l3SecondBackClear;
	
	//lets you know how long a certain point has been clear to go to on the left side
	//1
	private float l1SecondForwardTimer;
	private float l1FirstForwardTimer;
	private float l1MiddleTimer;
	private float l1FirstBackTimer;
	private float l1SecondBackTimer;
	//2
	private float l2SecondForwardTimer;
	private float l2FirstForwardTimer;
	private float l2MiddleTimer;
	private float l2FirstBackTimer;
	private float l2SecondBackTimer;
	//3
	private float l3SecondForwardTimer;
	private float l3FirstForwardTimer;
	private float l3MiddleTimer;
	private float l3FirstBackTimer;
	private float l3SecondBackTimer;
	
	//lets you know if surface detector hit on the left side
	//1
	private bool l1FirstForwardSurfaceDetectorsHit;
	private bool l1MiddleSurfaceDetectorsHit;
	private bool l1FirstBackSurfaceDetectorsHit;
	private bool l1SecondBackSurfaceDetectorsHit;
	private bool l1ThirdBackSurfaceDetectorsHit;
	//2
	private bool l2FirstForwardSurfaceDetectorsHit;
	private bool l2MiddleSurfaceDetectorsHit;
	private bool l2FirstBackSurfaceDetectorsHit;
	private bool l2SecondBackSurfaceDetectorsHit;
	private bool l2ThirdBackSurfaceDetectorsHit;
	//3
	private bool l3FirstForwardSurfaceDetectorsHit;
	private bool l3MiddleSurfaceDetectorsHit;
	private bool l3FirstBackSurfaceDetectorsHit;
	private bool l3SecondBackSurfaceDetectorsHit;
	private bool l3ThirdBackSurfaceDetectorsHit;
	
	//lets you know if switch point was hit on the left side
	//1
	private bool l1SecondForwardHit;
	private bool l1FirstForwardHit;
	private bool l1MiddleHit;
	private bool l1FirstBackHit;
	private bool l1SecondBackHit;
	private bool l1ThirdBackHit;
	//2
	private bool l2SecondForwardHit;
	private bool l2FirstForwardHit;
	private bool l2MiddleHit;
	private bool l2FirstBackHit;
	private bool l2SecondBackHit;
	private bool l2ThirdBackHit;
	//3
	private bool l3SecondForwardHit;
	private bool l3FirstForwardHit;
	private bool l3MiddleHit;
	private bool l3FirstBackHit;
	private bool l3SecondBackHit;
	private bool l3ThirdBackHit;
	
	//lets you know where the switch point hit on the left side
	//1
	private Vector3 l1SecondForwardHitPoint;
	private Vector3 l1FirstForwardHitPoint;
	private Vector3 l1MiddleHitPoint;
	private Vector3 l1FirstBackHitPoint;
	private Vector3 l1SecondBackHitPoint;
	//2
	private Vector3 l2SecondForwardHitPoint;
	private Vector3 l2FirstForwardHitPoint;
	private Vector3 l2MiddleHitPoint;
	private Vector3 l2FirstBackHitPoint;
	private Vector3 l2SecondBackHitPoint;
	//3
	private Vector3 l3SecondForwardHitPoint;
	private Vector3 l3FirstForwardHitPoint;
	private Vector3 l3MiddleHitPoint;
	private Vector3 l3FirstBackHitPoint;
	private Vector3 l3SecondBackHitPoint;
	
	//right
	//lets you know if a certain point is clear to go to or blocked on the right side
	//1
	private bool r1SecondForwardClear;
	private bool r1FirstForwardClear;
	private bool r1MiddleClear;
	private bool r1FirstBackClear;
	private bool r1SecondBackClear;
	//2
	private bool r2SecondForwardClear;
	private bool r2FirstForwardClear;
	private bool r2MiddleClear;
	private bool r2FirstBackClear;
	private bool r2SecondBackClear;
	//3
	private bool r3SecondForwardClear;
	private bool r3FirstForwardClear;
	private bool r3MiddleClear;
	private bool r3FirstBackClear;
	private bool r3SecondBackClear;
	
	//lets you know how long a certain point has been clear to go to on the right side
	//1
	private float r1SecondForwardTimer;
	private float r1FirstForwardTimer;
	private float r1MiddleTimer;
	private float r1FirstBackTimer;
	private float r1SecondBackTimer;
	//2
	private float r2SecondForwardTimer;
	private float r2FirstForwardTimer;
	private float r2MiddleTimer;
	private float r2FirstBackTimer;
	private float r2SecondBackTimer;
	//3
	private float r3SecondForwardTimer;
	private float r3FirstForwardTimer;
	private float r3MiddleTimer;
	private float r3FirstBackTimer;
	private float r3SecondBackTimer;
	
	//lets you know if surface detector hit on the right side
	//1
	private bool r1FirstForwardSurfaceDetectorsHit;
	private bool r1MiddleSurfaceDetectorsHit;
	private bool r1FirstBackSurfaceDetectorsHit;
	private bool r1SecondBackSurfaceDetectorsHit;
	private bool r1ThirdBackSurfaceDetectorsHit;
	//2
	private bool r2FirstForwardSurfaceDetectorsHit;
	private bool r2MiddleSurfaceDetectorsHit;
	private bool r2FirstBackSurfaceDetectorsHit;
	private bool r2SecondBackSurfaceDetectorsHit;
	private bool r2ThirdBackSurfaceDetectorsHit;
	//3
	private bool r3FirstForwardSurfaceDetectorsHit;
	private bool r3MiddleSurfaceDetectorsHit;
	private bool r3FirstBackSurfaceDetectorsHit;
	private bool r3SecondBackSurfaceDetectorsHit;
	private bool r3ThirdBackSurfaceDetectorsHit;
	
	//lets you know if switch point was hit on the right side
	//1
	private bool r1SecondForwardHit;
	private bool r1FirstForwardHit;
	private bool r1MiddleHit;
	private bool r1FirstBackHit;
	private bool r1SecondBackHit;
	private bool r1ThirdBackHit;
	//2
	private bool r2SecondForwardHit;
	private bool r2FirstForwardHit;
	private bool r2MiddleHit;
	private bool r2FirstBackHit;
	private bool r2SecondBackHit;
	private bool r2ThirdBackHit;
	//3
	private bool r3SecondForwardHit;
	private bool r3FirstForwardHit;
	private bool r3MiddleHit;
	private bool r3FirstBackHit;
	private bool r3SecondBackHit;
	private bool r3ThirdBackHit;
	
	//lets you know where the switch point hit on the right side
	//1
	private Vector3 r1SecondForwardHitPoint;
	private Vector3 r1FirstForwardHitPoint;
	private Vector3 r1MiddleHitPoint;
	private Vector3 r1FirstBackHitPoint;
	private Vector3 r1SecondBackHitPoint;
	//2
	private Vector3 r2SecondForwardHitPoint;
	private Vector3 r2FirstForwardHitPoint;
	private Vector3 r2MiddleHitPoint;
	private Vector3 r2FirstBackHitPoint;
	private Vector3 r2SecondBackHitPoint;
	//3
	private Vector3 r3SecondForwardHitPoint;
	private Vector3 r3FirstForwardHitPoint;
	private Vector3 r3MiddleHitPoint;
	private Vector3 r3FirstBackHitPoint;
	private Vector3 r3SecondBackHitPoint;
	//
	
	//walking off ledge variables
	[HideInInspector]
	public bool turnBack = false;
	private float turnBackTimer = 0.0f;
	private bool turnBackMiddle = true;
	private bool turnBackLeft;
	private bool turnBackRight;
	[HideInInspector]
	public bool back2 = false;
	private Vector3 backPoint;
	private Vector3 turnBackPoint;
	private bool onPlatform;
	private Vector3 originalPlatformPosition;
	private Vector3 originalTurnBackPoint;
	private float originalPlayerPosY;
	private Quaternion originalPlatformRotation;
	private Quaternion originalBackRotation;
	private bool platformParentLastUpdate;
	[HideInInspector]
	public Vector3 backHit;
	private Quaternion backRotation;
	private float angleBetweenPlayerAndTurnBackWall;
	private float jumpedOffTimer = 1.0f;
	private bool ledgeJumpPossible;
	private Vector3 jumpedOffDirection;
	private Vector3 jumpDir;
	private Vector3 vel;
	private float yPosDiff;
	private float lastYPos;
	private bool inAirFromJumpingOffLedge;
	private bool inAirFromJumpingOffLedgeNoCollision;
	private bool canJumpOffLedge;
	private bool animateLedgeJump;
	private bool turnedBackToLedge;
	private Vector3 spaceBelowNeededToJump2;
	private bool nonJumpTurnAround;
	private bool jumpDust;
	private GameObject jumpLandingEffect2;
	
	//enabling and disabling script variables
	private bool currentlyEnablingAndDisablingScripts = false; //determines whether the scripts in scriptsToEnableOnGrab or scriptsToDisableOnGrab are currently being enabled/disabled or not
	private bool scriptWarning = false; //determines whether or not the user entered any script names that do not exist on the player
	
	//variables to hold values
	private float onLedgeHeight2;
	private float height2;
	private float length2;
	private float width2;
	private Vector3 posChange1;
	private Vector3 posChange2;
	private Vector3 midSidePosChange;
	private Vector3 upHeight;
	private Vector3 forwardLength;
	private Vector3 rightWidth;
	private Vector3 ledgeSwitchHeight;
	private Vector3 ledgeSwitchSurfaceLength;
	private Vector3 ledgeSwitchFirstNoSurfaceLength;
	private Vector3 ledgeSwitchSecondNoSurfaceLength;
	private Vector3 ledgeSwitchThirdNoSurfaceLength;
	private Vector3 ledgeSwitchFirstWidthBack;
	private Vector3 ledgeSwitchFirstWidthForward;
	private Vector3 ledgeSwitchSecondWidthForward;
	private Vector3 ledgeSwitchSecondWidthBack;
	private Vector3 ledgeSwitchThirdWidthForward;
	private Vector3 ledgeSwitchThirdWidthBack;
	
	private float noCollisionTimer; //time since last collision
	private bool inMidAir; //no longer attached to a ledge, in mid-air
	private bool axisInUse = false; //determines if a movement axis was just used
	private RaycastHit hit = new RaycastHit(); //information on the hit point of a raycast
	private RaycastHit switchHitPoint = new RaycastHit(); //information on the hit point of a raycast used for ledge switching
	private Animator animator; //the "Animator" component of the script holder
	private int entryAnimation; //the stateNameHash of the default/entry animation in the player's Animator component
	
	public GameObject dustEffect; //optional dust effect to appear when finished climbing up and on to a ledge
	private CharacterController characterController; //the "CharacterController" component of the script holder (if he has one)
	private Rigidbody rigidBody; //the "Rigidbody" component of the script holder (if he has one)
	public LayerMask collisionLayers = ~((1 << 2) | (1 << 4)); //the layers that the detectors (raycasts/linecasts) will collide with
	
	// Use this for initialization
	void Start () {
		
		//getting the player's CharacterController component (if he has one)
		if (GetComponent<CharacterController>() && GetComponent<CharacterController>().enabled){
			characterController = GetComponent<CharacterController>();
			rigidBody = null;
		}
		//getting the player's Rigidbody component (if he has one)
		else if (GetComponent<Rigidbody>()){
			rigidBody = GetComponent<Rigidbody>();
			characterController = null;
		}
		
		//getting the player's default animation, so that we know what animation to switch to when letting go of a ledge
		if (GetComponent<Animator>()){
			entryAnimation = GetComponent<Animator>().GetCurrentAnimatorStateInfo(0).fullPathHash;
		}
	}
	
	void LateUpdate () {
		DrawDetectors();
		GetLedgeSwitchingDetectorValues();
		DrawFirstLedgeSwitchingDetectors();
		DrawSecondLedgeSwitchingDetectors();
		DrawThirdLedgeSwitchingDetectors();
	}

    void DrawDetectors () {
		//ClimbingDetectors
		//climbable
		spaceAboveHeadNeededToGrabOn2 = upHeight*(climbingDetectors.spaceAboveHeadNeededToGrabOn);
		spaceAboveHeadNeededToClimbUp2 = upHeight*(climbingDetectors.spaceAboveHeadNeededToClimbUp);
		rodHoldingLedgeDetectorHeight2 = upHeight*(climbingDetectors.rodHoldingLedgeDetectorHeight);
		rodHoldingLedgeDetectorForward2 = forwardLength*(climbingDetectors.rodHoldingLedgeDetectorForward);
		ledgeDetectorHeight2 = upHeight*(climbingDetectors.ledgeDetectorHeight - 0.48f);
		ledgeDetectorForward2 = forwardLength*(climbingDetectors.ledgeDetectorForward);
		topOfLedgeSurfaceDetectorHeight2 = (climbingDetectors.topOfLedgeSurfaceDetectorHeight + 0.25f)*height2;
		//surface levels
		maxSurfaceLevelHeight2 = upHeight*(climbingDetectors.maxSurfaceLevelHeight);
		underPlatformMaxSurfaceLevelHeight2 = upHeight*(climbingDetectors.underPlatformMaxSurfaceLevelHeight);
		//non-ledge surface detectors
		nonLedgeSurfaceDetectorsHeight2 = transform.up*(climbingDetectors.nonLedgeSurfaceDetectorsHeight - 0.48f);
		nonLedgeSurfaceDetectorsForward2 = forwardLength*(climbingDetectors.nonLedgeSurfaceDetectorsForward);
		if (climbingDetectors.showClimbDetectionRays || showMainRaysOnly){
			Debug.DrawLine(transform.position + posChange2 + upHeight, transform.position + posChange2 + upHeight + forwardLength/1.25f + upHeight*1.5f + (rodHoldingLedgeDetectorHeight2 + rodHoldingLedgeDetectorForward2), Color.red);
			Debug.DrawLine(transform.position + posChange2 + upHeight + forwardLength/1.25f + upHeight*1.5f + (rodHoldingLedgeDetectorHeight2 + rodHoldingLedgeDetectorForward2), transform.position + posChange2 + upHeight*0.8f + forwardLength/1.75f + (ledgeDetectorHeight2 + ledgeDetectorForward2 + rodHoldingLedgeDetectorHeight2 + rodHoldingLedgeDetectorForward2), Color.red);
			Debug.DrawLine(transform.position + posChange2 + upHeight/2 + forwardLength/1.52f + upHeight*0.9f + (ledgeDetectorHeight2*(0.65f - (topOfLedgeSurfaceDetectorHeight2*0.59f)) + (ledgeDetectorForward2*(0.65f - (topOfLedgeSurfaceDetectorHeight2*0.59f))) + rodHoldingLedgeDetectorHeight2 + rodHoldingLedgeDetectorForward2 + transform.forward*(topOfLedgeSurfaceDetectorHeight2*length2)*0.14f + transform.up*(topOfLedgeSurfaceDetectorHeight2*height2)), transform.position + posChange2 + upHeight*0.8f + forwardLength/1.75f + (ledgeDetectorHeight2 + ledgeDetectorForward2 + rodHoldingLedgeDetectorHeight2 + rodHoldingLedgeDetectorForward2), Color.magenta);
			Debug.DrawLine(transform.position + posChange2 + upHeight + forwardLength/1.25f + upHeight*1.5f + (rodHoldingLedgeDetectorHeight2 + rodHoldingLedgeDetectorForward2), transform.position + posChange2 + upHeight + forwardLength + upHeight*1.25f + (rodHoldingLedgeDetectorHeight2 + rodHoldingLedgeDetectorForward2), Color.blue);
			//space above head needed
			Debug.DrawLine(transform.position + posChange2 + upHeight, transform.position + posChange2 + upHeight*2.5f + spaceAboveHeadNeededToClimbUp2, Color.blue);
			Debug.DrawLine(transform.position + posChange2 - forwardLength/20, transform.position + posChange2 - forwardLength/20 + upHeight*1.5f + spaceAboveHeadNeededToGrabOn2, Color.cyan);
		}
		if (!showMainRaysOnly){
			if (climbingDetectors.showSurfaceLevelRays){
				//climb surface level detectors
				Debug.DrawLine(transform.position + posChange2 + upHeight*2.2f + forwardLength/1.75f + maxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*0.8f + forwardLength/1.75f, Color.magenta);
				Debug.DrawLine(transform.position + posChange2 + upHeight*1.5f + forwardLength/1.75f + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f + forwardLength/1.75f + maxSurfaceLevelHeight2, Color.magenta);
				//under platform
				Debug.DrawLine(transform.position + posChange2 + upHeight*1.5f + forwardLength/1.7f + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*0.8f + forwardLength/1.7f, Color.green);
			}
			if (climbingDetectors.showNonLedgeSurfaceDetectionRays){
				//slope and non-ledge detectors
				Debug.DrawLine(transform.position + posChange1 + ((transform.up + nonLedgeSurfaceDetectorsHeight2)*height2)*0.3f, transform.position + posChange1 + ((transform.up + nonLedgeSurfaceDetectorsHeight2)*height2)*0.1f + forwardLength + nonLedgeSurfaceDetectorsForward2, Color.blue);
				Debug.DrawLine(transform.position + posChange1 + ((transform.up + nonLedgeSurfaceDetectorsHeight2)*height2)*0.6f, transform.position + posChange1 + ((transform.up + nonLedgeSurfaceDetectorsHeight2)*height2)*0.6f + forwardLength/2.5f + nonLedgeSurfaceDetectorsForward2, Color.blue);
				Debug.DrawLine(transform.position + posChange1 + ((transform.up + nonLedgeSurfaceDetectorsHeight2)*height2)*0.8f, transform.position + posChange1 + ((transform.up + nonLedgeSurfaceDetectorsHeight2)*height2)*0.8f + forwardLength/2.3f + nonLedgeSurfaceDetectorsForward2, Color.blue);
			}
		}
		
		//MovingDetectors
		//movement
		heightOfMidSideDetectors2 = transform.up*(movingDetectors.movingDetectorsHeight);
		firstFrontWallDetectorsForward2 = forwardLength*(movingDetectors.firstFrontWallDetectorsForward);
		firstFrontWallDetectorsWidth2 = rightWidth*(movingDetectors.firstFrontWallDetectorsWidth);
		firstBackWallDetectorsForward2 = forwardLength*(movingDetectors.firstBackWallDetectorsForward);
		firstBackWallDetectorsWidth2 = rightWidth*(movingDetectors.firstBackWallDetectorsWidth);
		secondFrontWallDetectorsForward2 = forwardLength*(movingDetectors.secondFrontWallDetectorsForward);
		secondFrontWallDetectorsWidth2 = rightWidth*(movingDetectors.secondFrontWallDetectorsWidth);
		secondBackWallDetectorsForward2 = forwardLength*(movingDetectors.secondBackWallDetectorsForward);
		secondBackWallDetectorsWidth2 = rightWidth*(movingDetectors.secondBackWallDetectorsWidth);
		frontTopOfLedgeSurfaceDetectorsForward2 = forwardLength*(movingDetectors.frontTopOfLedgeSurfaceDetectorsForward);
		backTopOfLedgeSurfaceDetectorsForward2 = forwardLength*(movingDetectors.backTopOfLedgeSurfaceDetectorsForward);
		//ground
		minDistFromGroundHeight2 = upHeight*(movingDetectors.minDistFromGroundHeight);
		minDistFromGroundWidth2 = rightWidth*(movingDetectors.minDistFromGroundWidth);
		if (movingDetectors.showMovingRays || showMainRaysOnly){
			//left
			//front vertical line
			Debug.DrawLine(transform.position + midSidePosChange + posChange2 + upHeight*1.2f + forwardLength/1.25f + upHeight*1.5f - (rightWidth/2) + frontTopOfLedgeSurfaceDetectorsForward2, transform.position + midSidePosChange + posChange2 + upHeight + forwardLength/1.75f - upHeight/2 - (rightWidth/2) + frontTopOfLedgeSurfaceDetectorsForward2, Color.blue);
			//back vertical line
			Debug.DrawLine(transform.position + midSidePosChange + posChange2 + upHeight*1.2f - forwardLength/1.75f + upHeight*1.5f - (rightWidth/2) + backTopOfLedgeSurfaceDetectorsForward2, transform.position + midSidePosChange + posChange2 + upHeight - forwardLength/2 - upHeight/2 - (rightWidth/2) + backTopOfLedgeSurfaceDetectorsForward2, Color.blue);
			//side horizontal line
			Debug.DrawLine(transform.position + midSidePosChange + posChange2 + upHeight - forwardLength - (rightWidth/2), transform.position + midSidePosChange + posChange2 + upHeight + forwardLength - (rightWidth/2) + secondFrontWallDetectorsForward2, Color.blue);
			//check front
			Debug.DrawLine(transform.position + midSidePosChange + posChange2 + upHeight + forwardLength/2 - (rightWidth/2) + firstFrontWallDetectorsForward2, transform.position + midSidePosChange + posChange2 + upHeight + forwardLength/2 + rightWidth + firstFrontWallDetectorsForward2 + firstFrontWallDetectorsWidth2, Color.blue);
			Debug.DrawLine(transform.position + midSidePosChange + posChange2 + upHeight + forwardLength - (rightWidth/2) + secondFrontWallDetectorsForward2, transform.position + midSidePosChange + posChange2 + upHeight + forwardLength + rightWidth + secondFrontWallDetectorsForward2 + secondFrontWallDetectorsWidth2, Color.blue);
			//check back
			Debug.DrawLine(transform.position + midSidePosChange + posChange2 + upHeight - forwardLength/3 + firstBackWallDetectorsForward2, transform.position + midSidePosChange + posChange2 + upHeight - forwardLength/3 - rightWidth + firstBackWallDetectorsForward2 + firstBackWallDetectorsWidth2, Color.blue);
			Debug.DrawLine(transform.position + midSidePosChange + posChange2 + upHeight - forwardLength/2 + secondBackWallDetectorsForward2, transform.position + midSidePosChange + posChange2 + upHeight - forwardLength/2 - rightWidth + secondBackWallDetectorsForward2 + secondBackWallDetectorsWidth2, Color.blue);
		
			//right
			//front vertical line
			Debug.DrawLine(transform.position + midSidePosChange + posChange2 + upHeight*1.2f + forwardLength/1.25f + upHeight*1.5f + (rightWidth/2) + frontTopOfLedgeSurfaceDetectorsForward2, transform.position + midSidePosChange + posChange2 + upHeight + forwardLength/1.75f - upHeight/2 + (rightWidth/2) + frontTopOfLedgeSurfaceDetectorsForward2, Color.blue);
			//back vertical line
			Debug.DrawLine(transform.position + midSidePosChange + posChange2 + upHeight*1.2f - forwardLength/1.75f + upHeight*1.5f + (rightWidth/2) + backTopOfLedgeSurfaceDetectorsForward2, transform.position + midSidePosChange + posChange2 + upHeight - forwardLength/2 - upHeight/2 + (rightWidth/2) + backTopOfLedgeSurfaceDetectorsForward2, Color.blue);
			//side horizontal line
			Debug.DrawLine(transform.position + midSidePosChange + posChange2 + upHeight - forwardLength + (rightWidth/2), transform.position + midSidePosChange + posChange2 + upHeight + forwardLength + (rightWidth/2) + secondFrontWallDetectorsForward2, Color.blue);
			//check front
			Debug.DrawLine(transform.position + midSidePosChange + posChange2 + upHeight + forwardLength/2 + (rightWidth/2) + firstFrontWallDetectorsForward2, transform.position + midSidePosChange + posChange2 + upHeight + forwardLength/2 - rightWidth + firstFrontWallDetectorsForward2 - firstFrontWallDetectorsWidth2, Color.blue);
			Debug.DrawLine(transform.position + midSidePosChange + posChange2 + upHeight + forwardLength + (rightWidth/2) + secondFrontWallDetectorsForward2, transform.position + midSidePosChange + posChange2 + upHeight + forwardLength - rightWidth + secondFrontWallDetectorsForward2 - secondFrontWallDetectorsWidth2, Color.blue);
			//check back
			Debug.DrawLine(transform.position + midSidePosChange + posChange2 + upHeight - forwardLength/3 + firstBackWallDetectorsForward2, transform.position + midSidePosChange + posChange2 + upHeight - forwardLength/3 + rightWidth + firstBackWallDetectorsForward2 - firstBackWallDetectorsWidth2, Color.blue);
			Debug.DrawLine(transform.position + midSidePosChange + posChange2 + upHeight - forwardLength/2 + secondBackWallDetectorsForward2, transform.position + midSidePosChange + posChange2 + upHeight - forwardLength/2 + rightWidth + secondBackWallDetectorsForward2 - secondBackWallDetectorsWidth2, Color.blue);
		}
		if (movingDetectors.showGroundRays || showMainRaysOnly){
			//check left bottom
			Debug.DrawLine(transform.position + posChange1 + upHeight - (rightWidth/4)  - minDistFromGroundWidth2, transform.position + posChange1 - upHeight/4 - (rightWidth/4) + minDistFromGroundHeight2 - minDistFromGroundWidth2, Color.red);
			if (sL){
				Debug.DrawLine(transform.position + posChange1 + upHeight - (rightWidth/4) - minDistFromGroundWidth2, transform.position + posChange1 - upHeight/3 - (rightWidth/4) + minDistFromGroundHeight2 - minDistFromGroundWidth2, Color.red);
			}
			//check right bottom
			Debug.DrawLine(transform.position + posChange1 + upHeight + (rightWidth/4) + minDistFromGroundWidth2, transform.position + posChange1 - upHeight/4 + (rightWidth/4) + minDistFromGroundHeight2 + minDistFromGroundWidth2, Color.red);
			if (sR){
				Debug.DrawLine(transform.position + posChange1 + upHeight + (rightWidth/4) + minDistFromGroundWidth2, transform.position + posChange1 - upHeight/3 + (rightWidth/4) + minDistFromGroundHeight2 + minDistFromGroundWidth2, Color.red);
			}
			//check middle bottom
			Debug.DrawLine(transform.position + posChange1 + upHeight, transform.position + posChange1 - upHeight/3 + minDistFromGroundHeight2, Color.red);

		}
		
		//BlockingDetectors
		//rotation blocking
		preventRotatingToSideWallHeight2 = upHeight*(blockingDetectors.preventRotatingToSideWallHeight);
		preventRotatingToSideWallWidth2 = rightWidth*(blockingDetectors.preventRotatingToSideWallWidth);
		firstAllowRotatingIfLedgeHitWidth2 = rightWidth*(blockingDetectors.firstAllowRotatingIfLedgeHitWidth);
		secondAllowRotatingIfLedgeHitWidth2 = rightWidth*(blockingDetectors.secondAllowRotatingIfLedgeHitWidth);
		//movement blocking
		midSideWallDetectorsForward2 = forwardLength*(blockingDetectors.midSideWallDetectorsForward);
		midSideWallDetectorsWidth2 = rightWidth*(blockingDetectors.midSideWallDetectorsWidth);
		sideWallDetectorsWidth2 = rightWidth*(blockingDetectors.sideWallDetectorsWidth);
		frontSideBlockageDetectorsHeight2 = upHeight*(blockingDetectors.frontSideBlockageDetectorsHeight);
		frontSideBlockageDetectorsWidth2 = rightWidth*(blockingDetectors.frontSideBlockageDetectorsWidth);
		frontSideBlockageDetectorsForward2 = forwardLength*(blockingDetectors.frontSideBlockageDetectorsForward);
		aboveHeadPlatformDetectorsHeight2 = upHeight*(blockingDetectors.aboveHeadPlatformDetectorsHeight);
		aboveHeadPlatformDetectorsForward2 = forwardLength*(blockingDetectors.aboveHeadPlatformDetectorsForward);
		//angles
		ledgeAngleDetectorsHeight2 = upHeight*(blockingDetectors.ledgeAngleDetectorsHeight);
		ledgeAngleDetectorsWidth2 = rightWidth*(blockingDetectors.ledgeAngleDetectorsWidth);
		if (!showMainRaysOnly){
			if (blockingDetectors.showRotationBlockingRays){
				//left wall detectors
				Debug.DrawLine(transform.position + posChange2 + upHeight - rightWidth/10 + preventRotatingToSideWallHeight2, transform.position + posChange2 + upHeight - rightWidth*1.35f + preventRotatingToSideWallHeight2 - preventRotatingToSideWallWidth2, Color.red);
				Debug.DrawLine(transform.position + posChange2 + upHeight*1.25f - rightWidth/10 + preventRotatingToSideWallHeight2, transform.position + posChange2 + upHeight*1.25f - rightWidth*1.35f + preventRotatingToSideWallHeight2 - preventRotatingToSideWallWidth2, Color.red);
				Debug.DrawLine(transform.position + posChange2 + upHeight*1.5f - rightWidth/10 + preventRotatingToSideWallHeight2, transform.position + posChange2 + upHeight*1.5f - rightWidth*1.35f + preventRotatingToSideWallHeight2 - preventRotatingToSideWallWidth2, Color.red);
				Debug.DrawLine(transform.position + posChange2 + upHeight*1.75f - rightWidth/10 + preventRotatingToSideWallHeight2, transform.position + posChange2 + upHeight*1.75f - rightWidth*1.35f + preventRotatingToSideWallHeight2 - preventRotatingToSideWallWidth2, Color.red);
				//left ledge detectors
				Debug.DrawLine(transform.position + posChange2 + upHeight*1.75f - rightWidth/1.5f + preventRotatingToSideWallHeight2 - preventRotatingToSideWallWidth2 - firstAllowRotatingIfLedgeHitWidth2, transform.position + posChange2 + upHeight*0.8f - rightWidth/1.5f + preventRotatingToSideWallHeight2 - preventRotatingToSideWallWidth2 - firstAllowRotatingIfLedgeHitWidth2, Color.green);
				Debug.DrawLine(transform.position + posChange2 + upHeight*1.75f - rightWidth + preventRotatingToSideWallHeight2 - preventRotatingToSideWallWidth2 - secondAllowRotatingIfLedgeHitWidth2, transform.position + posChange2 + upHeight*0.8f - rightWidth + preventRotatingToSideWallHeight2 - preventRotatingToSideWallWidth2 - secondAllowRotatingIfLedgeHitWidth2, Color.green);
	
				//right wall detectors
				Debug.DrawLine(transform.position + posChange2 + upHeight + rightWidth/10 + preventRotatingToSideWallHeight2, transform.position + posChange2 + upHeight + rightWidth*1.35f + preventRotatingToSideWallHeight2 + preventRotatingToSideWallWidth2, Color.red);
				Debug.DrawLine(transform.position + posChange2 + upHeight*1.25f + rightWidth/10 + preventRotatingToSideWallHeight2, transform.position + posChange2 + upHeight*1.25f + rightWidth*1.35f + preventRotatingToSideWallHeight2 + preventRotatingToSideWallWidth2, Color.red);
				Debug.DrawLine(transform.position + posChange2 + upHeight*1.5f + rightWidth/10 + preventRotatingToSideWallHeight2, transform.position + posChange2 + upHeight*1.5f + rightWidth*1.35f + preventRotatingToSideWallHeight2 + preventRotatingToSideWallWidth2, Color.red);
				Debug.DrawLine(transform.position + posChange2 + upHeight*1.75f + rightWidth/10 + preventRotatingToSideWallHeight2, transform.position + posChange2 + upHeight*1.75f + rightWidth*1.35f + preventRotatingToSideWallHeight2 + preventRotatingToSideWallWidth2, Color.red);
				//right ledge detectors
				Debug.DrawLine(transform.position + posChange2 + upHeight*1.75f + rightWidth/1.5f + preventRotatingToSideWallHeight2 + preventRotatingToSideWallWidth2 + firstAllowRotatingIfLedgeHitWidth2, transform.position + posChange2 + upHeight*0.8f + rightWidth/1.5f + preventRotatingToSideWallHeight2 + preventRotatingToSideWallWidth2 + firstAllowRotatingIfLedgeHitWidth2, Color.green);
				Debug.DrawLine(transform.position + posChange2 + upHeight*1.75f + rightWidth + preventRotatingToSideWallHeight2 + preventRotatingToSideWallWidth2 + secondAllowRotatingIfLedgeHitWidth2, transform.position + posChange2 + upHeight*0.8f + rightWidth + preventRotatingToSideWallHeight2 + preventRotatingToSideWallWidth2 + secondAllowRotatingIfLedgeHitWidth2, Color.green);
			}
			if (blockingDetectors.showMovementBlockingRays){
				//forward side non-climbable detectors
				//left
				// must be hit first to determine the state of leftMovable
				Debug.DrawLine(transform.position + posChange2 + upHeight - rightWidth/10, transform.position + posChange2 + (upHeight*2) + forwardLength/1.7f - (rightWidth/4) + midSideWallDetectorsForward2 - midSideWallDetectorsWidth2, Color.yellow);
				//to the side
				Debug.DrawLine(transform.position + posChange2 + upHeight - rightWidth/10, transform.position + posChange2 + (upHeight*2) - rightWidth - sideWallDetectorsWidth2, Color.yellow);
				//right
				// must be hit first to determine the state of rightMovable
				Debug.DrawLine(transform.position + posChange2 + upHeight + rightWidth/10, transform.position + posChange2 + (upHeight*2) + forwardLength/1.7f + (rightWidth/4) + midSideWallDetectorsForward2 + midSideWallDetectorsWidth2, Color.yellow);
				//to the side
				Debug.DrawLine(transform.position + posChange2 + upHeight + rightWidth/10, transform.position + posChange2 + (upHeight*2) + rightWidth + sideWallDetectorsWidth2, Color.yellow);
		
				//if front sides hit, do not allow movement
				//left
				Debug.DrawLine(transform.position + posChange2 + upHeight*1.5f - (rightWidth/4) + frontSideBlockageDetectorsHeight2 - frontSideBlockageDetectorsWidth2, transform.position + posChange2 + upHeight*1.5f + forwardLength*1.2f - (rightWidth/4) + frontSideBlockageDetectorsForward2 + frontSideBlockageDetectorsHeight2 - frontSideBlockageDetectorsWidth2, Color.green);
				//right
				Debug.DrawLine(transform.position + posChange2 + upHeight*1.5f + (rightWidth/4) + frontSideBlockageDetectorsHeight2 + frontSideBlockageDetectorsWidth2, transform.position + posChange2 + upHeight*1.5f + forwardLength*1.2f + (rightWidth/4) + frontSideBlockageDetectorsForward2 + frontSideBlockageDetectorsHeight2 + frontSideBlockageDetectorsWidth2, Color.green);
		
				//above head platform detectors, allows movement if hit
				//left
				Debug.DrawLine(transform.position + posChange2 + upHeight*1.5f + forwardLength/1.6f - (rightWidth/4) + frontSideBlockageDetectorsHeight2 - frontSideBlockageDetectorsWidth2 + aboveHeadPlatformDetectorsForward2, transform.position + posChange2 + upHeight*2.2f + forwardLength/1.25f - (rightWidth/4) + frontSideBlockageDetectorsHeight2 - frontSideBlockageDetectorsWidth2 + aboveHeadPlatformDetectorsForward2 + aboveHeadPlatformDetectorsHeight2, Color.red);
				//right
				Debug.DrawLine(transform.position + posChange2 + upHeight*1.5f + forwardLength/1.6f + (rightWidth/4) + frontSideBlockageDetectorsHeight2 + frontSideBlockageDetectorsWidth2 + aboveHeadPlatformDetectorsForward2, transform.position + posChange2 + upHeight*2.2f + forwardLength/1.25f + (rightWidth/4) + frontSideBlockageDetectorsHeight2 + frontSideBlockageDetectorsWidth2 + aboveHeadPlatformDetectorsForward2 + aboveHeadPlatformDetectorsHeight2, Color.red);
			}
			if (blockingDetectors.showAngleDetectionRays){
				//side angle detectors
				//left
				Debug.DrawLine(transform.position + posChange2 + forwardLength/2f + upHeight*1.5f - (rightWidth/2) + ledgeAngleDetectorsHeight2 - ledgeAngleDetectorsWidth2, transform.position + posChange2 + upHeight + forwardLength/2f - upHeight/2 - (rightWidth/2) - ledgeAngleDetectorsWidth2, Color.red);
				//left forward
				Debug.DrawLine(transform.position + posChange2 + forwardLength/2f + upHeight*1.5f - (rightWidth/2) + ledgeAngleDetectorsHeight2 - ledgeAngleDetectorsWidth2, transform.position + posChange2 + upHeight*1.5f + forwardLength - (rightWidth/2) + ledgeAngleDetectorsHeight2 - ledgeAngleDetectorsWidth2, Color.red);

				//right
				Debug.DrawLine(transform.position + posChange2 + forwardLength/2f + upHeight*1.5f + (rightWidth/2) + ledgeAngleDetectorsHeight2 + ledgeAngleDetectorsWidth2, transform.position + posChange2 + upHeight + forwardLength/2f - upHeight/2 + (rightWidth/2) + ledgeAngleDetectorsWidth2, Color.red);
				//right forward
				Debug.DrawLine(transform.position + posChange2 + forwardLength/2f + upHeight*1.5f + (rightWidth/2) + ledgeAngleDetectorsHeight2 + ledgeAngleDetectorsWidth2, transform.position + posChange2 + upHeight*1.5f + forwardLength + (rightWidth/2) + ledgeAngleDetectorsHeight2 + ledgeAngleDetectorsWidth2, Color.red);
			}
		}
		
		//WalkingOffLedgeDetectors
		//walk off ledge
		spaceInFrontNeededToGrabBackOn2 = forwardLength*(walkingOffLedgeDetectors.spaceInFrontNeededToGrabBackOn);
		firstSideLedgeDetectorsHeight2 = upHeight*(walkingOffLedgeDetectors.firstSideLedgeDetectorsHeight);
		secondSideLedgeDetectorsHeight2 = upHeight*(walkingOffLedgeDetectors.secondSideLedgeDetectorsHeight);
		thirdSideLedgeDetectorsHeight2 = upHeight*(walkingOffLedgeDetectors.thirdSideLedgeDetectorsHeight);
		sideLedgeDetectorsWidth2 = rightWidth*(walkingOffLedgeDetectors.sideLedgeDetectorsWidth);
		sideLedgeDetectorsLength2 = forwardLength*(walkingOffLedgeDetectors.sideLedgeDetectorsLength);
		spaceBelowNeededToGrabBackOnHeight2 = upHeight*(walkingOffLedgeDetectors.spaceBelowNeededToGrabBackOnHeight + 0.07f);
		spaceBelowNeededToGrabBackOnForward2 = forwardLength*(walkingOffLedgeDetectors.spaceBelowNeededToGrabBackOnForward);
		grabBackOnLocationHeight2 = upHeight*(walkingOffLedgeDetectors.grabBackOnLocationHeight);
		grabBackOnLocationWidth2 = rightWidth*(walkingOffLedgeDetectors.grabBackOnLocationWidth);
		grabBackOnLocationForward2 = forwardLength*(walkingOffLedgeDetectors.grabBackOnLocationForward);
		//jump off ledge
		spaceBelowNeededToJump2 = upHeight*(walkingOffLedgeDetectors.spaceBelowNeededToJump);
		if (walkingOffLedgeDetectors.showGrabBackOnToLedgesRays || showMainRaysOnly){
			//in front
			Debug.DrawLine(transform.position + posChange1 + upHeight*0.5f, transform.position + posChange1 + forwardLength/1.5f + upHeight*0.5f + spaceInFrontNeededToGrabBackOn2, Color.red);
			//below
			Debug.DrawLine(transform.position + posChange1 + forwardLength/4 + upHeight*0.5f + spaceBelowNeededToGrabBackOnForward2, transform.position + posChange1 + forwardLength/4 - upHeight*1.5f - spaceBelowNeededToGrabBackOnHeight2 + spaceBelowNeededToGrabBackOnForward2, Color.red);
			Debug.DrawLine(transform.position + posChange1 + forwardLength/1.5f + upHeight*0.5f + spaceInFrontNeededToGrabBackOn2, transform.position + posChange1 + forwardLength/1.5f - upHeight*1.5f + spaceInFrontNeededToGrabBackOn2 - spaceBelowNeededToGrabBackOnHeight2, Color.red);
			
			//grab back on location
			//middle
			Debug.DrawLine(transform.position + posChange1 + upHeight - forwardLength/2 + grabBackOnLocationForward2 + grabBackOnLocationHeight2, transform.position + posChange1 - upHeight - forwardLength/2 + grabBackOnLocationForward2, Color.yellow);
			//left
			Debug.DrawLine(transform.position + posChange1 + upHeight - forwardLength/2 - rightWidth*0.4f + grabBackOnLocationForward2 - grabBackOnLocationWidth2 + grabBackOnLocationHeight2, transform.position + posChange1 - upHeight - forwardLength/2 - rightWidth*0.4f + grabBackOnLocationForward2 - grabBackOnLocationWidth2, Color.yellow);
			//right
			Debug.DrawLine(transform.position + posChange1 + upHeight - forwardLength/2 + rightWidth*0.4f + grabBackOnLocationForward2 + grabBackOnLocationWidth2 + grabBackOnLocationHeight2, transform.position + posChange1 - upHeight - forwardLength/2 + rightWidth*0.4f + grabBackOnLocationForward2 + grabBackOnLocationWidth2, Color.yellow);
			
			//side blocking ledge detectors
			//left
			//first
			Debug.DrawLine(transform.position + posChange1 + forwardLength/4 - upHeight*0.1f + firstSideLedgeDetectorsHeight2 + spaceBelowNeededToGrabBackOnForward2, transform.position + posChange1 + forwardLength/2 - upHeight*0.1f - rightWidth/4 + sideLedgeDetectorsLength2 + firstSideLedgeDetectorsHeight2 - sideLedgeDetectorsWidth2 + spaceBelowNeededToGrabBackOnForward2, Color.red);
			Debug.DrawLine(transform.position + posChange1 + forwardLength/3 - upHeight*0.1f + firstSideLedgeDetectorsHeight2 + spaceBelowNeededToGrabBackOnForward2, transform.position + posChange1 - forwardLength/4 - upHeight*0.1f + rightWidth/4 - sideLedgeDetectorsLength2 + firstSideLedgeDetectorsHeight2 + spaceBelowNeededToGrabBackOnForward2, Color.red);
			//second
			Debug.DrawLine(transform.position + posChange1 + forwardLength/4 - upHeight*0.5f + secondSideLedgeDetectorsHeight2 + spaceBelowNeededToGrabBackOnForward2, transform.position + posChange1 + forwardLength/2 - upHeight*0.5f - rightWidth/4 + sideLedgeDetectorsLength2 + secondSideLedgeDetectorsHeight2 - sideLedgeDetectorsWidth2 + spaceBelowNeededToGrabBackOnForward2, Color.red);
			Debug.DrawLine(transform.position + posChange1 + forwardLength/3 - upHeight*0.5f + secondSideLedgeDetectorsHeight2 + spaceBelowNeededToGrabBackOnForward2, transform.position + posChange1 - forwardLength/4 - upHeight*0.5f + rightWidth/4 - sideLedgeDetectorsLength2 + secondSideLedgeDetectorsHeight2 + spaceBelowNeededToGrabBackOnForward2, Color.red);
			//third
			Debug.DrawLine(transform.position + posChange1 + forwardLength/4 - upHeight + thirdSideLedgeDetectorsHeight2 + spaceBelowNeededToGrabBackOnForward2, transform.position + posChange1 + forwardLength/2 - rightWidth/4 + sideLedgeDetectorsLength2 - upHeight + thirdSideLedgeDetectorsHeight2 - sideLedgeDetectorsWidth2 + spaceBelowNeededToGrabBackOnForward2, Color.red);
			Debug.DrawLine(transform.position + posChange1 + forwardLength/3 - upHeight + thirdSideLedgeDetectorsHeight2 + spaceBelowNeededToGrabBackOnForward2, transform.position + posChange1 - forwardLength/4 - upHeight + rightWidth/4 - sideLedgeDetectorsLength2 + thirdSideLedgeDetectorsHeight2 + spaceBelowNeededToGrabBackOnForward2, Color.red);
			
			//right
			//first
			Debug.DrawLine(transform.position + posChange1 + forwardLength/4 - upHeight*0.1f + firstSideLedgeDetectorsHeight2 + spaceBelowNeededToGrabBackOnForward2, transform.position + posChange1 + forwardLength/2 - upHeight*0.1f + rightWidth/4 + sideLedgeDetectorsLength2 + firstSideLedgeDetectorsHeight2 + sideLedgeDetectorsWidth2 + spaceBelowNeededToGrabBackOnForward2, Color.red);
			Debug.DrawLine(transform.position + posChange1 + forwardLength/3 - upHeight*0.1f + firstSideLedgeDetectorsHeight2 + spaceBelowNeededToGrabBackOnForward2, transform.position + posChange1 - forwardLength/4 - upHeight*0.1f - rightWidth/4 - sideLedgeDetectorsLength2 + firstSideLedgeDetectorsHeight2 + spaceBelowNeededToGrabBackOnForward2, Color.red);
			//second
			Debug.DrawLine(transform.position + posChange1 + forwardLength/4 - upHeight*0.5f + secondSideLedgeDetectorsHeight2 + spaceBelowNeededToGrabBackOnForward2, transform.position + posChange1 + forwardLength/2 - upHeight*0.5f + rightWidth/4 + sideLedgeDetectorsLength2 + secondSideLedgeDetectorsHeight2 + sideLedgeDetectorsWidth2 + spaceBelowNeededToGrabBackOnForward2, Color.red);
			Debug.DrawLine(transform.position + posChange1 + forwardLength/3 - upHeight*0.5f + secondSideLedgeDetectorsHeight2 + spaceBelowNeededToGrabBackOnForward2, transform.position + posChange1 - forwardLength/4 - upHeight*0.5f - rightWidth/4 - sideLedgeDetectorsLength2 + secondSideLedgeDetectorsHeight2 + spaceBelowNeededToGrabBackOnForward2, Color.red);
			//third
			Debug.DrawLine(transform.position + posChange1 + forwardLength/4 - upHeight + thirdSideLedgeDetectorsHeight2 + spaceBelowNeededToGrabBackOnForward2, transform.position + posChange1 + forwardLength/2 + rightWidth/4 + sideLedgeDetectorsLength2 - upHeight + thirdSideLedgeDetectorsHeight2 + sideLedgeDetectorsWidth2 + spaceBelowNeededToGrabBackOnForward2, Color.red);
			Debug.DrawLine(transform.position + posChange1 + forwardLength/3 - upHeight + thirdSideLedgeDetectorsHeight2 + spaceBelowNeededToGrabBackOnForward2, transform.position + posChange1 - forwardLength/4 - upHeight - rightWidth/4 - sideLedgeDetectorsLength2 + thirdSideLedgeDetectorsHeight2 + spaceBelowNeededToGrabBackOnForward2, Color.red);
		}
		if (!showMainRaysOnly){
			if (walkingOffLedgeDetectors.showJumpOffLedgesRays){
				//space below needed to jump detectors
				Debug.DrawLine(transform.position + posChange1 + forwardLength/3.8f + upHeight*0.5f + spaceBelowNeededToGrabBackOnForward2, transform.position + posChange1 + forwardLength/3.8f - upHeight*0.5f - spaceBelowNeededToJump2 + spaceBelowNeededToGrabBackOnForward2, Color.cyan);
				Debug.DrawLine(transform.position + posChange1 + forwardLength/1.48f + upHeight*0.5f + spaceInFrontNeededToGrabBackOn2, transform.position + posChange1 + forwardLength/1.48f - upHeight*0.5f + spaceInFrontNeededToGrabBackOn2 - spaceBelowNeededToJump2, Color.cyan);
			}
		}
		//
	}
	
	void GetLedgeSwitchingDetectorValues () {
		//LedgeSwitchingDetectors
		firstSurfaceDetectorWidth2 = rightWidth*(ledgeSwitchingDetectors.firstSurfaceDetectorWidth - 1);
		firstNoSurfaceDetectorLength2 = ledgeSwitchingDetectors.firstNoSurfaceDetectorLength;
		firstNoSurfaceDetectorWidth2 = ledgeSwitchingDetectors.firstNoSurfaceDetectorWidth + 0.773f;
		secondSurfaceDetectorWidth2 = rightWidth*(ledgeSwitchingDetectors.secondSurfaceDetectorWidth);
		secondNoSurfaceDetectorLength2 = ledgeSwitchingDetectors.secondNoSurfaceDetectorLength;
		secondNoSurfaceDetectorWidth2 = ledgeSwitchingDetectors.secondNoSurfaceDetectorWidth;
		thirdSurfaceDetectorWidth2 = rightWidth*(ledgeSwitchingDetectors.thirdSurfaceDetectorWidth + 1);
		thirdNoSurfaceDetectorLength2 = ledgeSwitchingDetectors.thirdNoSurfaceDetectorLength;
		thirdNoSurfaceDetectorWidth2 = ledgeSwitchingDetectors.thirdNoSurfaceDetectorWidth - 0.2189f;
		surfaceDetectorForward2 = forwardLength*(ledgeSwitchingDetectors.surfaceDetectorForward - 0.05f);
		surfaceDetectorHeight2 = upHeight*(ledgeSwitchingDetectors.surfaceDetectorHeight);
		surfaceDetectorLength2 = ledgeSwitchingDetectors.surfaceDetectorLength + 0.3f;
		surfaceDetectorWidth2 = rightWidth*(ledgeSwitchingDetectors.surfaceDetectorWidth + 0.3f);
		switchPointDetectorWidth2 = rightWidth*(ledgeSwitchingDetectors.switchPointDetectorWidth - 0.2f);
		noSurfaceDetectorHeight2 = upHeight*(ledgeSwitchingDetectors.noSurfaceDetectorHeight);
		noSurfaceDetectorWidth2 = ledgeSwitchingDetectors.noSurfaceDetectorWidth - 0.5f;
		wallInFrontDetectorUpAmount2 = upHeight*(ledgeSwitchingDetectors.wallInFrontDetectorUpAmount + 0.3f);
		wallInFrontDetectorHeight2 = ledgeSwitchingDetectors.wallInFrontDetectorHeight - 0.21f;
		leftSpace = transform.position + posChange2 - rightWidth/10 + wallInFrontDetectorUpAmount2;
		rightSpace = transform.position + posChange2 + rightWidth/10 + wallInFrontDetectorUpAmount2;
		firstSwitchSurfaceWidth = ((switchPointDetectorWidth2 + firstSurfaceDetectorWidth2) + (surfaceDetectorWidth2 * (1.24f * (ledgeSwitchingDetectors.switchPointDetectorWidth/2.67f + 1))));
		secondSwitchSurfaceWidth = ((switchPointDetectorWidth2 + secondSurfaceDetectorWidth2) + (surfaceDetectorWidth2 * (1.24f * (ledgeSwitchingDetectors.switchPointDetectorWidth/2.67f + 1))));
		thirdSwitchSurfaceWidth = ((switchPointDetectorWidth2 + thirdSurfaceDetectorWidth2) + (surfaceDetectorWidth2 * (1.24f * (ledgeSwitchingDetectors.switchPointDetectorWidth/2.67f + 1))));
	}
	
	
	void DrawFirstLedgeSwitchingDetectors () {
		
		if (!showMainRaysOnly){
			if (ledgeSwitchingDetectors.showFirstLedgeSwitchingRays){
				
				
				//FIRST
				
				//no surface detectors (directly next to switchPoint)
				//left
				//second forward detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/0.585f - ledgeSwitchFirstWidthBack + upHeight*2.2f + noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/0.585f - ledgeSwitchFirstWidthBack + upHeight*0.3f - noSurfaceDetectorHeight2, Color.red);
				Debug.DrawLine(transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/0.585f - ledgeSwitchFirstWidthBack + upHeight*0.3f - noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/0.585f - ledgeSwitchFirstWidthBack + upHeight*2.2f + noSurfaceDetectorHeight2, Color.red);
				
				//first forward/non-touching second forward detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + upHeight*2.2f + noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + upHeight*0.3f - noSurfaceDetectorHeight2, Color.red);
				Debug.DrawLine(transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + upHeight*0.3f - noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + upHeight*2.2f + noSurfaceDetectorHeight2, Color.red);
				
				//middle/non-touching first forward detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + upHeight*2.2f + noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + upHeight*0.3f - noSurfaceDetectorHeight2, Color.red);
				Debug.DrawLine(transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + upHeight*0.3f - noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + upHeight*2.2f + noSurfaceDetectorHeight2, Color.red);
				
				//first back/non-touching middle detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + posChange2 - ledgeSwitchFirstWidthBack + upHeight*2.2f + noSurfaceDetectorHeight2, transform.position + posChange2 - ledgeSwitchFirstWidthBack + upHeight*0.3f - noSurfaceDetectorHeight2, Color.red);
				Debug.DrawLine(transform.position + posChange2 - ledgeSwitchFirstWidthBack + upHeight*0.3f - noSurfaceDetectorHeight2, transform.position + posChange2 - ledgeSwitchFirstWidthBack + upHeight*2.2f + noSurfaceDetectorHeight2, Color.red);
				
				//second back/non-touching first back detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + posChange2 - ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + upHeight*2.2f + noSurfaceDetectorHeight2, transform.position + posChange2 - ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + upHeight*0.3f - noSurfaceDetectorHeight2, Color.red);
				Debug.DrawLine(transform.position + posChange2 - ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + upHeight*0.3f - noSurfaceDetectorHeight2, transform.position + posChange2 - ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + upHeight*2.2f + noSurfaceDetectorHeight2, Color.red);
				
				
				//right
				//second forward detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/0.585f + ledgeSwitchFirstWidthForward + upHeight*2.2f + noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/0.585f + ledgeSwitchFirstWidthForward + upHeight*0.3f - noSurfaceDetectorHeight2, Color.red);
				Debug.DrawLine(transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/0.585f + ledgeSwitchFirstWidthForward + upHeight*0.3f - noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/0.585f + ledgeSwitchFirstWidthForward + upHeight*2.2f + noSurfaceDetectorHeight2, Color.red);
				
				//first forward/non-touching second forward detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + upHeight*2.2f + noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + upHeight*0.3f - noSurfaceDetectorHeight2, Color.red);
				Debug.DrawLine(transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + upHeight*0.3f - noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + upHeight*2.2f + noSurfaceDetectorHeight2, Color.red);
				
				//middle/non-touching first forward detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + upHeight*2.2f + noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + upHeight*0.3f - noSurfaceDetectorHeight2, Color.red);
				Debug.DrawLine(transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + upHeight*0.3f - noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + upHeight*2.2f + noSurfaceDetectorHeight2, Color.red);
				
				//first back/non-touching middle detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + posChange2 + ledgeSwitchFirstWidthForward + upHeight*2.2f + noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchFirstWidthForward + upHeight*0.3f - noSurfaceDetectorHeight2, Color.red);
				Debug.DrawLine(transform.position + posChange2 + ledgeSwitchFirstWidthForward + upHeight*0.3f - noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchFirstWidthForward + upHeight*2.2f + noSurfaceDetectorHeight2, Color.red);
				
				//second back/non-touching first back detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + posChange2 - ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + upHeight*2.2f + noSurfaceDetectorHeight2, transform.position + posChange2 - ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + upHeight*0.3f - noSurfaceDetectorHeight2, Color.red);
				Debug.DrawLine(transform.position + posChange2 - ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + upHeight*0.3f - noSurfaceDetectorHeight2, transform.position + posChange2 - ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + upHeight*2.2f + noSurfaceDetectorHeight2, Color.red);
				
				
				
				
				//surface detectors
				//left
				//second forward detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.585f - rightWidth*2 - surfaceDetectorWidth2 + surfaceDetectorHeight2, transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/0.585f - rightWidth*2 - surfaceDetectorWidth2, Color.cyan);
				Debug.DrawLine(transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.585f - rightWidth*2 - surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.585f - rightWidth*2 - surfaceDetectorWidth2 + surfaceDetectorHeight2, Color.cyan);
				//switch point detectors
				Debug.DrawLine(transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.585f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/0.585f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.585f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.585f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, Color.blue);
				
				//first forward/non-touching second forward detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2 + surfaceDetectorHeight2, transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2, Color.cyan);
				Debug.DrawLine(transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2 + surfaceDetectorHeight2, Color.cyan);
				//switch point detectors
				Debug.DrawLine(transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, Color.blue);
				
				//middle/non-touching first forward detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + surfaceDetectorHeight2, transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2, Color.cyan);
				Debug.DrawLine(transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + surfaceDetectorHeight2, Color.cyan);
				//switch point detectors
				Debug.DrawLine(transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, Color.blue);
				
				//first back/non-touching middle detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f - rightWidth*2 - surfaceDetectorWidth2 + surfaceDetectorHeight2, transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 - rightWidth*2 - surfaceDetectorWidth2, Color.cyan);
				Debug.DrawLine(transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f - rightWidth*2 - surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f - rightWidth*2 - surfaceDetectorWidth2 + surfaceDetectorHeight2, Color.cyan);
				//switch point detectors
				Debug.DrawLine(transform.position + posChange2 + upHeight*2.2f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + upHeight*1.5f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, Color.blue);
				
				//second back/non-touching first back detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + surfaceDetectorHeight2, transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 - ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2, Color.cyan);
				Debug.DrawLine(transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f - ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + surfaceDetectorHeight2, Color.cyan);
				//switch point detectors
				Debug.DrawLine(transform.position + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 - ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + upHeight*1.5f - ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, Color.blue);
				
				
				
				//right
				//second forward detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.585f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/0.585f + rightWidth*2 + surfaceDetectorWidth2, Color.cyan);
				Debug.DrawLine(transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.585f + rightWidth*2 + surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.585f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, Color.cyan);
				//switch point detectors
				Debug.DrawLine(transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.585f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/0.585f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.585f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.585f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, Color.blue);
				
				//first forward/non-touching second forward detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2, Color.cyan);
				Debug.DrawLine(transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, Color.cyan);
				//switch point detectors
				Debug.DrawLine(transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, Color.blue);
				
				//middle/non-touching first forward detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2, Color.cyan);
				Debug.DrawLine(transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, Color.cyan);
				//switch point detectors
				Debug.DrawLine(transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, Color.blue);
				
				//first back/non-touching middle detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + rightWidth*2 + surfaceDetectorWidth2, Color.cyan);
				Debug.DrawLine(transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f + rightWidth*2 + surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, Color.cyan);
				//switch point detectors
				Debug.DrawLine(transform.position + posChange2 + upHeight*2.2f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + upHeight*1.5f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, Color.blue);
				
				//second back/non-touching first back detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 - ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2, Color.cyan);
				Debug.DrawLine(transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f - ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, Color.cyan);
				//switch point detectors
				Debug.DrawLine(transform.position + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 - ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + upHeight*1.5f - ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, Color.blue);
				
				
				
				//no surface detectors (detects walls in front of the player)
				//left
				//second forward detectors
				//ledge surface detectors
				
				//first forward/non-touching second forward detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.585f - ledgeSwitchFirstWidthBack, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.585f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*0.375f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.585f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*0.75f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.585f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.125f, Color.red);
				//
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.585f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.45f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.585f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.8f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.585f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*2.1f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.585f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*2.405f, Color.red);

				//middle/non-touching first forward detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*0.375f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*0.75f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.125f, Color.red);
				//
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.45f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.8f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*2.1f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*2.405f, Color.red);
				
				//first back/non-touching middle detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstWidthBack, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*0.375f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*0.75f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.125f, Color.red);
				//
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.45f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.8f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*2.1f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*2.405f, Color.red);
				
				//second back/non-touching first back detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstWidthBack, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*0.375f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*0.75f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.125f, Color.red);
				//
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.45f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.8f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*2.1f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*2.405f, Color.red);
				
				
				//right
				//second forward detectors
				//ledge surface detectors
				
				//first forward/non-touching first second detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.585f + ledgeSwitchFirstWidthForward, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.585f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*0.375f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.585f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*0.75f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.585f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.125f, Color.red);
				//
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.585f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.45f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.585f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.8f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.585f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*2.1f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.585f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*2.405f, Color.red);

				//middle/non-touching first forward detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*0.375f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*0.75f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.125f, Color.red);
				//
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.45f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.8f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*2.1f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*2.405f, Color.red);
				
				//first back/non-touching middle detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstWidthForward, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*0.375f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*0.75f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.125f, Color.red);
				//
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.45f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.8f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*2.1f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*2.405f, Color.red);
				
				//second back/non-touching first back detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstWidthForward, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*0.375f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*0.75f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.125f, Color.red);
				//
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.45f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.8f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*2.1f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*2.405f, Color.red);
				
				
				
				//switch point wall in front detectors
				//left
				//second forward detectors
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2), transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2), Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, Color.blue);
				//
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, Color.blue);
	
				//first forward detectors
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2), transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2), Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, Color.blue);
				//
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, Color.blue);
				
				//middle detectors
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2), transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2), Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, Color.blue);
				//
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, Color.blue);
				
				//first back detectors
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2), transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2), Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, Color.blue);
				//
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, Color.blue);
				
				//second back detectors
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2), transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2), Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, Color.blue);
				//
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, Color.blue);
		
		
				//right
				//second forward detectors
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2), transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2), Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, Color.blue);
				//
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, Color.blue);
	
				//first forward detectors
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2), transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2), Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, Color.blue);
				//
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, Color.blue);
				
				//middle detectors
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2), transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2), Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, Color.blue);
				//
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, Color.blue);
				
				//first back detectors
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2), transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2), Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, Color.blue);
				//
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, Color.blue);
				
				//second back detectors
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2), transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2), Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, Color.blue);
				//
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, Color.blue);
			}
		}
	}
	
	void DrawSecondLedgeSwitchingDetectors () {
		
		if (!showMainRaysOnly){
			if (ledgeSwitchingDetectors.showSecondLedgeSwitchingRays){
				
				
				//SECOND
				
				//no surface detectors (directly next to switchPoint)
				//left
				//second forward detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/0.585f - ledgeSwitchSecondWidthBack + upHeight*2.2f + noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/0.585f - ledgeSwitchSecondWidthBack + upHeight*0.3f - noSurfaceDetectorHeight2, Color.red);
				Debug.DrawLine(transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/0.585f - ledgeSwitchSecondWidthBack + upHeight*0.3f - noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/0.585f - ledgeSwitchSecondWidthBack + upHeight*2.2f + noSurfaceDetectorHeight2, Color.red);
				
				//first forward/non-touching second forward detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + upHeight*2.2f + noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + upHeight*0.3f - noSurfaceDetectorHeight2, Color.red);
				Debug.DrawLine(transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + upHeight*0.3f - noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + upHeight*2.2f + noSurfaceDetectorHeight2, Color.red);
				
				//middle/non-touching first forward detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + upHeight*2.2f + noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + upHeight*0.3f - noSurfaceDetectorHeight2, Color.red);
				Debug.DrawLine(transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + upHeight*0.3f - noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + upHeight*2.2f + noSurfaceDetectorHeight2, Color.red);
				
				//first back/non-touching middle detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + posChange2 - ledgeSwitchSecondWidthBack + upHeight*2.2f + noSurfaceDetectorHeight2, transform.position + posChange2 - ledgeSwitchSecondWidthBack + upHeight*0.3f - noSurfaceDetectorHeight2, Color.red);
				Debug.DrawLine(transform.position + posChange2 - ledgeSwitchSecondWidthBack + upHeight*0.3f - noSurfaceDetectorHeight2, transform.position + posChange2 - ledgeSwitchSecondWidthBack + upHeight*2.2f + noSurfaceDetectorHeight2, Color.red);
				
				//second back/non-touching first back detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + posChange2 - ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + upHeight*2.2f + noSurfaceDetectorHeight2, transform.position + posChange2 - ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + upHeight*0.3f - noSurfaceDetectorHeight2, Color.red);
				Debug.DrawLine(transform.position + posChange2 - ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + upHeight*0.3f - noSurfaceDetectorHeight2, transform.position + posChange2 - ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + upHeight*2.2f + noSurfaceDetectorHeight2, Color.red);
				
				
				//right
				//second forward detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/0.585f + ledgeSwitchSecondWidthForward + upHeight*2.2f + noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/0.585f + ledgeSwitchSecondWidthForward + upHeight*0.3f - noSurfaceDetectorHeight2, Color.red);
				Debug.DrawLine(transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/0.585f + ledgeSwitchSecondWidthForward + upHeight*0.3f - noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/0.585f + ledgeSwitchSecondWidthForward + upHeight*2.2f + noSurfaceDetectorHeight2, Color.red);
				
				//first forward/non-touching second forward detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + upHeight*2.2f + noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + upHeight*0.3f - noSurfaceDetectorHeight2, Color.red);
				Debug.DrawLine(transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + upHeight*0.3f - noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + upHeight*2.2f + noSurfaceDetectorHeight2, Color.red);
				
				//middle/non-touching first forward detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + upHeight*2.2f + noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + upHeight*0.3f - noSurfaceDetectorHeight2, Color.red);
				Debug.DrawLine(transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + upHeight*0.3f - noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + upHeight*2.2f + noSurfaceDetectorHeight2, Color.red);
				
				//first back/non-touching middle detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + posChange2 + ledgeSwitchSecondWidthForward + upHeight*2.2f + noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchSecondWidthForward + upHeight*0.3f - noSurfaceDetectorHeight2, Color.red);
				Debug.DrawLine(transform.position + posChange2 + ledgeSwitchSecondWidthForward + upHeight*0.3f - noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchSecondWidthForward + upHeight*2.2f + noSurfaceDetectorHeight2, Color.red);
				
				//second back/non-touching first back detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + posChange2 - ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + upHeight*2.2f + noSurfaceDetectorHeight2, transform.position + posChange2 - ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + upHeight*0.3f - noSurfaceDetectorHeight2, Color.red);
				Debug.DrawLine(transform.position + posChange2 - ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + upHeight*0.3f - noSurfaceDetectorHeight2, transform.position + posChange2 - ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + upHeight*2.2f + noSurfaceDetectorHeight2, Color.red);
				
				
				
				
				//surface detectors
				//left
				//second forward detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.585f - rightWidth*2 - surfaceDetectorWidth2 + surfaceDetectorHeight2, transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/0.585f - rightWidth*2 - surfaceDetectorWidth2, Color.cyan);
				Debug.DrawLine(transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.585f - rightWidth*2 - surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.585f - rightWidth*2 - surfaceDetectorWidth2 + surfaceDetectorHeight2, Color.cyan);
				//switch point detectors
				Debug.DrawLine(transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.585f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/0.585f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.585f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.585f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, Color.blue);
				
				//first forward/non-touching second forward detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2 + surfaceDetectorHeight2, transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2, Color.cyan);
				Debug.DrawLine(transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2 + surfaceDetectorHeight2, Color.cyan);
				//switch point detectors
				Debug.DrawLine(transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, Color.blue);
				
				//middle/non-touching first forward detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + surfaceDetectorHeight2, transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2, Color.cyan);
				Debug.DrawLine(transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + surfaceDetectorHeight2, Color.cyan);
				//switch point detectors
				Debug.DrawLine(transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, Color.blue);
				
				//first back/non-touching middle detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f - rightWidth*2 - surfaceDetectorWidth2 + surfaceDetectorHeight2, transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 - rightWidth*2 - surfaceDetectorWidth2, Color.cyan);
				Debug.DrawLine(transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f - rightWidth*2 - surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f - rightWidth*2 - surfaceDetectorWidth2 + surfaceDetectorHeight2, Color.cyan);
				//switch point detectors
				Debug.DrawLine(transform.position + posChange2 + upHeight*2.2f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + upHeight*1.5f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, Color.blue);
				
				//second back/non-touching first back detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + surfaceDetectorHeight2, transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 - ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2, Color.cyan);
				Debug.DrawLine(transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f - ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + surfaceDetectorHeight2, Color.cyan);
				//switch point detectors
				Debug.DrawLine(transform.position + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 - ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + upHeight*1.5f - ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, Color.blue);
				
				
				
				//right
				//second forward detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.585f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/0.585f + rightWidth*2 + surfaceDetectorWidth2, Color.cyan);
				Debug.DrawLine(transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.585f + rightWidth*2 + surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.585f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, Color.cyan);
				//switch point detectors
				Debug.DrawLine(transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.585f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/0.585f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.585f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.585f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, Color.blue);
				
				//first forward/non-touching second forward detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2, Color.cyan);
				Debug.DrawLine(transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, Color.cyan);
				//switch point detectors
				Debug.DrawLine(transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, Color.blue);
				
				//middle/non-touching first forward detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2, Color.cyan);
				Debug.DrawLine(transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, Color.cyan);
				//switch point detectors
				Debug.DrawLine(transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, Color.blue);
				
				//first back/non-touching middle detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + rightWidth*2 + surfaceDetectorWidth2, Color.cyan);
				Debug.DrawLine(transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f + rightWidth*2 + surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, Color.cyan);
				//switch point detectors
				Debug.DrawLine(transform.position + posChange2 + upHeight*2.2f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + upHeight*1.5f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, Color.blue);
				
				//second back/non-touching first back detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 - ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2, Color.cyan);
				Debug.DrawLine(transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f - ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, Color.cyan);
				//switch point detectors
				Debug.DrawLine(transform.position + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 - ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + upHeight*1.5f - ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, Color.blue);
				
				
				
				//no surface detectors (detects walls in front of the player)
				//left
				//second forward detectors
				//ledge surface detectors
				
				//first forward/non-touching second forward detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.585f - ledgeSwitchSecondWidthBack, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.585f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*0.375f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.585f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*0.75f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.585f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.125f, Color.red);
				//
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.585f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.45f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.585f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.8f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.585f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*2.1f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.585f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*2.405f, Color.red);

				//middle/non-touching first forward detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*0.375f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*0.75f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.125f, Color.red);
				//
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.45f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.8f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*2.1f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*2.405f, Color.red);
				
				//first back/non-touching middle detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondWidthBack, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*0.375f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*0.75f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.125f, Color.red);
				//
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.45f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.8f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*2.1f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*2.405f, Color.red);
				
				//second back/non-touching first back detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondWidthBack, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*0.375f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*0.75f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.125f, Color.red);
				//
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.45f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.8f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*2.1f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*2.405f, Color.red);
				
				
				//right
				//second forward detectors
				//ledge surface detectors
				
				//first forward/non-touching second forward detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.585f + ledgeSwitchSecondWidthForward, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.585f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*0.375f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.585f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*0.75f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.585f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.125f, Color.red);
				//
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.585f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.45f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.585f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.8f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.585f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*2.1f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.585f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*2.405f, Color.red);

				//middle/non-touching first forward detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*0.375f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*0.75f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.125f, Color.red);
				//
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.45f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.8f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*2.1f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*2.405f, Color.red);
				
				//first back/non-touching middle detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondWidthForward, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*0.375f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*0.75f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.125f, Color.red);
				//
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.45f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.8f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*2.1f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*2.405f, Color.red);
				
				//second back/non-touching first back detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondWidthForward, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*0.375f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*0.75f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.125f, Color.red);
				//
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.45f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.8f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*2.1f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*2.405f, Color.red);
				
				
				
				//switch point wall in front detectors
				//left
				//second forward detectors
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2), transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2), Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, Color.blue);
				//
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, Color.blue);
	
				//first forward detectors
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2), transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2), Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, Color.blue);
				//
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, Color.blue);
				
				//middle detectors
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2), transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2), Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, Color.blue);
				//
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, Color.blue);
				
				//first back detectors
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2), transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2), Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, Color.blue);
				//
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, Color.blue);
				
				//second back detectors
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2), transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2), Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, Color.blue);
				//
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, Color.blue);
		
		
				//right
				//second forward detectors
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2), transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2), Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, Color.blue);
				//
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, Color.blue);
	
				//first forward detectors
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2), transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2), Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, Color.blue);
				//
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, Color.blue);
				
				//middle detectors
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2), transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2), Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, Color.blue);
				//
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, Color.blue);
				
				//first back detectors
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2), transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2), Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, Color.blue);
				//
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, Color.blue);
				
				//second back detectors
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2), transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2), Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, Color.blue);
				//
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, Color.blue);
			}
		}
	}
	
	
	void DrawThirdLedgeSwitchingDetectors () {
		
		if (!showMainRaysOnly){
			if (ledgeSwitchingDetectors.showThirdLedgeSwitchingRays){
				
				
				//THIRD
				
				//no surface detectors (directly next to switchPoint)
				//left
				//second forward detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/0.585f - ledgeSwitchThirdWidthBack + upHeight*2.2f + noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/0.585f - ledgeSwitchThirdWidthBack + upHeight*0.3f - noSurfaceDetectorHeight2, Color.red);
				Debug.DrawLine(transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/0.585f - ledgeSwitchThirdWidthBack + upHeight*0.3f - noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/0.585f - ledgeSwitchThirdWidthBack + upHeight*2.2f + noSurfaceDetectorHeight2, Color.red);
				
				//first forward/non-touching second forward detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + upHeight*2.2f + noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + upHeight*0.3f - noSurfaceDetectorHeight2, Color.red);
				Debug.DrawLine(transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + upHeight*0.3f - noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + upHeight*2.2f + noSurfaceDetectorHeight2, Color.red);
				
				//middle/non-touching first forward detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + upHeight*2.2f + noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + upHeight*0.3f - noSurfaceDetectorHeight2, Color.red);
				Debug.DrawLine(transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + upHeight*0.3f - noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + upHeight*2.2f + noSurfaceDetectorHeight2, Color.red);
				
				//first back/non-touching middle detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + posChange2 - ledgeSwitchThirdWidthBack + upHeight*2.2f + noSurfaceDetectorHeight2, transform.position + posChange2 - ledgeSwitchThirdWidthBack + upHeight*0.3f - noSurfaceDetectorHeight2, Color.red);
				Debug.DrawLine(transform.position + posChange2 - ledgeSwitchThirdWidthBack + upHeight*0.3f - noSurfaceDetectorHeight2, transform.position + posChange2 - ledgeSwitchThirdWidthBack + upHeight*2.2f + noSurfaceDetectorHeight2, Color.red);
				
				//second back/non-touching first back detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + posChange2 - ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + upHeight*2.2f + noSurfaceDetectorHeight2, transform.position + posChange2 - ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + upHeight*0.3f - noSurfaceDetectorHeight2, Color.red);
				Debug.DrawLine(transform.position + posChange2 - ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + upHeight*0.3f - noSurfaceDetectorHeight2, transform.position + posChange2 - ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + upHeight*2.2f + noSurfaceDetectorHeight2, Color.red);
				
				
				//right
				//second forward detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/0.585f + ledgeSwitchThirdWidthForward + upHeight*2.2f + noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/0.585f + ledgeSwitchThirdWidthForward + upHeight*0.3f - noSurfaceDetectorHeight2, Color.red);
				Debug.DrawLine(transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/0.585f + ledgeSwitchThirdWidthForward + upHeight*0.3f - noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/0.585f + ledgeSwitchThirdWidthForward + upHeight*2.2f + noSurfaceDetectorHeight2, Color.red);
				
				//first forward/non-touching second forward detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward + upHeight*2.2f + noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward + upHeight*0.3f - noSurfaceDetectorHeight2, Color.red);
				Debug.DrawLine(transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward + upHeight*0.3f - noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward + upHeight*2.2f + noSurfaceDetectorHeight2, Color.red);
				
				//middle/non-touching first forward detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + upHeight*2.2f + noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + upHeight*0.3f - noSurfaceDetectorHeight2, Color.red);
				Debug.DrawLine(transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + upHeight*0.3f - noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + upHeight*2.2f + noSurfaceDetectorHeight2, Color.red);
				
				//first back/non-touching middle detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + posChange2 + ledgeSwitchThirdWidthForward + upHeight*2.2f + noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchThirdWidthForward + upHeight*0.3f - noSurfaceDetectorHeight2, Color.red);
				Debug.DrawLine(transform.position + posChange2 + ledgeSwitchThirdWidthForward + upHeight*0.3f - noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchThirdWidthForward + upHeight*2.2f + noSurfaceDetectorHeight2, Color.red);
				
				//second back/non-touching first back detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + posChange2 - ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + upHeight*2.2f + noSurfaceDetectorHeight2, transform.position + posChange2 - ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + upHeight*0.3f - noSurfaceDetectorHeight2, Color.red);
				Debug.DrawLine(transform.position + posChange2 - ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + upHeight*0.3f - noSurfaceDetectorHeight2, transform.position + posChange2 - ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + upHeight*2.2f + noSurfaceDetectorHeight2, Color.red);
				
				
				
				
				//surface detectors
				//left
				//second forward detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.585f - rightWidth*2 - surfaceDetectorWidth2 + surfaceDetectorHeight2, transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/0.585f - rightWidth*2 - surfaceDetectorWidth2, Color.cyan);
				Debug.DrawLine(transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.585f - rightWidth*2 - surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.585f - rightWidth*2 - surfaceDetectorWidth2 + surfaceDetectorHeight2, Color.cyan);
				//switch point detectors
				Debug.DrawLine(transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.585f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/0.585f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.585f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.585f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, Color.blue);
				
				//first forward/non-touching second forward detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2 + surfaceDetectorHeight2, transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2, Color.cyan);
				Debug.DrawLine(transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2 + surfaceDetectorHeight2, Color.cyan);
				//switch point detectors
				Debug.DrawLine(transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, Color.blue);
				
				//middle/non-touching first forward detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + surfaceDetectorHeight2, transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2, Color.cyan);
				Debug.DrawLine(transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + surfaceDetectorHeight2, Color.cyan);
				//switch point detectors
				Debug.DrawLine(transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, Color.blue);
				
				//first back/non-touching middle detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f - rightWidth*2 - surfaceDetectorWidth2 + surfaceDetectorHeight2, transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 - rightWidth*2 - surfaceDetectorWidth2, Color.cyan);
				Debug.DrawLine(transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f - rightWidth*2 - surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f - rightWidth*2 - surfaceDetectorWidth2 + surfaceDetectorHeight2, Color.cyan);
				//switch point detectors
				Debug.DrawLine(transform.position + posChange2 + upHeight*2.2f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + upHeight*1.5f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, Color.blue);
				
				//second back/non-touching first back detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + surfaceDetectorHeight2, transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 - ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2, Color.cyan);
				Debug.DrawLine(transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f - ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + surfaceDetectorHeight2, Color.cyan);
				//switch point detectors
				Debug.DrawLine(transform.position + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 - ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + upHeight*1.5f - ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, Color.blue);
				
				
				
				//right
				//second forward detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.585f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/0.585f + rightWidth*2 + surfaceDetectorWidth2, Color.cyan);
				Debug.DrawLine(transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.585f + rightWidth*2 + surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.585f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, Color.cyan);
				//switch point detectors
				Debug.DrawLine(transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.585f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/0.585f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.585f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.585f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, Color.blue);
				
				//first forward/non-touching second forward detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2, Color.cyan);
				Debug.DrawLine(transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, Color.cyan);
				//switch point detectors
				Debug.DrawLine(transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, Color.blue);
				
				//middle/non-touching first forward detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2, Color.cyan);
				Debug.DrawLine(transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, Color.cyan);
				//switch point detectors
				Debug.DrawLine(transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, Color.blue);
				
				//first back/non-touching middle detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + rightWidth*2 + surfaceDetectorWidth2, Color.cyan);
				Debug.DrawLine(transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f + rightWidth*2 + surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, Color.cyan);
				//switch point detectors
				Debug.DrawLine(transform.position + posChange2 + upHeight*2.2f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + upHeight*1.5f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, Color.blue);
				
				//second back/non-touching first back detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 - ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2, Color.cyan);
				Debug.DrawLine(transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f - ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, Color.cyan);
				//switch point detectors
				Debug.DrawLine(transform.position + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 - ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + upHeight*1.5f - ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, Color.blue);
				
				
				
				//no surface detectors (detects walls in front of the player)
				//left
				//second forward detectors
				//ledge surface detectors
				
				//first forward/non-touching second forward detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.585f - ledgeSwitchThirdWidthBack, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.585f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*0.375f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.585f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*0.75f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.585f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.125f, Color.red);
				//
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.585f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.45f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.585f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.8f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.585f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*2.1f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.585f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*2.405f, Color.red);

				//middle/non-touching first forward detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*0.375f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*0.75f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.125f, Color.red);
				//
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.45f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.8f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*2.1f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*2.405f, Color.red);
				
				//first back/non-touching middle detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdWidthBack, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*0.375f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*0.75f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.125f, Color.red);
				//
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.45f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.8f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*2.1f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*2.405f, Color.red);
				
				//second back/non-touching first back detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdWidthBack, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*0.375f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*0.75f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.125f, Color.red);
				//
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.45f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.8f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*2.1f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*2.405f, Color.red);
				
				
				//right
				//second forward detectors
				//ledge surface detectors
				
				//first forward/non-touching second detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.585f + ledgeSwitchThirdWidthForward, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.585f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*0.375f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.585f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*0.75f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.585f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.125f, Color.red);
				//
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.585f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.45f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.585f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.8f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.585f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*2.1f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.585f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*2.405f, Color.red);

				//middle/non-touching first forward detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*0.375f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*0.75f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.125f, Color.red);
				//
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.45f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.8f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*2.1f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*2.405f, Color.red);
				
				//first back/non-touching middle detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdWidthForward, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*0.375f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*0.75f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.125f, Color.red);
				//
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.45f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.8f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*2.1f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*2.405f, Color.red);
				
				//second back/non-touching first back detectors
				//ledge surface detectors
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdWidthForward, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*0.375f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*0.75f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.125f, Color.red);
				//
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.45f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.8f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*2.1f, Color.red);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*2.405f, Color.red);
				
				
				
				//switch point wall in front detectors
				//left
				//second forward detectors
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2), transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2), Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, Color.blue);
				//
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, Color.blue);
	
				//first forward detectors
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2), transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2), Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, Color.blue);
				//
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, Color.blue);
				
				//middle detectors
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2), transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2), Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, Color.blue);
				//
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, Color.blue);
				
				//first back detectors
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2), transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2), Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, Color.blue);
				//
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, Color.blue);
				
				//second back detectors
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2), transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2), Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, Color.blue);
				//
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, Color.blue);
		
		
				//right
				//second forward detectors
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2), transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2), Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, Color.blue);
				//
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, Color.blue);
	
				//first forward detectors
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2), transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2), Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, Color.blue);
				//
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, Color.blue);
				
				//middle detectors
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2), transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2), Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, Color.blue);
				//
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, Color.blue);
				
				//first back detectors
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2), transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2), Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, Color.blue);
				//
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, Color.blue);
				
				//second back detectors
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2), transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2), Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, Color.blue);
				//
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, Color.blue);
				Debug.DrawLine(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, Color.blue);

			}
		}
		
	}
	
	void FixedUpdate () {
		
		//increase the noCollisionTimer (if there is a collision, the noCollisionTimer is later set to 0)
		noCollisionTimer++;
	
		//setting the scale of the rays to the scale of the script holder
		if (inheritScale){
			height2 = transform.localScale.y;
			width2 = transform.localScale.x;
			length2 = transform.localScale.z;
		}
		
		//storing values to variables
		onLedgeHeight2 = onLedgeHeight + 0.06f;
		height2 = overallScaleOfDetectors.height;
		length2 = overallScaleOfDetectors.length * 0.77f;
		width2 = overallScaleOfDetectors.width * 0.77f;
		posChange1 = transform.up*overallPositionOfDetectors.upDistance + transform.forward*overallPositionOfDetectors.forwardDistance + transform.right*overallPositionOfDetectors.sideDistance;
		posChange2 = (transform.up*overallPositionOfDetectors.upDistance - transform.up*onLedgeHeight2/10) + transform.forward*overallPositionOfDetectors.forwardDistance + transform.right*overallPositionOfDetectors.sideDistance;
		midSidePosChange = heightOfMidSideDetectors2*(height2 + (height2 - 1f)*0.25f);
		upHeight = transform.up*height2;
		forwardLength = transform.forward*length2;
		rightWidth = transform.right*width2;
		ledgeSwitchHeight = (upHeight*(wallInFrontDetectorHeight2 + 1));
		ledgeSwitchSurfaceLength = (forwardLength*(surfaceDetectorLength2 + 1));
		ledgeSwitchFirstNoSurfaceLength = (forwardLength*(surfaceDetectorLength2 + firstNoSurfaceDetectorLength2 + 1));
		ledgeSwitchSecondNoSurfaceLength = (forwardLength*(surfaceDetectorLength2 + secondNoSurfaceDetectorLength2 + 1));
		ledgeSwitchThirdNoSurfaceLength = (forwardLength*(surfaceDetectorLength2 + thirdNoSurfaceDetectorLength2 + 1));
		ledgeSwitchFirstWidthBack = ((rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2));
		ledgeSwitchFirstWidthForward = ((rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2));
		ledgeSwitchSecondWidthForward = ((rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2));
		ledgeSwitchSecondWidthBack = ((rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2));
		ledgeSwitchThirdWidthForward = ((rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2));
		ledgeSwitchThirdWidthBack = ((rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2));
		jumpLandingEffect2 = walkingOffLedgeDetectors.jumpLandingEffect;
		hit = new RaycastHit();
	
		//updating the current state variables
		if ((climbable || climbPossible)
		&& !Physics.Linecast(transform.position + posChange1 + upHeight, new Vector3(transform.position.x, (playerPosY + onLedgeHeight2/10), transform.position.z) + posChange1 - upHeight/3f + minDistFromGroundHeight2, out hit, collisionLayers | 1 << 4) && !Physics.Linecast(transform.position + posChange1 + upHeight - (rightWidth/4) - minDistFromGroundWidth2, new Vector3(transform.position.x, (playerPosY + onLedgeHeight2/10), transform.position.z) + posChange1 - upHeight/3f + minDistFromGroundHeight2 - (rightWidth/4) - minDistFromGroundWidth2, out hit, collisionLayers | 1 << 4) && !Physics.Linecast(transform.position + posChange1 + upHeight + (rightWidth/4) + minDistFromGroundWidth2, new Vector3(transform.position.x, (playerPosY + onLedgeHeight2/10), transform.position.z) + posChange1 - upHeight/3f + minDistFromGroundHeight2 + (rightWidth/4) + minDistFromGroundWidth2, out hit, collisionLayers | 1 << 4) || grabbedOn){
			currentStatesOfVariables.ledgeGrabPossible = true;
		}
		else {
			currentStatesOfVariables.ledgeGrabPossible = false;
			canGrabBackOn = true;
		}
		if (climbable && climbableL && climbableR && !Physics.Linecast(transform.position + posChange2 + upHeight, transform.position + posChange2 + upHeight*2.5f + spaceAboveHeadNeededToClimbUp2, out hit, collisionLayers | 1 << 4)){
			currentStatesOfVariables.climbUpPossible = true;
		}
		else {
			currentStatesOfVariables.climbUpPossible = false;
		}
		
		if (!left || !leftMovable){
			if (angledLeft || leftBlocked || sL || stuckToLeft){
				currentStatesOfVariables.leftMovementPossible = false;
			}
			else {
				currentStatesOfVariables.leftMovementPossible = true;
			}
		}
		else {
			currentStatesOfVariables.leftMovementPossible = true;
		}
		if (!right || !rightMovable){
			if (angledRight || rightBlocked || sR || stuckToRight){
				currentStatesOfVariables.rightMovementPossible = false;
			}
			else {
				currentStatesOfVariables.rightMovementPossible = true;
			}
		}
		else {
			currentStatesOfVariables.rightMovementPossible = true;
		}
		currentStatesOfVariables.currentlyOnLedge = grabbedOn;
		
		//making sure the player cannot immediately grab back on to the same ledge until these values are false
		if (grabbedOn || turnBack || back2){
			canGrabBackOn = false;
		}
		if (pullingUp){
			canGrabBackOn = true;
		}
		
		
		//getting angle of ledge
		if (Physics.Raycast(transform.position + midSidePosChange + midSidePosChange + posChange2 + upHeight*2.5f + forwardLength/1.75f, -upHeight*0.9f, out hit, 5f, collisionLayers)){
			angle = (Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f;
		}
		else {
			angle = 90;
		}

		//checking if climbing is possible on surface height
		if (!Physics.Linecast(transform.position + posChange2 + upHeight*1.5f + forwardLength/1.75f + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f + forwardLength/1.75f + maxSurfaceLevelHeight2, out hit, collisionLayers | 1 << 4)&& !Physics.Linecast(transform.position + posChange2 + upHeight*2.2f + maxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f + forwardLength/1.75f + maxSurfaceLevelHeight2, out hit, collisionLayers | 1 << 4)
		&& !Physics.Linecast(transform.position + posChange2 + upHeight*1.5f + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*1.5f + forwardLength/1.7f + underPlatformMaxSurfaceLevelHeight2, out hit, collisionLayers | 1 << 4) && !Physics.Linecast(transform.position + posChange2 - forwardLength/20, transform.position + posChange2 - forwardLength/20 + upHeight*1.5f + spaceAboveHeadNeededToGrabOn2, out hit, collisionLayers | 1 << 4) && Physics.Linecast(transform.position + posChange2 + upHeight*2.2f + forwardLength/1.75f + maxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*0.8f + forwardLength/1.75f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) <= ledgeAngleLimit) {
			if (((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) <= 89 || ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 91){
				
				if (angle <= ledgeAngleLimit){
					climbPossible = true;
					playerPosY = hit.point.y - (height2*1.25f);
					if (grabbedOn && (playerPosY + onLedgeHeight2/10) != 0f){
						transform.position = new Vector3(transform.position.x, (playerPosY + onLedgeHeight2/10), transform.position.z);
					}
				}
				
			}
			else {
				climbPossible = false;
			}
		}
		else if (!Physics.Linecast(transform.position + posChange2 - forwardLength/20, transform.position + posChange2 - forwardLength/20 + upHeight*1.5f + spaceAboveHeadNeededToGrabOn2, out hit, collisionLayers | 1 << 4) && !Physics.Linecast(transform.position + posChange2 + upHeight*1.5f + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*1.5f + forwardLength/1.7f + underPlatformMaxSurfaceLevelHeight2, out hit, collisionLayers | 1 << 4)
		&& Physics.Linecast(transform.position + posChange2 + upHeight*1.5f + forwardLength/1.7f + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*0.8f + forwardLength/1.7f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) <= ledgeAngleLimit) {
			if (((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) <= 89 || ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 91){
				
				if (angle <= ledgeAngleLimit){
					climbPossible = true;
					playerPosY = hit.point.y - (height2*1.25f);
					if (grabbedOn && (playerPosY + onLedgeHeight2/10) != 0f){
						transform.position = new Vector3(transform.position.x, (playerPosY + onLedgeHeight2/10), transform.position.z);
					}
				}
				
			}
			else {
				climbPossible = false;
			}
		}
		else {
			climbPossible = false;
			if (!grabbedOn && !pullingUp && !turnBack && !back2){
				if (Physics.Linecast(transform.position + posChange2 + upHeight/2 + forwardLength/1.52f + upHeight*0.9f + (ledgeDetectorHeight2*(0.65f - (topOfLedgeSurfaceDetectorHeight2*0.59f)) + (ledgeDetectorForward2*(0.65f - (topOfLedgeSurfaceDetectorHeight2*0.59f))) + rodHoldingLedgeDetectorHeight2 + rodHoldingLedgeDetectorForward2 + transform.forward*(topOfLedgeSurfaceDetectorHeight2*length2)*0.14f + transform.up*(topOfLedgeSurfaceDetectorHeight2*height2)), transform.position + posChange2 + upHeight*0.8f + forwardLength/1.75f + (ledgeDetectorHeight2 + ledgeDetectorForward2 + rodHoldingLedgeDetectorHeight2 + rodHoldingLedgeDetectorForward2), out hit, collisionLayers) && angle <= ledgeAngleLimit){
					playerPosY = hit.point.y - (height2*1.25f);
				}
				else {
					playerPosY = transform.position.y - 1*height2;
				}
			}
		}
		//checking if climbing is possible to the left
		if (!Physics.Linecast(transform.position + posChange2 + upHeight*1.5f + forwardLength/1.75f + underPlatformMaxSurfaceLevelHeight2 - rightWidth/10, transform.position + posChange2 + upHeight*2.2f + forwardLength/1.75f + maxSurfaceLevelHeight2 - rightWidth/10, out hit, collisionLayers | 1 << 4) && !Physics.Linecast(transform.position + posChange2 - forwardLength/20 - rightWidth/10, transform.position + posChange2 - forwardLength/20 + upHeight*1.5f + spaceAboveHeadNeededToGrabOn2 - rightWidth/10, out hit, collisionLayers | 1 << 4) && Physics.Linecast(transform.position + posChange2 + upHeight*2.2f + forwardLength/1.75f + maxSurfaceLevelHeight2 - rightWidth/10, transform.position + posChange2 + upHeight*0.8f + forwardLength/1.75f - rightWidth/10, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) <= ledgeAngleLimit) {
			if (((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) <= 89 || ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 91){
				climbPossibleL = true;
			}
		}
		else if (!Physics.Linecast(transform.position + posChange2 - forwardLength/20 - rightWidth/10, transform.position + posChange2 - forwardLength/20 + upHeight*1.5f + spaceAboveHeadNeededToGrabOn2 - rightWidth/10, out hit, collisionLayers | 1 << 4) && Physics.Linecast(transform.position + posChange2 + upHeight*1.5f + forwardLength/1.7f + underPlatformMaxSurfaceLevelHeight2 - rightWidth/10, transform.position + posChange2 + upHeight*0.8f + forwardLength/1.7f - rightWidth/10, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) <= ledgeAngleLimit) {
			if (((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) <= 89 || ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 91){
				climbPossibleL = true;
			}
		}
		else {
			climbPossibleL = false;
		}
		//checking if climbing is possible to the right
		if (!Physics.Linecast(transform.position + posChange2 + upHeight*1.5f + forwardLength/1.75f + underPlatformMaxSurfaceLevelHeight2 + rightWidth/10, transform.position + posChange2 + upHeight*2.2f + forwardLength/1.75f + maxSurfaceLevelHeight2 + rightWidth/10, out hit, collisionLayers | 1 << 4) && !Physics.Linecast(transform.position + posChange2 - forwardLength/20 + rightWidth/10, transform.position + posChange2 - forwardLength/20 + upHeight*1.5f + spaceAboveHeadNeededToGrabOn2 + rightWidth/10, out hit, collisionLayers | 1 << 4) && Physics.Linecast(transform.position + posChange2 + upHeight*2.2f + forwardLength/1.75f + maxSurfaceLevelHeight2 + rightWidth/10, transform.position + posChange2 + upHeight*0.8f + forwardLength/1.75f + rightWidth/10, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) <= ledgeAngleLimit) {
			if (((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) <= 89 || ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 91){
				climbPossibleR = true;
			}
		}
		else if (!Physics.Linecast(transform.position + posChange2 - forwardLength/20 + rightWidth/10, transform.position + posChange2 - forwardLength/20 + upHeight*1.5f + spaceAboveHeadNeededToGrabOn2 + rightWidth/10, out hit, collisionLayers | 1 << 4) && Physics.Linecast(transform.position + posChange2 + upHeight*1.5f + forwardLength/1.7f + underPlatformMaxSurfaceLevelHeight2 + rightWidth/10, transform.position + posChange2 + upHeight*0.8f + forwardLength/1.7f + rightWidth/10, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) <= ledgeAngleLimit) {
			if (((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) <= 89 || ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 91){
				climbPossibleR = true;
			}
		}
		else {
			climbPossibleR = false;
		}
		
		
		//left non-climbable detectors
		if (Physics.Linecast(transform.position + posChange2 + upHeight - rightWidth/10, transform.position + posChange2 + (upHeight*2) + forwardLength/1.7f - (rightWidth/4) + midSideWallDetectorsForward2 - midSideWallDetectorsWidth2, out hit, collisionLayers) || Physics.Linecast(transform.position + posChange2 + upHeight - rightWidth/10, transform.position + posChange2 + (upHeight*2) - rightWidth - sideWallDetectorsWidth2, out hit, collisionLayers)){
			if (Physics.Linecast(transform.position + posChange2 + upHeight*1.5f - (rightWidth/4) + frontSideBlockageDetectorsHeight2 - frontSideBlockageDetectorsWidth2, transform.position + posChange2 + upHeight*1.5f + forwardLength*1.2f - (rightWidth/4) + frontSideBlockageDetectorsForward2 + frontSideBlockageDetectorsHeight2 - frontSideBlockageDetectorsWidth2, out hit, collisionLayers)
			|| !Physics.Raycast(transform.position + midSidePosChange + midSidePosChange + posChange2 + upHeight*1.5f + forwardLength/1.6f - (rightWidth/4), upHeight, out hit, 2f, collisionLayers | 1 << 4)
			|| !Physics.Linecast(transform.position + posChange2 + upHeight*1.5f + forwardLength/1.6f - (rightWidth/4) + frontSideBlockageDetectorsHeight2 - frontSideBlockageDetectorsWidth2 + aboveHeadPlatformDetectorsForward2, transform.position + posChange2 + upHeight*2.2f + forwardLength/1.25f - (rightWidth/4) + frontSideBlockageDetectorsHeight2 - frontSideBlockageDetectorsWidth2 + aboveHeadPlatformDetectorsForward2 + aboveHeadPlatformDetectorsHeight2, out hit, collisionLayers | 1 << 4)){
				leftMovable = false;
			}
			else{
				leftMovable = true;
			}
		}
		else{
			leftMovable = true;
		}
		
		//right non-climbable detectors
		if (Physics.Linecast(transform.position + posChange2 + upHeight + rightWidth/10, transform.position + posChange2 + (upHeight*2) + forwardLength/1.7f + (rightWidth/4) + midSideWallDetectorsForward2 + midSideWallDetectorsWidth2, out hit, collisionLayers) || Physics.Linecast(transform.position + posChange2 + upHeight + rightWidth/10, transform.position + posChange2 + (upHeight*2) + rightWidth + sideWallDetectorsWidth2, out hit, collisionLayers)){
			if (Physics.Linecast(transform.position + posChange2 + upHeight*1.5f + (rightWidth/4) + frontSideBlockageDetectorsHeight2 + frontSideBlockageDetectorsWidth2, transform.position + posChange2 + upHeight*1.5f + forwardLength*1.2f + (rightWidth/4) + frontSideBlockageDetectorsForward2 + frontSideBlockageDetectorsHeight2 + frontSideBlockageDetectorsWidth2, out hit, collisionLayers)
			|| !Physics.Raycast(transform.position + midSidePosChange + midSidePosChange + posChange2 + upHeight*1.5f + forwardLength/1.6f + (rightWidth/4), upHeight, out hit, 2f, collisionLayers | 1 << 4)
			|| !Physics.Linecast(transform.position + posChange2 + upHeight*1.5f + forwardLength/1.6f + (rightWidth/4) + frontSideBlockageDetectorsHeight2 + frontSideBlockageDetectorsWidth2 + aboveHeadPlatformDetectorsForward2, transform.position + posChange2 + upHeight*2.2f + forwardLength/1.25f + (rightWidth/4) + frontSideBlockageDetectorsHeight2 + frontSideBlockageDetectorsWidth2 + aboveHeadPlatformDetectorsForward2 + aboveHeadPlatformDetectorsHeight2, out hit, collisionLayers | 1 << 4)){
				rightMovable = false;
			}
			else{
				rightMovable = true;
			}
		}
		else{
			rightMovable = true;
		}
		
		//determines if your left side is blocked or not
		if (grabbedOn && (!switching || !ledgeSwitchingDetectors.allowLedgeSwitching) && Physics.Linecast(transform.position + posChange2 + upHeight - rightWidth/10 + preventRotatingToSideWallHeight2, transform.position + posChange2 + upHeight - rightWidth*1.35f + preventRotatingToSideWallHeight2 - preventRotatingToSideWallWidth2, out hit, collisionLayers)
		&&  Physics.Linecast(transform.position + posChange2 + upHeight*1.25f - rightWidth/10 + preventRotatingToSideWallHeight2, transform.position + posChange2 + upHeight*1.25f - rightWidth*1.35f + preventRotatingToSideWallHeight2 - preventRotatingToSideWallWidth2, out hit, collisionLayers)
		&&  Physics.Linecast(transform.position + posChange2 + upHeight*1.5f - rightWidth/10 + preventRotatingToSideWallHeight2, transform.position + posChange2 + upHeight*1.5f - rightWidth*1.35f + preventRotatingToSideWallHeight2 - preventRotatingToSideWallWidth2, out hit, collisionLayers)
		&&  Physics.Linecast(transform.position + posChange2 + upHeight*1.75f - rightWidth/10 + preventRotatingToSideWallHeight2, transform.position + posChange2 + upHeight*1.75f - rightWidth*1.35f + preventRotatingToSideWallHeight2 - preventRotatingToSideWallWidth2, out hit, collisionLayers)
		&&  !Physics.Linecast(transform.position + posChange2 + upHeight*1.75f - rightWidth + preventRotatingToSideWallHeight2 - preventRotatingToSideWallWidth2 - secondAllowRotatingIfLedgeHitWidth2, transform.position + posChange2 + upHeight*0.8f - rightWidth + preventRotatingToSideWallHeight2 - preventRotatingToSideWallWidth2 - secondAllowRotatingIfLedgeHitWidth2, out hit, collisionLayers | 1 << 4)
		&&  !Physics.Linecast(transform.position + posChange2 + upHeight*1.75f - rightWidth/1.5f + preventRotatingToSideWallHeight2 - preventRotatingToSideWallWidth2 - firstAllowRotatingIfLedgeHitWidth2, transform.position + posChange2 + upHeight*0.8f - rightWidth/1.5f + preventRotatingToSideWallHeight2 - preventRotatingToSideWallWidth2 - firstAllowRotatingIfLedgeHitWidth2, out hit, collisionLayers | 1 << 4)){
			leftBlocked = true;
		}
		else if (((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) <= ledgeAngleLimit){
			leftBlocked = false;
		}
		
		//determines if your right side is blocked or not
		if (grabbedOn && (!switching || !ledgeSwitchingDetectors.allowLedgeSwitching) && Physics.Linecast(transform.position + posChange2 + upHeight + rightWidth/10 + preventRotatingToSideWallHeight2, transform.position + posChange2 + upHeight + rightWidth*1.35f + preventRotatingToSideWallHeight2 + preventRotatingToSideWallWidth2, out hit, collisionLayers)
		&&  Physics.Linecast(transform.position + posChange2 + upHeight*1.25f + rightWidth/10 + preventRotatingToSideWallHeight2, transform.position + posChange2 + upHeight*1.25f + rightWidth*1.35f + preventRotatingToSideWallHeight2 + preventRotatingToSideWallWidth2, out hit, collisionLayers)
		&&  Physics.Linecast(transform.position + posChange2 + upHeight*1.5f + rightWidth/10 + preventRotatingToSideWallHeight2, transform.position + posChange2 + upHeight*1.5f + rightWidth*1.35f + preventRotatingToSideWallHeight2 + preventRotatingToSideWallWidth2, out hit, collisionLayers)
		&&  Physics.Linecast(transform.position + posChange2 + upHeight*1.75f + rightWidth/10 + preventRotatingToSideWallHeight2, transform.position + posChange2 + upHeight*1.75f + rightWidth*1.35f + preventRotatingToSideWallHeight2 + preventRotatingToSideWallWidth2, out hit, collisionLayers)
		&&  !Physics.Linecast(transform.position + posChange2 + upHeight*1.75f + rightWidth + preventRotatingToSideWallHeight2 + preventRotatingToSideWallWidth2 + secondAllowRotatingIfLedgeHitWidth2, transform.position + posChange2 + upHeight*0.8f + rightWidth + preventRotatingToSideWallHeight2 + preventRotatingToSideWallWidth2 + secondAllowRotatingIfLedgeHitWidth2, out hit, collisionLayers | 1 << 4)
		&&  !Physics.Linecast(transform.position + posChange2 + upHeight*1.75f + rightWidth/1.5f + preventRotatingToSideWallHeight2 + preventRotatingToSideWallWidth2 + firstAllowRotatingIfLedgeHitWidth2, transform.position + posChange2 + upHeight*0.8f + rightWidth/1.5f + preventRotatingToSideWallHeight2 + preventRotatingToSideWallWidth2 + firstAllowRotatingIfLedgeHitWidth2, out hit, collisionLayers | 1 << 4)){
			rightBlocked = true;
		}
		else if (((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) <= ledgeAngleLimit){
			rightBlocked = false;
		}
		
		
		
		//checking to see if a surface can be climbed
		if (!Physics.Linecast(transform.position + posChange1 + ((transform.up + nonLedgeSurfaceDetectorsHeight2)*height2)*0.3f, transform.position + posChange1 + ((transform.up + nonLedgeSurfaceDetectorsHeight2)*height2)*0.1f + forwardLength + nonLedgeSurfaceDetectorsForward2, out hit, collisionLayers | 1 << 4) || Physics.Linecast(transform.position + posChange1 + ((transform.up + nonLedgeSurfaceDetectorsHeight2)*height2)*0.6f, transform.position + posChange1 + ((transform.up + nonLedgeSurfaceDetectorsHeight2)*height2)*0.6f + forwardLength/2.5f + nonLedgeSurfaceDetectorsForward2, out hit, collisionLayers) || Physics.Linecast(transform.position + posChange1 + ((transform.up + nonLedgeSurfaceDetectorsHeight2)*height2)*0.8f, transform.position + posChange1 + ((transform.up + nonLedgeSurfaceDetectorsHeight2)*height2)*0.8f + forwardLength/2.3f + nonLedgeSurfaceDetectorsForward2, out hit, collisionLayers) || grabbedOn) 
		{
			//checking to see if a surface directly in front of the player can be climbed
			
			if (Physics.Linecast(transform.position + posChange2 + upHeight, transform.position + posChange2 + upHeight + forwardLength/1.25f + upHeight*1.5f + (rodHoldingLedgeDetectorHeight2 + rodHoldingLedgeDetectorForward2), out hit, collisionLayers) || Physics.Linecast(transform.position + posChange2 + upHeight + forwardLength/1.25f + upHeight*1.5f + (rodHoldingLedgeDetectorHeight2 + rodHoldingLedgeDetectorForward2), transform.position + posChange2 + upHeight + forwardLength + upHeight*1.25f + (rodHoldingLedgeDetectorHeight2 + rodHoldingLedgeDetectorForward2), out hit, collisionLayers)) 
			{
				climbable = false;
			}
			else if (Physics.Linecast(transform.position + posChange2 + upHeight/2 + forwardLength/1.52f + upHeight*0.9f + (ledgeDetectorHeight2*(0.65f - (topOfLedgeSurfaceDetectorHeight2*0.59f)) + (ledgeDetectorForward2*(0.65f - (topOfLedgeSurfaceDetectorHeight2*0.59f))) + rodHoldingLedgeDetectorHeight2 + rodHoldingLedgeDetectorForward2 + transform.forward*(topOfLedgeSurfaceDetectorHeight2*length2)*0.14f + transform.up*(topOfLedgeSurfaceDetectorHeight2*height2)), transform.position + posChange2 + upHeight*0.8f + forwardLength/1.75f + (ledgeDetectorHeight2 + ledgeDetectorForward2 + rodHoldingLedgeDetectorHeight2 + rodHoldingLedgeDetectorForward2), out hit, collisionLayers) && angle <= ledgeAngleLimit) {
			
				climbable = true;
				hitPoint = hit.point;
			
			}
			else{
				climbable = false;
			}
		
			//checking to see if a surface to the left of the player can be climbed
		
		
			if (Physics.Linecast(transform.position + posChange2 + upHeight - rightWidth/4, transform.position + posChange2 + upHeight + forwardLength/1.25f + upHeight*1.5f + (rodHoldingLedgeDetectorHeight2 + rodHoldingLedgeDetectorForward2) - rightWidth/4, out hit, collisionLayers) || Physics.Linecast(transform.position + posChange2 + upHeight + forwardLength/1.25f + upHeight*1.5f + (rodHoldingLedgeDetectorHeight2 + rodHoldingLedgeDetectorForward2) - rightWidth/4, transform.position + posChange2 + upHeight + forwardLength + upHeight*1.25f + (rodHoldingLedgeDetectorHeight2 + rodHoldingLedgeDetectorForward2) - rightWidth/4, out hit, collisionLayers)) 
			{
				climbableL = false;
			}
			else if (Physics.Linecast(transform.position + posChange2 + upHeight/2 + forwardLength/1.52f + upHeight*0.9f + (ledgeDetectorHeight2*(0.65f - (topOfLedgeSurfaceDetectorHeight2*0.59f)) + (ledgeDetectorForward2*(0.65f - (topOfLedgeSurfaceDetectorHeight2*0.59f))) + rodHoldingLedgeDetectorHeight2 + rodHoldingLedgeDetectorForward2 + transform.forward*(topOfLedgeSurfaceDetectorHeight2*length2)*0.14f + transform.up*(topOfLedgeSurfaceDetectorHeight2*height2)) - rightWidth/4, transform.position + posChange2 + upHeight*0.8f + forwardLength/1.75f + (ledgeDetectorHeight2 + ledgeDetectorForward2 + rodHoldingLedgeDetectorHeight2 + rodHoldingLedgeDetectorForward2) - rightWidth/4, out hit, collisionLayers) && angle <= ledgeAngleLimit) {
			
				climbableL = true;
			
			}
			else{
				climbableL = false;
			}
		
			//checking to see if a surface to the right of the player can be climbed
		
		
			if (Physics.Linecast(transform.position + posChange2 + upHeight + rightWidth/4, transform.position + posChange2 + upHeight + forwardLength/1.25f + upHeight*1.5f + (rodHoldingLedgeDetectorHeight2 + rodHoldingLedgeDetectorForward2) + rightWidth/4, out hit, collisionLayers) || Physics.Linecast(transform.position + posChange2 + upHeight + forwardLength/1.25f + upHeight*1.5f + (rodHoldingLedgeDetectorHeight2 + rodHoldingLedgeDetectorForward2) + rightWidth/4, transform.position + posChange2 + upHeight + forwardLength + upHeight*1.25f + (rodHoldingLedgeDetectorHeight2 + rodHoldingLedgeDetectorForward2) + rightWidth/4, out hit, collisionLayers)) 
			{
				climbableR = false;
			}
			else if (Physics.Linecast(transform.position + posChange2 + upHeight/2 + forwardLength/1.52f + upHeight*0.9f + (ledgeDetectorHeight2*(0.65f - (topOfLedgeSurfaceDetectorHeight2*0.59f)) + (ledgeDetectorForward2*(0.65f - (topOfLedgeSurfaceDetectorHeight2*0.59f))) + rodHoldingLedgeDetectorHeight2 + rodHoldingLedgeDetectorForward2 + transform.forward*(topOfLedgeSurfaceDetectorHeight2*length2)*0.14f + transform.up*(topOfLedgeSurfaceDetectorHeight2*height2)) + rightWidth/4, transform.position + posChange2 + upHeight*0.8f + forwardLength/1.75f + (ledgeDetectorHeight2 + ledgeDetectorForward2 + rodHoldingLedgeDetectorHeight2 + rodHoldingLedgeDetectorForward2) + rightWidth/4, out hit, collisionLayers) && angle <= ledgeAngleLimit) {
			
				climbableR = true;
			
			}
			else{
				climbableR = false;
			}
			
		}
		else{
			climbable = false;
			climbableL = false;
			climbableR = false;
		}
		
		
		//getting angle of ledge player is grabbed on to
		if (climbPossibleL && climbPossibleR && (!switching || !ledgeSwitchingDetectors.allowLedgeSwitching)){
			if (Physics.Linecast(transform.position + posChange2 + upHeight*1.5f + forwardLength/1.7f + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*0.8f + forwardLength/1.7f, out hit, collisionLayers)){
				if (hasNotMovedOnLedgeAsideFromLedgeSwitchingYet){
					ledgeAngle = Vector3.Angle(transform.right, hit.normal) - 90;
				}
				else {
					ledgeAngle = Mathf.Lerp(ledgeAngle, Vector3.Angle(transform.right, hit.normal) - 90, 6 * Time.deltaTime);
				}
			}
			else if (Physics.Linecast(transform.position + posChange2 + upHeight*2.2f + forwardLength/1.75f + maxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*0.8f + forwardLength/1.75f, out hit, collisionLayers)){
				if (hasNotMovedOnLedgeAsideFromLedgeSwitchingYet){
					ledgeAngle = Vector3.Angle(transform.right, hit.normal) - 90;
				}
				else {
					ledgeAngle = Mathf.Lerp(ledgeAngle, Vector3.Angle(transform.right, hit.normal) - 90, 6 * Time.deltaTime);
				}
			}
		}
		
		//determining whether you are grounded or not
		Vector3 pos = transform.position;
        pos.y = GetComponent<Collider>().bounds.min.y + 0.1f;
		if (Physics.Raycast(pos, Vector3.down, maxGroundedDistance, collisionLayers)
		|| Physics.Raycast(pos - transform.forward/10, Vector3.down, maxGroundedDistance, collisionLayers) || Physics.Raycast(pos + transform.forward/10, Vector3.down, maxGroundedDistance, collisionLayers)
		|| Physics.Raycast(pos - transform.right/10, Vector3.down, maxGroundedDistance, collisionLayers) || Physics.Raycast(pos + transform.right/10, Vector3.down, maxGroundedDistance, collisionLayers)){
			currentStatesOfVariables.grounded = true;
		}
		else {
			currentStatesOfVariables.grounded = false;
		}
		
		//getting the direction of the joystick/arrow keys
		directionVector = new Vector3(Input.GetAxis("Horizontal"), 0, Input.GetAxis("Vertical"));
        if (directionVector != Vector3.zero) {
			
            //getting the length of the direction vector and normalizing it
            float directionLength = directionVector.magnitude;
            directionVector = directionVector / directionLength;

            //setting the maximum direction length to 1
            directionLength = Mathf.Min(1, directionLength);

            directionLength *= directionLength;

            //multiply the normalized direction vector by the modified direction length
            directionVector *= directionLength;
			
        }
		if (!grabbedOn && !pullingUp && !turnBack && !back2){
			axisBeforeGrab = directionVector.magnitude;
		}
		
		if (!turnBack){
			ledgeJumpPossible = true;
			//checking to see if either side of a ledge is blocked
			if (Input.GetAxisRaw("Horizontal") != 0 || Input.GetAxisRaw("Vertical") != 0){
				if (currentStatesOfVariables.grounded && !climbable && !Physics.Linecast(transform.position + posChange1 + upHeight*0.5f, transform.position + posChange1 + forwardLength/1.5f + upHeight*0.5f + spaceInFrontNeededToGrabBackOn2, out hit, collisionLayers | 1 << 4) && !back2 && !grabbedOn && !pullingUp){
					if (!Physics.Linecast(transform.position + posChange1 + forwardLength/4 + upHeight*0.5f + spaceBelowNeededToGrabBackOnForward2, transform.position + posChange1 + forwardLength/4 - upHeight*1.5f - spaceBelowNeededToGrabBackOnHeight2 + spaceBelowNeededToGrabBackOnForward2, out hit, collisionLayers | 1 << 4) && !Physics.Linecast(transform.position + posChange1 + forwardLength/1.5f + upHeight*0.5f + spaceInFrontNeededToGrabBackOn2, transform.position + posChange1 + forwardLength/1.5f - upHeight*1.5f + spaceInFrontNeededToGrabBackOn2 - spaceBelowNeededToGrabBackOnHeight2, out hit, collisionLayers | 1 << 4)
					|| canJumpOffLedge && walkingOffLedgeDetectors.allowJumpingOffLedges){
						
						if (!Physics.Linecast(transform.position + posChange1 + forwardLength/4 + upHeight*0.5f + spaceBelowNeededToGrabBackOnForward2, transform.position + posChange1 + forwardLength/4 - upHeight*1.5f - spaceBelowNeededToGrabBackOnHeight2 + spaceBelowNeededToGrabBackOnForward2, out hit, collisionLayers | 1 << 4) && !Physics.Linecast(transform.position + posChange1 + forwardLength/1.5f + upHeight*0.5f + spaceInFrontNeededToGrabBackOn2, transform.position + posChange1 + forwardLength/1.5f - upHeight*1.5f + spaceInFrontNeededToGrabBackOn2 - spaceBelowNeededToGrabBackOnHeight2, out hit, collisionLayers | 1 << 4)){
							nonJumpTurnAround = true;
						}
						else {
							nonJumpTurnAround = false;
						}
						
						//if left is blocked, go to back right
						if ((Physics.Linecast(transform.position + posChange1 + forwardLength/4 - upHeight*0.1f + firstSideLedgeDetectorsHeight2 + spaceBelowNeededToGrabBackOnForward2, transform.position + posChange1 + forwardLength/2 - upHeight*0.1f - rightWidth/4 + sideLedgeDetectorsLength2 + firstSideLedgeDetectorsHeight2 - sideLedgeDetectorsWidth2 + spaceBelowNeededToGrabBackOnForward2, out hit, collisionLayers | 1 << 4) && (!GetComponent<PlayerController>() || GetComponent<PlayerController>() && hit.transform.tag != GetComponent<PlayerController>().climbableTag2 && !GetComponent<PlayerController>().fifthTest)
						&&	Physics.Linecast(transform.position + posChange1 + forwardLength/2 - upHeight*0.1f - rightWidth/4 + sideLedgeDetectorsLength2 + firstSideLedgeDetectorsHeight2 - sideLedgeDetectorsWidth2 + spaceBelowNeededToGrabBackOnForward2, transform.position + posChange1 + forwardLength/4 - upHeight*0.1f + firstSideLedgeDetectorsHeight2 + spaceBelowNeededToGrabBackOnForward2, out hit, collisionLayers | 1 << 4) && (!GetComponent<PlayerController>() || GetComponent<PlayerController>() && hit.transform.tag != GetComponent<PlayerController>().climbableTag2 && !GetComponent<PlayerController>().fifthTest)
						
						||  Physics.Linecast(transform.position + posChange1 + forwardLength/4 - upHeight*0.5f + secondSideLedgeDetectorsHeight2 + spaceBelowNeededToGrabBackOnForward2, transform.position + posChange1 + forwardLength/2 - upHeight*0.5f - rightWidth/4 + sideLedgeDetectorsLength2 + secondSideLedgeDetectorsHeight2 - sideLedgeDetectorsWidth2 + spaceBelowNeededToGrabBackOnForward2, out hit, collisionLayers | 1 << 4) && (!GetComponent<PlayerController>() || GetComponent<PlayerController>() && hit.transform.tag != GetComponent<PlayerController>().climbableTag2 && !GetComponent<PlayerController>().fifthTest) && Physics.Linecast(transform.position + posChange1 + forwardLength/3 - upHeight*0.5f + secondSideLedgeDetectorsHeight2 + spaceBelowNeededToGrabBackOnForward2, transform.position + posChange1 - forwardLength/4 - upHeight*0.5f + rightWidth/4 - sideLedgeDetectorsLength2 + secondSideLedgeDetectorsHeight2 + spaceBelowNeededToGrabBackOnForward2, out hit, collisionLayers | 1 << 4) && (!GetComponent<PlayerController>() || GetComponent<PlayerController>() && hit.transform.tag != GetComponent<PlayerController>().climbableTag2 && !GetComponent<PlayerController>().fifthTest)
						&&  Physics.Linecast(transform.position + posChange1 + forwardLength/2 - upHeight*0.5f - rightWidth/4 + sideLedgeDetectorsLength2 + secondSideLedgeDetectorsHeight2 - sideLedgeDetectorsWidth2 + spaceBelowNeededToGrabBackOnForward2, transform.position + posChange1 + forwardLength/4 - upHeight*0.5f + secondSideLedgeDetectorsHeight2 + spaceBelowNeededToGrabBackOnForward2, out hit, collisionLayers | 1 << 4) && (!GetComponent<PlayerController>() || GetComponent<PlayerController>() && hit.transform.tag != GetComponent<PlayerController>().climbableTag2 && !GetComponent<PlayerController>().fifthTest)
						
						||  Physics.Linecast(transform.position + posChange1 + forwardLength/4 - upHeight + thirdSideLedgeDetectorsHeight2 + spaceBelowNeededToGrabBackOnForward2, transform.position + posChange1 + forwardLength/2 - rightWidth/4 + sideLedgeDetectorsLength2 - upHeight + thirdSideLedgeDetectorsHeight2 - sideLedgeDetectorsWidth2 + spaceBelowNeededToGrabBackOnForward2, out hit, collisionLayers | 1 << 4) && (!GetComponent<PlayerController>() || GetComponent<PlayerController>() && hit.transform.tag != GetComponent<PlayerController>().climbableTag2 && !GetComponent<PlayerController>().fifthTest) && Physics.Linecast(transform.position + posChange1 + forwardLength/3 - upHeight + thirdSideLedgeDetectorsHeight2 + spaceBelowNeededToGrabBackOnForward2, transform.position + posChange1 - forwardLength/4 - upHeight + rightWidth/4 - sideLedgeDetectorsLength2 + thirdSideLedgeDetectorsHeight2 + spaceBelowNeededToGrabBackOnForward2, out hit, collisionLayers | 1 << 4) && (!GetComponent<PlayerController>() || GetComponent<PlayerController>() && hit.transform.tag != GetComponent<PlayerController>().climbableTag2 && !GetComponent<PlayerController>().fifthTest)
						&&  Physics.Linecast(transform.position + posChange1 + forwardLength/2 - rightWidth/4 + sideLedgeDetectorsLength2 - upHeight + thirdSideLedgeDetectorsHeight2 - sideLedgeDetectorsWidth2 + spaceBelowNeededToGrabBackOnForward2, transform.position + posChange1 + forwardLength/4 - upHeight + thirdSideLedgeDetectorsHeight2 + spaceBelowNeededToGrabBackOnForward2, out hit, collisionLayers | 1 << 4) && (!GetComponent<PlayerController>() || GetComponent<PlayerController>() && hit.transform.tag != GetComponent<PlayerController>().climbableTag2 && !GetComponent<PlayerController>().fifthTest)) && Physics.Linecast(transform.position + posChange1 + forwardLength/3 - upHeight*0.1f + firstSideLedgeDetectorsHeight2 + spaceBelowNeededToGrabBackOnForward2, transform.position + posChange1 - forwardLength/4 - upHeight*0.1f + rightWidth/4 - sideLedgeDetectorsLength2 + firstSideLedgeDetectorsHeight2 + spaceBelowNeededToGrabBackOnForward2, out hit, collisionLayers | 1 << 4) && (!GetComponent<PlayerController>() || GetComponent<PlayerController>() && hit.transform.tag != GetComponent<PlayerController>().climbableTag2 && !GetComponent<PlayerController>().fifthTest)){
							if (Physics.Raycast(transform.position + midSidePosChange + posChange1 - upHeight/9 + forwardLength, -forwardLength/4, out hit, 3f, collisionLayers | 1 << 4) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
								backHit = -hit.normal;
								backRotation = Quaternion.LookRotation(-hit.normal);
							}
							else if (Physics.Raycast(transform.position + midSidePosChange + posChange1 - upHeight/20 + forwardLength, -forwardLength/4, out hit, 3f, collisionLayers | 1 << 4) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
								backHit = -hit.normal;
								backRotation = Quaternion.LookRotation(-hit.normal);
							}
							else {
								backHit = Vector3.zero;
								backRotation = Quaternion.LookRotation(-transform.forward, Vector3.up);
							}
							angleBetweenPlayerAndTurnBackWall = Vector3.Angle(transform.right, hit.normal);
					
							if (Physics.Linecast(transform.position + posChange1 + upHeight - forwardLength/3 + rightWidth*0.4f + grabBackOnLocationForward2 + grabBackOnLocationWidth2 + grabBackOnLocationHeight2, transform.position + posChange1 - upHeight - forwardLength/3 + rightWidth*0.4f + grabBackOnLocationForward2 + grabBackOnLocationWidth2, out hit, collisionLayers | 1 << 4) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) <= ledgeAngleLimit && (!GetComponent<PlayerController>() || GetComponent<PlayerController>() && hit.transform.tag != GetComponent<PlayerController>().climbableTag2 && !GetComponent<PlayerController>().fifthTest)){
								backPoint = new Vector3(hit.point.x + transform.forward.x*length2, hit.point.y - (height2*1.15f), hit.point.z + transform.forward.z*length2);
								playerPosY = backPoint.y;
								turnBackRight = true;
								turnBackLeft = false;
								turnBackMiddle = false;
								turnBack = true;
								canGrabBackOn = false;
							}
							else if (Physics.Linecast(transform.position + posChange1 + upHeight - forwardLength/2 + rightWidth*0.4f + grabBackOnLocationForward2 + grabBackOnLocationWidth2 + grabBackOnLocationHeight2, transform.position + posChange1 - upHeight - forwardLength/2 + rightWidth*0.4f + grabBackOnLocationForward2 + grabBackOnLocationWidth2, out hit, collisionLayers | 1 << 4) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) <= ledgeAngleLimit && (!GetComponent<PlayerController>() || GetComponent<PlayerController>() && hit.transform.tag != GetComponent<PlayerController>().climbableTag2 && !GetComponent<PlayerController>().fifthTest)){
								backPoint = new Vector3(hit.point.x + transform.forward.x*length2, hit.point.y - (height2*1.15f), hit.point.z + transform.forward.z*length2);
								playerPosY = backPoint.y;
								turnBackRight = true;
								turnBackLeft = false;
								turnBackMiddle = false;
								turnBack = true;
								canGrabBackOn = false;
							}
						}
						//if right is blocked, go to back left
						else if ((Physics.Linecast(transform.position + posChange1 + forwardLength/4 - upHeight*0.1f + firstSideLedgeDetectorsHeight2 + spaceBelowNeededToGrabBackOnForward2, transform.position + posChange1 + forwardLength/2 - upHeight*0.1f + rightWidth/4 + sideLedgeDetectorsLength2 + firstSideLedgeDetectorsHeight2 + sideLedgeDetectorsWidth2 + spaceBelowNeededToGrabBackOnForward2, out hit, collisionLayers | 1 << 4) && (!GetComponent<PlayerController>() || GetComponent<PlayerController>() && hit.transform.tag != GetComponent<PlayerController>().climbableTag2 && !GetComponent<PlayerController>().fifthTest)
						&&  Physics.Linecast(transform.position + posChange1 + forwardLength/2 - upHeight*0.1f + rightWidth/4 + sideLedgeDetectorsLength2 + firstSideLedgeDetectorsHeight2 + sideLedgeDetectorsWidth2 + spaceBelowNeededToGrabBackOnForward2, transform.position + posChange1 + forwardLength/4 - upHeight*0.1f + firstSideLedgeDetectorsHeight2 + spaceBelowNeededToGrabBackOnForward2, out hit, collisionLayers | 1 << 4) && (!GetComponent<PlayerController>() || GetComponent<PlayerController>() && hit.transform.tag != GetComponent<PlayerController>().climbableTag2 && !GetComponent<PlayerController>().fifthTest)
					
						||  Physics.Linecast(transform.position + posChange1 + forwardLength/4 - upHeight*0.5f + secondSideLedgeDetectorsHeight2 + spaceBelowNeededToGrabBackOnForward2, transform.position + posChange1 + forwardLength/2 - upHeight*0.5f + rightWidth/4 + sideLedgeDetectorsLength2 + secondSideLedgeDetectorsHeight2 + sideLedgeDetectorsWidth2 + spaceBelowNeededToGrabBackOnForward2, out hit, collisionLayers | 1 << 4) && (!GetComponent<PlayerController>() || GetComponent<PlayerController>() && hit.transform.tag != GetComponent<PlayerController>().climbableTag2 && !GetComponent<PlayerController>().fifthTest) && Physics.Linecast(transform.position + posChange1 + forwardLength/3 - upHeight*0.5f + secondSideLedgeDetectorsHeight2 + spaceBelowNeededToGrabBackOnForward2, transform.position + posChange1 - forwardLength/4 - upHeight*0.5f - rightWidth/4 - sideLedgeDetectorsLength2 + secondSideLedgeDetectorsHeight2 + spaceBelowNeededToGrabBackOnForward2, out hit, collisionLayers | 1 << 4) && (!GetComponent<PlayerController>() || GetComponent<PlayerController>() && hit.transform.tag != GetComponent<PlayerController>().climbableTag2 && !GetComponent<PlayerController>().fifthTest)
						&&  Physics.Linecast(transform.position + posChange1 + forwardLength/2 - upHeight*0.5f + rightWidth/4 + sideLedgeDetectorsLength2 + secondSideLedgeDetectorsHeight2 + sideLedgeDetectorsWidth2 + spaceBelowNeededToGrabBackOnForward2, transform.position + posChange1 + forwardLength/4 - upHeight*0.5f + secondSideLedgeDetectorsHeight2 + spaceBelowNeededToGrabBackOnForward2, out hit, collisionLayers | 1 << 4) && (!GetComponent<PlayerController>() || GetComponent<PlayerController>() && hit.transform.tag != GetComponent<PlayerController>().climbableTag2 && !GetComponent<PlayerController>().fifthTest)
						
						||  Physics.Linecast(transform.position + posChange1 + forwardLength/4 - upHeight + thirdSideLedgeDetectorsHeight2 + spaceBelowNeededToGrabBackOnForward2, transform.position + posChange1 + forwardLength/2 + rightWidth/4 + sideLedgeDetectorsLength2 - upHeight + thirdSideLedgeDetectorsHeight2 + sideLedgeDetectorsWidth2 + spaceBelowNeededToGrabBackOnForward2, out hit, collisionLayers | 1 << 4) && (!GetComponent<PlayerController>() || GetComponent<PlayerController>() && hit.transform.tag != GetComponent<PlayerController>().climbableTag2 && !GetComponent<PlayerController>().fifthTest) && Physics.Linecast(transform.position + posChange1 + forwardLength/3 - upHeight + thirdSideLedgeDetectorsHeight2 + spaceBelowNeededToGrabBackOnForward2, transform.position + posChange1 - forwardLength/4 - upHeight - rightWidth/4 - sideLedgeDetectorsLength2 + thirdSideLedgeDetectorsHeight2 + spaceBelowNeededToGrabBackOnForward2, out hit, collisionLayers | 1 << 4) && (!GetComponent<PlayerController>() || GetComponent<PlayerController>() && hit.transform.tag != GetComponent<PlayerController>().climbableTag2 && !GetComponent<PlayerController>().fifthTest)
						&&  Physics.Linecast(transform.position + posChange1 + forwardLength/2 + rightWidth/4 + sideLedgeDetectorsLength2 - upHeight + thirdSideLedgeDetectorsHeight2 + sideLedgeDetectorsWidth2 + spaceBelowNeededToGrabBackOnForward2, transform.position + posChange1 + forwardLength/4 - upHeight + thirdSideLedgeDetectorsHeight2 + spaceBelowNeededToGrabBackOnForward2, out hit, collisionLayers | 1 << 4) && (!GetComponent<PlayerController>() || GetComponent<PlayerController>() && hit.transform.tag != GetComponent<PlayerController>().climbableTag2 && !GetComponent<PlayerController>().fifthTest)) && Physics.Linecast(transform.position + posChange1 + forwardLength/3 - upHeight*0.1f + firstSideLedgeDetectorsHeight2 + spaceBelowNeededToGrabBackOnForward2, transform.position + posChange1 - forwardLength/4 - upHeight*0.1f - rightWidth/4 - sideLedgeDetectorsLength2 + firstSideLedgeDetectorsHeight2 + spaceBelowNeededToGrabBackOnForward2, out hit, collisionLayers | 1 << 4) && (!GetComponent<PlayerController>() || GetComponent<PlayerController>() && hit.transform.tag != GetComponent<PlayerController>().climbableTag2 && !GetComponent<PlayerController>().fifthTest)){
							if (Physics.Raycast(transform.position + midSidePosChange + posChange1 - upHeight/9 + forwardLength, -forwardLength/4, out hit, 3f, collisionLayers | 1 << 4) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
								backHit = -hit.normal;
								backRotation = Quaternion.LookRotation(-hit.normal);
							}
							else if (Physics.Raycast(transform.position + midSidePosChange + posChange1 - upHeight/20 + forwardLength, -forwardLength/4, out hit, 3f, collisionLayers | 1 << 4) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
								backHit = -hit.normal;
								backRotation = Quaternion.LookRotation(-hit.normal);
							}
							else {
								backHit = Vector3.zero;
								backRotation = Quaternion.LookRotation(-transform.forward, Vector3.up);
							}
							angleBetweenPlayerAndTurnBackWall = Vector3.Angle(transform.right, hit.normal);
					
							if (Physics.Linecast(transform.position + posChange1 + upHeight - forwardLength/3 - rightWidth*0.4f + grabBackOnLocationForward2 - grabBackOnLocationWidth2 + grabBackOnLocationHeight2, transform.position + posChange1 - upHeight - forwardLength/3 - rightWidth*0.4f + grabBackOnLocationForward2 - grabBackOnLocationWidth2, out hit, collisionLayers | 1 << 4) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) <= ledgeAngleLimit && (!GetComponent<PlayerController>() || GetComponent<PlayerController>() && hit.transform.tag != GetComponent<PlayerController>().climbableTag2 && !GetComponent<PlayerController>().fifthTest)){
								backPoint = new Vector3(hit.point.x + transform.forward.x*length2, hit.point.y - (height2*1.15f), hit.point.z + transform.forward.z*length2);
								playerPosY = backPoint.y;
								turnBackLeft = true;
								turnBackRight = false;
								turnBackMiddle = false;
								turnBack = true;
								canGrabBackOn = false;
							}
							else if (Physics.Linecast(transform.position + posChange1 + upHeight - forwardLength/2 - rightWidth*0.4f + grabBackOnLocationForward2 - grabBackOnLocationWidth2 + grabBackOnLocationHeight2, transform.position + posChange1 - upHeight - forwardLength/2 - rightWidth*0.4f + grabBackOnLocationForward2 - grabBackOnLocationWidth2, out hit, collisionLayers | 1 << 4) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) <= ledgeAngleLimit && (!GetComponent<PlayerController>() || GetComponent<PlayerController>() && hit.transform.tag != GetComponent<PlayerController>().climbableTag2 && !GetComponent<PlayerController>().fifthTest)){
								backPoint = new Vector3(hit.point.x + transform.forward.x*length2, hit.point.y - (height2*1.15f), hit.point.z + transform.forward.z*length2);
								playerPosY = backPoint.y;
								turnBackLeft = true;
								turnBackRight = false;
								turnBackMiddle = false;
								turnBack = true;
								canGrabBackOn = false;
							}
						}
						//if neither side is blocked, go directly back
						else if ((Physics.Linecast(transform.position + posChange1 + forwardLength/3.5f - upHeight*0.05f + spaceBelowNeededToGrabBackOnForward2, transform.position + posChange1 - forwardLength*0.25f - upHeight*0.05f + spaceBelowNeededToGrabBackOnForward2, out hit, collisionLayers | 1 << 4) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) > 45 && (!GetComponent<PlayerController>() || GetComponent<PlayerController>() && hit.transform.tag != GetComponent<PlayerController>().climbableTag2 && !GetComponent<PlayerController>().fifthTest)
						||  Physics.Linecast(transform.position + posChange1 + forwardLength/3.5f - upHeight*0.15f + spaceBelowNeededToGrabBackOnForward2, transform.position + posChange1 - forwardLength*0.25f - upHeight*0.15f + spaceBelowNeededToGrabBackOnForward2, out hit, collisionLayers | 1 << 4) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) > 45 && (!GetComponent<PlayerController>() || GetComponent<PlayerController>() && hit.transform.tag != GetComponent<PlayerController>().climbableTag2 && !GetComponent<PlayerController>().fifthTest)
						||  Physics.Linecast(transform.position + posChange1 + forwardLength/3.5f - upHeight*0.25f + spaceBelowNeededToGrabBackOnForward2, transform.position + posChange1 - forwardLength*0.25f - upHeight*0.25f + spaceBelowNeededToGrabBackOnForward2, out hit, collisionLayers | 1 << 4) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) > 45 && (!GetComponent<PlayerController>() || GetComponent<PlayerController>() && hit.transform.tag != GetComponent<PlayerController>().climbableTag2 && !GetComponent<PlayerController>().fifthTest)
						||  Physics.Linecast(transform.position + posChange1 + forwardLength/3.5f - upHeight*0.05f + spaceBelowNeededToGrabBackOnForward2, transform.position + posChange1 - forwardLength*0.5f - upHeight*0.05f + spaceBelowNeededToGrabBackOnForward2, out hit, collisionLayers | 1 << 4) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) > 45 && (!GetComponent<PlayerController>() || GetComponent<PlayerController>() && hit.transform.tag != GetComponent<PlayerController>().climbableTag2 && !GetComponent<PlayerController>().fifthTest)
						||  Physics.Linecast(transform.position + posChange1 + forwardLength/3.5f - upHeight*0.15f + spaceBelowNeededToGrabBackOnForward2, transform.position + posChange1 - forwardLength*0.5f - upHeight*0.15f + spaceBelowNeededToGrabBackOnForward2, out hit, collisionLayers | 1 << 4) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) > 45 && (!GetComponent<PlayerController>() || GetComponent<PlayerController>() && hit.transform.tag != GetComponent<PlayerController>().climbableTag2 && !GetComponent<PlayerController>().fifthTest)
						||  Physics.Linecast(transform.position + posChange1 + forwardLength/3.5f - upHeight*0.25f + spaceBelowNeededToGrabBackOnForward2, transform.position + posChange1 - forwardLength*0.5f - upHeight*0.25f + spaceBelowNeededToGrabBackOnForward2, out hit, collisionLayers | 1 << 4) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) > 45 && (!GetComponent<PlayerController>() || GetComponent<PlayerController>() && hit.transform.tag != GetComponent<PlayerController>().climbableTag2 && !GetComponent<PlayerController>().fifthTest))
						&& !Physics.Linecast(new Vector3( (hit.point + hit.normal/(3.5f/length2)).x, transform.position.y + upHeight.y*0.5f, (hit.point + hit.normal/(3.5f/length2)).z), new Vector3( (hit.point + hit.normal/(3.5f/length2)).x, transform.position.y - upHeight.y*1.5f - spaceBelowNeededToGrabBackOnHeight2.y, (hit.point + hit.normal/(3.5f/length2)).z), out hit, collisionLayers | 1 << 4)){
							
							if (Physics.Raycast(transform.position + midSidePosChange + posChange1 - upHeight/9 + forwardLength, -forwardLength/4, out hit, 3f, collisionLayers | 1 << 4) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
								backHit = -hit.normal;
								backRotation = Quaternion.LookRotation(-hit.normal);
							}
							else if (Physics.Raycast(transform.position + midSidePosChange + posChange1 - upHeight/20 + forwardLength, -forwardLength/4, out hit, 3f, collisionLayers | 1 << 4) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
								backHit = -hit.normal;
								backRotation = Quaternion.LookRotation(-hit.normal);
							}
							else {
								backHit = Vector3.zero;
								backRotation = Quaternion.LookRotation(-transform.forward, Vector3.up);
							}
							angleBetweenPlayerAndTurnBackWall = Vector3.Angle(transform.right, hit.normal);
							
							if (Physics.Linecast(transform.position + posChange1 + upHeight - forwardLength/2 + grabBackOnLocationForward2 + grabBackOnLocationHeight2, transform.position + posChange1 - upHeight - forwardLength/2 + grabBackOnLocationForward2, out hit, collisionLayers | 1 << 4) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) <= ledgeAngleLimit && (!GetComponent<PlayerController>() || GetComponent<PlayerController>() && hit.transform.tag != GetComponent<PlayerController>().climbableTag2 && !GetComponent<PlayerController>().fifthTest)){
								backPoint = new Vector3(hit.point.x + transform.forward.x*length2, hit.point.y - (height2*1.15f), hit.point.z + transform.forward.z*length2);
								playerPosY = backPoint.y;
								turnBackMiddle = true;
								turnBackLeft = false;
								turnBackRight = false;
								turnBack = true;
								canGrabBackOn = false;
							}
						}
						else {
							turnBackMiddle = false;
							turnBackLeft = false;
							turnBackRight = false;
							turnBack = false;
						}
						
						
						//if player can jump off ledge, jump
						if (canJumpOffLedge && walkingOffLedgeDetectors.allowJumpingOffLedges){
							turnBack = true;
							canGrabBackOn = false;
						}
					}
				}
				
				//getting the position to lerp to when walking off a ledge
				if (turnBackMiddle){
					if (Physics.Linecast(transform.position + posChange1 + forwardLength/3.5f - upHeight*0.05f + spaceBelowNeededToGrabBackOnForward2, transform.position + posChange1 - forwardLength*0.25f - upHeight*0.05f + spaceBelowNeededToGrabBackOnForward2, out hit, collisionLayers | 1 << 4) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) > 45){
						turnBackPoint = hit.point + hit.normal/(3.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange1 + forwardLength/3.5f - upHeight*0.15f + spaceBelowNeededToGrabBackOnForward2, transform.position + posChange1 - forwardLength*0.25f - upHeight*0.15f + spaceBelowNeededToGrabBackOnForward2, out hit, collisionLayers | 1 << 4) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) > 45){
						turnBackPoint = hit.point + hit.normal/(3.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange1 + forwardLength/3.5f - upHeight*0.25f + spaceBelowNeededToGrabBackOnForward2, transform.position + posChange1 - forwardLength*0.25f - upHeight*0.25f + spaceBelowNeededToGrabBackOnForward2, out hit, collisionLayers | 1 << 4) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) > 45){
						turnBackPoint = hit.point + hit.normal/(3.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange1 + forwardLength/3.5f - upHeight*0.05f + spaceBelowNeededToGrabBackOnForward2, transform.position + posChange1 - forwardLength*0.5f - upHeight*0.05f + spaceBelowNeededToGrabBackOnForward2, out hit, collisionLayers | 1 << 4) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) > 45){
						turnBackPoint = hit.point + hit.normal/(3.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange1 + forwardLength/3.5f - upHeight*0.15f + spaceBelowNeededToGrabBackOnForward2, transform.position + posChange1 - forwardLength*0.5f - upHeight*0.15f + spaceBelowNeededToGrabBackOnForward2, out hit, collisionLayers | 1 << 4) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) > 45){
						turnBackPoint = hit.point + hit.normal/(3.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange1 + forwardLength/3.5f - upHeight*0.25f + spaceBelowNeededToGrabBackOnForward2, transform.position + posChange1 - forwardLength*0.5f - upHeight*0.25f + spaceBelowNeededToGrabBackOnForward2, out hit, collisionLayers | 1 << 4) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) > 45){
						turnBackPoint = hit.point + hit.normal/(3.5f/length2);
					}
					else {
						turnBackPoint = new Vector3(backPoint.x - transform.forward.x*length2/15, (playerPosY + onLedgeHeight2/10), backPoint.z - transform.forward.z*length2/15);
					}
				}
				else if (turnBackLeft){
					if (Physics.Linecast(transform.position + posChange1 + forwardLength/3.5f - upHeight*0.05f + spaceBelowNeededToGrabBackOnForward2 - rightWidth*0.4f, transform.position + posChange1 - forwardLength*0.25f - upHeight*0.05f + spaceBelowNeededToGrabBackOnForward2 - rightWidth*0.4f, out hit, collisionLayers | 1 << 4) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) > 45){
						turnBackPoint = hit.point + hit.normal/(3.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange1 + forwardLength/3.5f - upHeight*0.15f + spaceBelowNeededToGrabBackOnForward2 - rightWidth*0.4f, transform.position + posChange1 - forwardLength*0.25f - upHeight*0.15f + spaceBelowNeededToGrabBackOnForward2 - rightWidth*0.4f, out hit, collisionLayers | 1 << 4) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) > 45){
						turnBackPoint = hit.point + hit.normal/(3.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange1 + forwardLength/3.5f - upHeight*0.25f + spaceBelowNeededToGrabBackOnForward2 - rightWidth*0.4f, transform.position + posChange1 - forwardLength*0.25f - upHeight*0.25f + spaceBelowNeededToGrabBackOnForward2 - rightWidth*0.4f, out hit, collisionLayers | 1 << 4) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) > 45){
						turnBackPoint = hit.point + hit.normal/(3.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange1 + forwardLength/3.5f - upHeight*0.05f + spaceBelowNeededToGrabBackOnForward2 - rightWidth*0.4f, transform.position + posChange1 - forwardLength*0.5f - upHeight*0.05f + spaceBelowNeededToGrabBackOnForward2 - rightWidth*0.4f, out hit, collisionLayers | 1 << 4) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) > 45){
						turnBackPoint = hit.point + hit.normal/(3.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange1 + forwardLength/3.5f - upHeight*0.15f + spaceBelowNeededToGrabBackOnForward2 - rightWidth*0.4f, transform.position + posChange1 - forwardLength*0.5f - upHeight*0.15f + spaceBelowNeededToGrabBackOnForward2 - rightWidth*0.4f, out hit, collisionLayers | 1 << 4) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) > 45){
						turnBackPoint = hit.point + hit.normal/(3.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange1 + forwardLength/3.5f - upHeight*0.25f + spaceBelowNeededToGrabBackOnForward2 - rightWidth*0.4f, transform.position + posChange1 - forwardLength*0.5f - upHeight*0.25f + spaceBelowNeededToGrabBackOnForward2 - rightWidth*0.4f, out hit, collisionLayers | 1 << 4) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) > 45){
						turnBackPoint = hit.point + hit.normal/(3.5f/length2);
					}
					else {
						turnBackPoint = new Vector3(backPoint.x - transform.forward.x*length2/15, (playerPosY + onLedgeHeight2/10), backPoint.z - transform.forward.z*length2/15);
					}
				}
				else if (turnBackRight){
					if (Physics.Linecast(transform.position + posChange1 + forwardLength/3.5f - upHeight*0.05f + spaceBelowNeededToGrabBackOnForward2 + rightWidth*0.4f, transform.position + posChange1 - forwardLength*0.25f - upHeight*0.05f + spaceBelowNeededToGrabBackOnForward2 + rightWidth*0.4f, out hit, collisionLayers | 1 << 4) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) > 45){
						turnBackPoint = hit.point + hit.normal/(3.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange1 + forwardLength/3.5f - upHeight*0.15f + spaceBelowNeededToGrabBackOnForward2 + rightWidth*0.4f, transform.position + posChange1 - forwardLength*0.25f - upHeight*0.15f + spaceBelowNeededToGrabBackOnForward2 + rightWidth*0.4f, out hit, collisionLayers | 1 << 4) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) > 45){
						turnBackPoint = hit.point + hit.normal/(3.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange1 + forwardLength/3.5f - upHeight*0.25f + spaceBelowNeededToGrabBackOnForward2 + rightWidth*0.4f, transform.position + posChange1 - forwardLength*0.25f - upHeight*0.25f + spaceBelowNeededToGrabBackOnForward2 + rightWidth*0.4f, out hit, collisionLayers | 1 << 4) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) > 45){
						turnBackPoint = hit.point + hit.normal/(3.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange1 + forwardLength/3.5f - upHeight*0.05f + spaceBelowNeededToGrabBackOnForward2 + rightWidth*0.4f, transform.position + posChange1 - forwardLength*0.5f - upHeight*0.05f + spaceBelowNeededToGrabBackOnForward2 + rightWidth*0.4f, out hit, collisionLayers | 1 << 4) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) > 45){
						turnBackPoint = hit.point + hit.normal/(3.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange1 + forwardLength/3.5f - upHeight*0.15f + spaceBelowNeededToGrabBackOnForward2 + rightWidth*0.4f, transform.position + posChange1 - forwardLength*0.5f - upHeight*0.15f + spaceBelowNeededToGrabBackOnForward2 + rightWidth*0.4f, out hit, collisionLayers | 1 << 4) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) > 45){
						turnBackPoint = hit.point + hit.normal/(3.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange1 + forwardLength/3.5f - upHeight*0.25f + spaceBelowNeededToGrabBackOnForward2 + rightWidth*0.4f, transform.position + posChange1 - forwardLength*0.5f - upHeight*0.25f + spaceBelowNeededToGrabBackOnForward2 + rightWidth*0.4f, out hit, collisionLayers | 1 << 4) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) > 45){
						turnBackPoint = hit.point + hit.normal/(3.5f/length2);
					}
					else {
						turnBackPoint = new Vector3(backPoint.x - transform.forward.x*length2/15, (playerPosY + onLedgeHeight2/10), backPoint.z - transform.forward.z*length2/15);
					}
				}
			}
			
		}
		
		//turning around when you walk off an edge
		if (turnBack){
			
			//if player is on moving platform
			if (transform.parent != null){
				if (!onPlatform){
					//position
					originalPlatformPosition = transform.parent.position;
					originalTurnBackPoint = turnBackPoint;
					originalPlayerPosY = playerPosY;
					//rotation
					originalPlatformRotation = transform.parent.rotation;
					originalBackRotation = backRotation;
					onPlatform = true;
				}
				if (onPlatform){
					//position
					turnBackPoint = originalTurnBackPoint + (transform.parent.position - originalPlatformPosition);
					if (!climbable || !climbPossible){
						playerPosY = originalPlayerPosY + (transform.parent.position - originalPlatformPosition).y;
					}
					//rotation
					backRotation = originalBackRotation * (transform.parent.rotation * Quaternion.Inverse(originalPlatformRotation));
				}
			}
			else {
				onPlatform = false;
			}
			
			//turning around
			if (walkingOffLedgeDetectors.allowJumpingOffLedges && directionVector.magnitude >= walkingOffLedgeDetectors.inputPercentageNeededToJump/100 && ledgeJumpPossible){
				back2 = false;
				grabbedOn = false;
				pullingUp = false;
				getOn = false;
				getOn2 = false;
				jumpDir = (transform.forward * walkingOffLedgeDetectors.jumpDistance) + (transform.up * walkingOffLedgeDetectors.jumpHeight);
				turnBack = false;
			}
			else if (walkingOffLedgeDetectors.allowGrabbingBackOnToLedges && nonJumpTurnAround && (turnBackMiddle || turnBackLeft || turnBackRight)){
				jumpDir = Vector3.zero;
				ledgeJumpPossible = false;
				if (!stayUpright){
					turnBackTimer = 0.0f;
					if (Vector3.Distance(transform.position, new Vector3(turnBackPoint.x, (playerPosY + onLedgeHeight2/10), turnBackPoint.z)) > 0.3f || Quaternion.Angle(transform.rotation, backRotation) > 0.1f){
						back2 = false;
						grabbedOn = false;
						pullingUp = false;
						getOn = false;
						getOn2 = false;
						if (characterController && characterController.enabled){
							transform.position = Vector3.Lerp(transform.position, new Vector3(turnBackPoint.x, (playerPosY + onLedgeHeight2/10), turnBackPoint.z), 10 * Time.deltaTime);
						}
						else if (rigidBody){
							transform.position = Vector3.Slerp(transform.position, new Vector3(turnBackPoint.x, (playerPosY + onLedgeHeight2/10), turnBackPoint.z), 10 * Time.deltaTime);
						}
						transform.rotation = Quaternion.Slerp(transform.rotation, backRotation, 12 * Time.deltaTime);
						playerPosXZ = transform.position + posChange2;
					}
					else {
						back2 = true;
						canGrabBackOn = false;
						turnBack = false;
					}
				}
				else {
					if (Vector3.Distance(transform.position, new Vector3(turnBackPoint.x, (playerPosY + onLedgeHeight2/10), turnBackPoint.z)) > 0.3f && turnBackTimer < 0.5f || Quaternion.Angle(transform.rotation, backRotation) > 0.1f && turnBackTimer < 0.5f){
						turnBackTimer += 0.02f;
						back2 = false;
						grabbedOn = false;
						pullingUp = false;
						getOn = false;
						getOn2 = false;
						if (characterController && characterController.enabled){
							transform.position = Vector3.Lerp(transform.position, new Vector3(turnBackPoint.x, (playerPosY + onLedgeHeight2/10), turnBackPoint.z), 10 * Time.deltaTime);
						}
						else if (rigidBody){
							transform.position = Vector3.Slerp(transform.position, new Vector3(turnBackPoint.x, (playerPosY + onLedgeHeight2/10), turnBackPoint.z), 10 * Time.deltaTime);
						}
						transform.rotation = Quaternion.Slerp(transform.rotation, backRotation, 12 * Time.deltaTime);
						playerPosXZ = transform.position + posChange2;
					}
					else {
						turnBackTimer = 0.0f;
						back2 = true;
						canGrabBackOn = false;
						turnBack = false;
					}
				}
			}
			else {
				back2 = false;
				turnBack = false;
			}
			
		}
		else {
			onPlatform = false;
		}
		
		
		if (walkingOffLedgeDetectors.allowGrabbingBackOnToLedges){
			if (back2){
				turnBack = false;
				if (!grabbedOn){
					if (onPlatform){
						playerPosXZ = transform.position + posChange2;
					}
					transform.position = new Vector3(playerPosXZ.x, (playerPosY + onLedgeHeight2/10), playerPosXZ.z);
					grabbedOn = true;
					canGrabBackOn = false;
				}
			}
			if (turnBack || back2){
				movementSpeed = 0;
				if (Input.GetButtonDown("Jump")){
					if (scriptsToDisableOnGrab != null){
						foreach (string script in scriptsToDisableOnGrab)
						{
							scriptToDisable = GetComponent(script) as MonoBehaviour;
							if (scriptToDisable != null){
								scriptToDisable.enabled = true;
							}
							else if (!currentlyEnablingAndDisablingScripts || turnBack){
								scriptWarning = true;
							}
						}
					}
					if (scriptsToEnableOnGrab != null){
						foreach (string script in scriptsToEnableOnGrab)
						{
							scriptToEnable = GetComponent(script) as MonoBehaviour;
							if (scriptToEnable != null){
								scriptToEnable.enabled = false;
							}
							else if (!currentlyEnablingAndDisablingScripts || turnBack){
								scriptWarning = true;
							}
						}
					}
					currentlyEnablingAndDisablingScripts = true;
					jumpedOffTimer = 0;
					jumpedOffDirection = -transform.forward*distanceToPushOffOfLedgeAfterLettingGo;
					if (GetComponent<Animator>()){
						GetComponent<Animator>().speed = 1;
					}
					getOn = false;
					getOn2 = false;
					pullingUp = false;
					grabbedOn = false;
					turnBack = false;
				}
				else {
					if (scriptsToDisableOnGrab != null){
						foreach (string script in scriptsToDisableOnGrab)
						{
							scriptToDisable = GetComponent(script) as MonoBehaviour;
							if (scriptToDisable != null){
								scriptToDisable.enabled = false;
							}
							else if (!currentlyEnablingAndDisablingScripts){
								scriptWarning = true;
							}
						}
					}
					if (scriptsToEnableOnGrab != null){
						foreach (string script in scriptsToEnableOnGrab)
						{
							scriptToEnable = GetComponent(script) as MonoBehaviour;
							if (scriptToEnable != null){
								scriptToEnable.enabled = true;
							}
							else if (!currentlyEnablingAndDisablingScripts){
								scriptWarning = true;
							}
						}
					}
					currentlyEnablingAndDisablingScripts = true;
				}
			}
		}
		
		
		//jumping off of ledges
		
		if (inAirFromJumpingOffLedge && noCollisionTimer >= 2 || inAirFromJumpingOffLedge && !currentStatesOfVariables.grounded && !walkingOffLedgeDetectors.disableScriptsWhileJumping){
			inAirFromJumpingOffLedgeNoCollision = true;
		}
		
		if (inAirFromJumpingOffLedgeNoCollision && noCollisionTimer < 2 || jumpDir == Vector3.zero){
			inAirFromJumpingOffLedgeNoCollision = false;
		}
		
		yPosDiff = transform.position.y - lastYPos;
		lastYPos = transform.position.y;
		
		if (characterController && characterController.enabled){
			vel = characterController.velocity;
		}
		else if (rigidBody){
			vel = rigidBody.velocity;
		}
		
		if (Physics.Raycast(pos, Vector3.down, out hit, 1f, collisionLayers) && noCollisionTimer < 5 && currentStatesOfVariables.grounded
		||  (Physics.Raycast(pos, Vector3.down, out hit, 1f, collisionLayers) && noCollisionTimer < 5 || currentStatesOfVariables.grounded) && rigidBody){
			if (inAirFromJumpingOffLedge && !walkingOffLedgeDetectors.disableScriptsWhileJumping){
				inAirFromJumpingOffLedge = false;
				jumpDir = Vector3.zero;
			}
		}
		if (Vector3.Distance(jumpDir, Vector3.zero) > 0.1f && yPosDiff*5 < 1*(walkingOffLedgeDetectors.jumpHeight/7)
		|| inAirFromJumpingOffLedgeNoCollision && yPosDiff*5 < 1*(walkingOffLedgeDetectors.jumpHeight/7)){
			turnBack = false;
			if (!currentStatesOfVariables.grounded){
				jumpDust = true;
				inAirFromJumpingOffLedge = true;
			}
			if (inAirFromJumpingOffLedge){
				if (walkingOffLedgeDetectors.disableScriptsWhileJumping && vel.y != 0){
					if (scriptsToDisableOnGrab != null){
						foreach (string script in scriptsToDisableOnGrab)
						{
							scriptToDisable = GetComponent(script) as MonoBehaviour;
							if (scriptToDisable != null){
								scriptToDisable.enabled = false;
							}
							else if (!currentlyEnablingAndDisablingScripts){
								scriptWarning = true;
							}
						}
					}
					if (scriptsToEnableOnGrab != null){
						foreach (string script in scriptsToEnableOnGrab)
						{
							scriptToEnable = GetComponent(script) as MonoBehaviour;
							if (scriptToEnable != null){
								scriptToEnable.enabled = true;
							}
							else if (!currentlyEnablingAndDisablingScripts){
								scriptWarning = true;
							}
						}
					}
					currentlyEnablingAndDisablingScripts = true;
				}
				
				if (!climbable || !climbPossible){
					jumpDir.x = Mathf.Lerp(jumpDir.x, 0, walkingOffLedgeDetectors.jumpDecelerationRate * Time.deltaTime);
					jumpDir.z = Mathf.Lerp(jumpDir.z, 0, walkingOffLedgeDetectors.jumpDecelerationRate * Time.deltaTime);
					if (walkingOffLedgeDetectors.useGravity){
						jumpDir.y -= walkingOffLedgeDetectors.gravity * Time.deltaTime;
					}
					
					if (characterController && characterController.enabled){
						characterController.Move(jumpDir * Time.deltaTime);
					}
					else if (rigidBody){
						rigidBody.MovePosition(transform.position + jumpDir * Time.deltaTime);
					}
				}
				else {
					jumpDir = Vector3.zero;
				}
				
			}
			else {
				inAirFromJumpingOffLedge = false;
			}
			
			if (currentStatesOfVariables.grounded || !currentStatesOfVariables.grounded && !inAirFromJumpingOffLedge && !grabbedOn
			|| !currentStatesOfVariables.grounded && climbable && climbPossible && !grabbedOn || !inAirFromJumpingOffLedgeNoCollision){
				if (!canJumpOffLedge && inAirFromJumpingOffLedge && (noCollisionTimer > 5 || !rigidBody)){
					if (walkingOffLedgeDetectors.disableScriptsWhileJumping){
						if (scriptsToDisableOnGrab != null){
							foreach (string script in scriptsToDisableOnGrab)
							{
								scriptToDisable = GetComponent(script) as MonoBehaviour;
								if (scriptToDisable != null){
									scriptToDisable.enabled = true;
								}
								else if (!currentlyEnablingAndDisablingScripts || jumpDir != Vector3.zero){
									scriptWarning = true;
								}
							}
						}
						if (scriptsToEnableOnGrab != null){
							foreach (string script in scriptsToEnableOnGrab)
							{
								scriptToEnable = GetComponent(script) as MonoBehaviour;
								if (scriptToEnable != null){
									scriptToEnable.enabled = false;
								}
								else if (!currentlyEnablingAndDisablingScripts || jumpDir != Vector3.zero){
									scriptWarning = true;
								}
							}
						}
						currentlyEnablingAndDisablingScripts = true;
					}
					inAirFromJumpingOffLedge = false;
					jumpDir = Vector3.zero;
				}
			}
			
		}
		else if (noCollisionTimer > 5 || !rigidBody){
			inAirFromJumpingOffLedge = false;
			jumpDir = Vector3.zero;
		}
		
		//creating the optional dust effect after landing a jump off of a ledge
		if (!inAirFromJumpingOffLedge && jumpDust && jumpLandingEffect2 != null && currentStatesOfVariables.grounded){
			jumpDir = Vector3.zero;
			Instantiate(jumpLandingEffect2, transform.position + new Vector3(0, 0.05f, 0), jumpLandingEffect2.transform.rotation);
			jumpDust = false;
		}
		
		
		//checking to see if player's y position (if using a Rigidbody) is decreasing
		if (rigidBody){
			if (transform.position.y <= rbPosY && !pullingUp || rigidBody.velocity.y <= 0 && !pullingUp){
				rbPosYIncreasing = false;
			}
			else {
				rbPosYIncreasing = true;
			}
			rbPosY = transform.position.y;
		
			//checking to see if player (if using a Rigidbody) is using "Use Gravity"
			if (rigidBody.useGravity && !grabbedOn && !pullingUp && !turnBack && !back2){
				rbUsesGravity = true;
			}
			
			if (grabbedOn || pullingUp || turnBack || back2){
				canChangeRbGravity = true;
				rigidBody.useGravity = false;
			}
			else if (rbUsesGravity && canChangeRbGravity){
				rigidBody.useGravity = true;
				canChangeRbGravity = false;
			}
			
			if (!rigidBody.useGravity && !grabbedOn && !pullingUp && !turnBack && !back2){
				rbUsesGravity = false;
			}
		}	
		
		//checking to see if player has not completely grabbed on to a ledge yet
		if (turnBack || switching || !grabbedOn){
			hasNotMovedOnLedgeYet = true;
			if (!switching || !ledgeSwitchingDetectors.allowLedgeSwitching){
				hasNotMovedOnLedgeAsideFromLedgeSwitchingYet = true;
			}
		}
		
		if (grabbedOn){
			back2 = false;

			//detect sides
			//left
			if (!Physics.Linecast(transform.position + posChange1 + upHeight - (rightWidth/4)  - minDistFromGroundWidth2, transform.position + posChange1 - upHeight/4 - (rightWidth/4) + minDistFromGroundHeight2 - minDistFromGroundWidth2, out hit, collisionLayers)){
				if (!leftBlocked && leftMovable && !Physics.Linecast(transform.position + midSidePosChange + posChange2 + upHeight - forwardLength/3 + firstBackWallDetectorsForward2, transform.position + midSidePosChange + posChange2 + upHeight - forwardLength/3 - rightWidth + firstBackWallDetectorsForward2 + firstBackWallDetectorsWidth2, out hit, collisionLayers) && Physics.Linecast(transform.position + midSidePosChange + posChange2 + upHeight - forwardLength - (rightWidth/2), transform.position + midSidePosChange + posChange2 + upHeight + forwardLength - (rightWidth/2), out hit, collisionLayers)) {
					lSide = hit.point;
					left = true;
				}
				else if (!leftBlocked && leftMovable && Physics.Linecast(transform.position + midSidePosChange + posChange2 + upHeight - forwardLength/3 + firstBackWallDetectorsForward2, transform.position + midSidePosChange + posChange2 + upHeight - forwardLength/3 - rightWidth + firstBackWallDetectorsForward2 + firstBackWallDetectorsWidth2, out hit, collisionLayers)){
					lSide = hit.point;
					left = true;
				}
				else if (!leftBlocked && leftMovable && Physics.Linecast(transform.position + midSidePosChange + posChange2 + upHeight - forwardLength/2 + secondBackWallDetectorsForward2, transform.position + midSidePosChange + posChange2 + upHeight - forwardLength/2 - rightWidth + secondBackWallDetectorsForward2 + secondBackWallDetectorsWidth2, out hit, collisionLayers)){
					lSide = hit.point;
					left = true;
				}
				//back vertical line
				else if (!leftBlocked && leftMovable && Physics.Linecast(transform.position + midSidePosChange + posChange2 + upHeight*1.2f - forwardLength/1.75f + upHeight*1.5f - (rightWidth/2) + backTopOfLedgeSurfaceDetectorsForward2, transform.position + midSidePosChange + posChange2 + upHeight - forwardLength/2 - upHeight/2 - (rightWidth/2) + backTopOfLedgeSurfaceDetectorsForward2, out hit, collisionLayers)){
					lSide = hit.point + rightWidth/3;
					left = true;
				}
				//front vertical line
				else if (Physics.Linecast(transform.position + midSidePosChange + posChange2 + upHeight*1.2f + forwardLength/1.25f + upHeight*1.5f - (rightWidth/2) + frontTopOfLedgeSurfaceDetectorsForward2, transform.position + midSidePosChange + posChange2 + upHeight + forwardLength/1.75f - upHeight/2 - (rightWidth/2) + frontTopOfLedgeSurfaceDetectorsForward2, out hit, collisionLayers)) {
					lSide = hit.point;
					left = true;
				}
		
				else if (Physics.Linecast(transform.position + midSidePosChange + posChange2 + upHeight + forwardLength/2 - (rightWidth/2) + firstFrontWallDetectorsForward2, transform.position + midSidePosChange + posChange2 + upHeight + forwardLength/2 + rightWidth + firstFrontWallDetectorsForward2 + firstFrontWallDetectorsWidth2, out hit, collisionLayers)){
					lSide = hit.point - rightWidth/3;
					left = true;
				}
				else if (Physics.Linecast(transform.position + midSidePosChange + posChange2 + upHeight + forwardLength - (rightWidth/2) + secondFrontWallDetectorsForward2, transform.position + midSidePosChange + posChange2 + upHeight + forwardLength + rightWidth + secondFrontWallDetectorsForward2 + secondFrontWallDetectorsWidth2, out hit, collisionLayers)){
					lSide = hit.point - rightWidth/3;
					left = true;
				}
				else{
					left = false;
				}
			}
			else{
				left = false;
			}
	
			//right	
			if (!Physics.Linecast(transform.position + posChange1 + upHeight + (rightWidth/4) + minDistFromGroundWidth2, transform.position + posChange1 - upHeight/4 + (rightWidth/4) + minDistFromGroundHeight2 + minDistFromGroundWidth2, out hit, collisionLayers)){
				if (!rightBlocked && rightMovable && !Physics.Linecast(transform.position + midSidePosChange + posChange2 + upHeight - forwardLength/3 + firstBackWallDetectorsForward2, transform.position + midSidePosChange + posChange2 + upHeight - forwardLength/3 + rightWidth + firstBackWallDetectorsForward2 - firstBackWallDetectorsWidth2, out hit, collisionLayers) && Physics.Linecast(transform.position + midSidePosChange + posChange2 + upHeight - forwardLength + (rightWidth/2), transform.position + midSidePosChange + posChange2 + upHeight + forwardLength + (rightWidth/2), out hit, collisionLayers)) {
					rSide = hit.point;
					right = true;
				}
				else if (!rightBlocked && rightMovable && Physics.Linecast(transform.position + midSidePosChange + posChange2 + upHeight - forwardLength/3 + firstBackWallDetectorsForward2, transform.position + midSidePosChange + posChange2 + upHeight - forwardLength/3 + rightWidth + firstBackWallDetectorsForward2 - firstBackWallDetectorsWidth2, out hit, collisionLayers)){
					rSide = hit.point;
					right = true;
				}
				else if (!rightBlocked && rightMovable && Physics.Linecast(transform.position + midSidePosChange + posChange2 + upHeight - forwardLength/2 + secondBackWallDetectorsForward2, transform.position + midSidePosChange + posChange2 + upHeight - forwardLength/2 + rightWidth + secondBackWallDetectorsForward2 - secondBackWallDetectorsWidth2, out hit, collisionLayers)){
					rSide = hit.point;
					right = true;
				}
				//back vertical line
				else if (!rightBlocked && rightMovable && Physics.Linecast(transform.position + midSidePosChange + posChange2 + upHeight*1.2f - forwardLength/1.75f + upHeight*1.5f + (rightWidth/2) + backTopOfLedgeSurfaceDetectorsForward2, transform.position + midSidePosChange + posChange2 + upHeight - forwardLength/2 - upHeight/2 + (rightWidth/2) + backTopOfLedgeSurfaceDetectorsForward2, out hit, collisionLayers)){
					rSide = hit.point - rightWidth/3;
					right = true;
				}
				//front vertical line
				else if (Physics.Linecast(transform.position + midSidePosChange + posChange2 + upHeight*1.2f + forwardLength/1.25f + upHeight*1.5f + (rightWidth/2) + frontTopOfLedgeSurfaceDetectorsForward2, transform.position + midSidePosChange + posChange2 + upHeight + forwardLength/1.75f - upHeight/2 + (rightWidth/2) + frontTopOfLedgeSurfaceDetectorsForward2, out hit, collisionLayers)) {
					rSide = hit.point;
					right = true;
				}
		
				else if (Physics.Linecast(transform.position + midSidePosChange + posChange2 + upHeight + forwardLength/2 + (rightWidth/2) + firstFrontWallDetectorsForward2, transform.position + midSidePosChange + posChange2 + upHeight + forwardLength/2 - rightWidth + firstFrontWallDetectorsForward2 - firstFrontWallDetectorsWidth2, out hit, collisionLayers)){
					rSide = hit.point + rightWidth/3;
					right = true;
				}
				else if (Physics.Linecast(transform.position + midSidePosChange + posChange2 + upHeight + forwardLength + (rightWidth/2) + secondFrontWallDetectorsForward2, transform.position + midSidePosChange + posChange2 + upHeight + forwardLength - rightWidth + secondFrontWallDetectorsForward2 - secondFrontWallDetectorsWidth2, out hit, collisionLayers)){
					rSide = hit.point + rightWidth/3;
					right = true;
				}
				else{
					right = false;
				}
			}
			else{
				right = false;
			}
		
		
			//checking to see if you are too close to the ground to go right or left
			if (Input.GetAxisRaw("Horizontal") > 0f && !Physics.Linecast(transform.position + posChange1 + upHeight + (rightWidth/4) + minDistFromGroundWidth2, transform.position + posChange1 - upHeight/3 + (rightWidth/4) + minDistFromGroundHeight2 + minDistFromGroundWidth2, out hit, collisionLayers)){
				movingRight = true;
			}
			else if (Input.GetAxisRaw("Horizontal") < 0f && !Physics.Linecast(transform.position + posChange1 + upHeight - (rightWidth/4) - minDistFromGroundWidth2, transform.position + posChange1 - upHeight/3 - (rightWidth/4) + minDistFromGroundHeight2 - minDistFromGroundWidth2, out hit, collisionLayers)){
				movingRight = false;
			}
			
			// left side out of ground
			if (!Physics.Linecast(transform.position + posChange1 + upHeight - (rightWidth/4) - minDistFromGroundWidth2, transform.position + posChange1 - upHeight/3 - (rightWidth/4) + minDistFromGroundHeight2 - minDistFromGroundWidth2, out hit, collisionLayers) && !Physics.Linecast(transform.position + posChange1 + upHeight + (rightWidth/4) + minDistFromGroundWidth2, transform.position + posChange1 - upHeight/3 + (rightWidth/4) + minDistFromGroundHeight2 + minDistFromGroundWidth2, out hit, collisionLayers)){
				sL = false;
			}
			if (!Physics.Linecast(transform.position + posChange1 + upHeight + (rightWidth/4) + minDistFromGroundWidth2, transform.position + posChange1 - upHeight/3 + (rightWidth/4) + minDistFromGroundHeight2 + minDistFromGroundWidth2, out hit, collisionLayers) && !Physics.Linecast(transform.position + posChange1 + upHeight - (rightWidth/4) - minDistFromGroundWidth2, transform.position + posChange1 - upHeight/3 - (rightWidth/4) + minDistFromGroundHeight2 - minDistFromGroundWidth2, out hit, collisionLayers)){
				sR = false;
			}
			
			if (movingRight && !Physics.Linecast(transform.position + posChange1 + upHeight - (rightWidth/4)  - minDistFromGroundWidth2, transform.position + posChange1 - upHeight/4 - (rightWidth/4) + minDistFromGroundHeight2 - minDistFromGroundWidth2, out hit, collisionLayers) && Physics.Linecast(transform.position + posChange1 + upHeight + (rightWidth/4) + minDistFromGroundWidth2, transform.position + posChange1 - upHeight/3 + (rightWidth/4) + minDistFromGroundHeight2 + minDistFromGroundWidth2, out hit, collisionLayers)){
				sR = true;
			}
			else if (!movingRight && !Physics.Linecast(transform.position + posChange1 + upHeight + (rightWidth/4) + minDistFromGroundWidth2, transform.position + posChange1 - upHeight/4 + (rightWidth/4) + minDistFromGroundHeight2 + minDistFromGroundWidth2, out hit, collisionLayers) && Physics.Linecast(transform.position + posChange1 + upHeight - (rightWidth/4) - minDistFromGroundWidth2, transform.position + posChange1 - upHeight/3 - (rightWidth/4) + minDistFromGroundHeight2 - minDistFromGroundWidth2, out hit, collisionLayers)){
				sR = false;
			}
			
			if (!movingRight && !Physics.Linecast(transform.position + posChange1 + upHeight + (rightWidth/4) + minDistFromGroundWidth2, transform.position + posChange1 - upHeight/4 + (rightWidth/4) + minDistFromGroundHeight2 + minDistFromGroundWidth2, out hit, collisionLayers) && Physics.Linecast(transform.position + posChange1 + upHeight - (rightWidth/4) - minDistFromGroundWidth2, transform.position + posChange1 - upHeight/3 - (rightWidth/4) + minDistFromGroundHeight2 - minDistFromGroundWidth2, out hit, collisionLayers)){
				sL = true;
			}
			else if (movingRight && !Physics.Linecast(transform.position + posChange1 + upHeight - (rightWidth/4)  - minDistFromGroundWidth2, transform.position + posChange1 - upHeight/4 - (rightWidth/4) + minDistFromGroundHeight2 - minDistFromGroundWidth2, out hit, collisionLayers) && Physics.Linecast(transform.position + posChange1 + upHeight + (rightWidth/4) + minDistFromGroundWidth2, transform.position + posChange1 - upHeight/3 + (rightWidth/4) + minDistFromGroundHeight2 + minDistFromGroundWidth2, out hit, collisionLayers)){
				sL = false;
			}
			
			if (sR && !Physics.Linecast(transform.position + posChange1 + upHeight - (rightWidth/4)  - minDistFromGroundWidth2, transform.position + posChange1 - upHeight/4 - (rightWidth/4) + minDistFromGroundHeight2 - minDistFromGroundWidth2, out hit, collisionLayers) && Physics.Linecast(transform.position + posChange1 + upHeight + (rightWidth/4) + minDistFromGroundWidth2, transform.position + posChange1 - upHeight/3 + (rightWidth/4) + minDistFromGroundHeight2 + minDistFromGroundWidth2, out hit, collisionLayers)){
				left = true;
				right = false;
			}
			else if (sL && !Physics.Linecast(transform.position + posChange1 + upHeight + (rightWidth/4) + minDistFromGroundWidth2, transform.position + posChange1 - upHeight/4 + (rightWidth/4) + minDistFromGroundHeight2 + minDistFromGroundWidth2, out hit, collisionLayers) && Physics.Linecast(transform.position + posChange1 + upHeight - (rightWidth/4) - minDistFromGroundWidth2, transform.position + posChange1 - upHeight/3 - (rightWidth/4) + minDistFromGroundHeight2 - minDistFromGroundWidth2, out hit, collisionLayers)){
				left = false;
				right = true;
			}
			else if (!Physics.Linecast(transform.position + posChange1 + upHeight - (rightWidth/4) - minDistFromGroundWidth2, transform.position + posChange1 - upHeight/3 - (rightWidth/4) + minDistFromGroundHeight2 - minDistFromGroundWidth2, out hit, collisionLayers) && !Physics.Linecast(transform.position + posChange1 + upHeight + (rightWidth/4) + minDistFromGroundWidth2, transform.position + posChange1 - upHeight/3 + (rightWidth/4) + minDistFromGroundHeight2 + minDistFromGroundWidth2, out hit, collisionLayers)){
				left = true;
				right = true;
			}
			else if (!Physics.Linecast(transform.position + posChange1 + upHeight + (rightWidth/4) + minDistFromGroundWidth2, transform.position + posChange1 - upHeight/3 + (rightWidth/4) + minDistFromGroundHeight2 + minDistFromGroundWidth2, out hit, collisionLayers) && !Physics.Linecast(transform.position + posChange1 + upHeight - (rightWidth/4) - minDistFromGroundWidth2, transform.position + posChange1 - upHeight/3 - (rightWidth/4) + minDistFromGroundHeight2 - minDistFromGroundWidth2, out hit, collisionLayers)){
				left = true;
				right = true;
			}
			else {
				left = false;
				right = false;
			}
			
			
			//checking to see if sides are at a dead end
			if (!switching && !switchJumping || !ledgeSwitchingDetectors.allowLedgeSwitching){
				if (!leftMovable){
					if (!climbPossibleL || !climbPossible) {
						left = false;
					}
				}
				if (!rightMovable){
					if (!climbPossibleR || !climbPossible) {
						right = false;
					}
				}
			}
		
		
			//checking to see if ledge is on level with, or above player
			if (!Physics.Raycast(transform.position + posChange2 + upHeight + midSidePosChange * 0.5f, forwardLength/4 + rightWidth/2, out hit, 0.7f, collisionLayers) && Physics.Raycast(transform.position + midSidePosChange + posChange2 + upHeight*1.1f, forwardLength + rightWidth/2, out hit, 1f, collisionLayers)){
				upright = true;
			}
			else{
				upright = false;
			}
			if (!Physics.Raycast(transform.position + posChange2 + upHeight + midSidePosChange * 0.5f, forwardLength/4 - rightWidth/2, out hit, 0.7f, collisionLayers) && Physics.Raycast(transform.position + midSidePosChange + posChange2 + upHeight*1.1f, forwardLength - rightWidth/2, out hit, 1f, collisionLayers)){
				upleft = true;
			}
			else{
				upleft = false;
			}
			if (!Physics.Raycast(transform.position + posChange2 + (upHeight + midSidePosChange)*0.5f, forwardLength/4, out hit, 1f, collisionLayers) && !Physics.Raycast(transform.position + posChange2 + (upHeight + midSidePosChange)*0.5f, rightWidth/4, out hit, 1f, collisionLayers) && !Physics.Raycast(transform.position + posChange2 + (upHeight + midSidePosChange)*0.5f, -rightWidth/4, out hit, 1f, collisionLayers)
			&& !Physics.Raycast(transform.position + posChange2 + (upHeight + midSidePosChange)*0.5f, forwardLength/4 + rightWidth/4 - (upHeight + midSidePosChange), out hit, 1.5f, collisionLayers) && !Physics.Raycast(transform.position + posChange2 + (upHeight + midSidePosChange)*0.5f, forwardLength/4 - rightWidth/4 - (upHeight + midSidePosChange), out hit, 1.5f, collisionLayers) && Physics.Raycast(transform.position + posChange2 + (upHeight + midSidePosChange)*1.1f, forwardLength, out hit, 5f, collisionLayers)){
				upfront = true;
			}
			else{
				upfront = false;
			}
		
			RaycastHit hit2 = new RaycastHit();
			if (Input.GetAxisRaw("Horizontal") > 0f && Physics.Raycast(transform.position + posChange2 + (upHeight + midSidePosChange)*1.1f, rightWidth/2, out hit, 5f, collisionLayers) && Physics.Raycast(transform.position + posChange2 + (upHeight + midSidePosChange)*0.5f, forwardLength/4, out hit2, 5f, collisionLayers) && Vector3.Distance(transform.position + transform.up, hit.point) < Vector3.Distance(transform.position, hit2.point)){
				movingToSide = true;
			}
			else if (Input.GetAxisRaw("Horizontal") < 0f && Physics.Raycast(transform.position + posChange2 + (upHeight + midSidePosChange)*1.1f, -rightWidth/2, out hit, 5f, collisionLayers) && Physics.Raycast(transform.position + posChange2 + (upHeight + midSidePosChange)*0.5f, forwardLength/4, out hit2, 5f, collisionLayers) && Vector3.Distance(transform.position + transform.up, hit.point) < Vector3.Distance(transform.position, hit2.point)){
				movingToSide = true;
			}
			else{
				movingToSide = false;
			}
			
			//rotation
			if (!switching || !ledgeSwitchingDetectors.allowLedgeSwitching){
				
				//only change the rotation normal if player is moving
				if ((transform.rotation == lastRot3 || axisChanged) && (movementSpeed > 0 || Input.GetAxis("Horizontal") != 0) || hasNotMovedOnLedgeYet){
					
					if (!Physics.Raycast(transform.position + posChange2 + (upHeight + midSidePosChange)*1.1f, forwardLength, out hit, 1f, collisionLayers) && !Physics.Raycast(transform.position + midSidePosChange + posChange2 + upHeight*1.1f, forwardLength + rightWidth/2, out hit, 1f, collisionLayers)
					&& !Physics.Raycast(transform.position + midSidePosChange + posChange2 + upHeight*1.1f, forwardLength - rightWidth/2, out hit, 1f, collisionLayers) && Physics.Raycast(transform.position + posChange2 + midSidePosChange*0.5f, forwardLength/4, out hit, 1f, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						
						if (Physics.Raycast(transform.position + posChange2 + midSidePosChange, forwardLength/4, out hit, 1f, collisionLayers)){
							rotationNormal = Quaternion.LookRotation(-hit.normal);
						}
						else if (Physics.Raycast(transform.position + posChange2 + midSidePosChange*0.8f, forwardLength/4, out hit, 1f, collisionLayers)){
							rotationNormal = Quaternion.LookRotation(-hit.normal);
						}
						else {
							rotationNormal = Quaternion.LookRotation(-hit.normal);
						}
						rotationState = 1;
					}
					else if (!Physics.Raycast(transform.position + posChange2 + (upHeight + midSidePosChange)*0.5f, forwardLength/4 + rightWidth/2, out hit, 5f, collisionLayers) && !Physics.Raycast(transform.position + posChange2 + (upHeight + midSidePosChange)*0.5f, forwardLength/4 - rightWidth/2, out hit, 5f, collisionLayers) && Physics.Raycast(transform.position + posChange2 + (upHeight + midSidePosChange)*0.5f, forwardLength/4, out hit, 5f, collisionLayers) && Vector3.Distance(transform.position + posChange2, hit.point) <= 1 && !movingToSide && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						
						if (Physics.Raycast(transform.position + posChange2 + (upHeight + midSidePosChange), forwardLength/4, out hit, 5f, collisionLayers)){
							rotationNormal = Quaternion.LookRotation(-hit.normal);
						}
						else if (Physics.Raycast(transform.position + posChange2 + (upHeight + midSidePosChange)*0.8f, forwardLength/4, out hit, 5f, collisionLayers)){
							rotationNormal = Quaternion.LookRotation(-hit.normal);
						}
						else {
							rotationNormal = Quaternion.LookRotation(-hit.normal);
						}
						rotationState = 2;
					}
					
					else if (!rightBlocked && Physics.Raycast(transform.position + posChange2 + (upHeight + midSidePosChange)*0.5f, forwardLength/4 + rightWidth/2, out hit, 0.7f, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){

						if (Physics.Raycast(transform.position + posChange2 + (upHeight + midSidePosChange), forwardLength/4 + rightWidth/2, out hit, 0.7f, collisionLayers)){
							rotationNormal = Quaternion.LookRotation(-hit.normal);
						}
						else if (Physics.Raycast(transform.position + posChange2 + (upHeight + midSidePosChange)*0.8f, forwardLength/4 + rightWidth/2, out hit, 0.7f, collisionLayers)){
							rotationNormal = Quaternion.LookRotation(-hit.normal);
						}
						else {
							rotationNormal = Quaternion.LookRotation(-hit.normal);
						}
						rotationState = 3;
					}
					else if (!leftBlocked && Physics.Raycast(transform.position + posChange2 + (upHeight + midSidePosChange)*0.5f, forwardLength/4 - rightWidth/2, out hit, 0.7f, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){

						if (Physics.Raycast(transform.position + posChange2 + (upHeight + midSidePosChange), forwardLength/4 - rightWidth/2, out hit, 0.7f, collisionLayers)){
							rotationNormal = Quaternion.LookRotation(-hit.normal);
						}
						else if (Physics.Raycast(transform.position + posChange2 + (upHeight + midSidePosChange)*0.8f, forwardLength/4 - rightWidth/2, out hit, 0.7f, collisionLayers)){
							rotationNormal = Quaternion.LookRotation(-hit.normal);
						}
						else {
							rotationNormal = Quaternion.LookRotation(-hit.normal);
						}
						rotationState = 4;
					}
					else if (!Physics.Raycast(transform.position + posChange2 + (upHeight + midSidePosChange)*1.1f, forwardLength + rightWidth/2, out hit, 5f, collisionLayers) && !Physics.Raycast(transform.position + posChange2 + (upHeight + midSidePosChange)*1.1f, forwardLength - rightWidth/2, out hit, 2f, collisionLayers) && Physics.Linecast(transform.position + posChange1 + upHeight*1.2f, transform.position + posChange1 + upHeight*1.2f + forwardLength/3, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						
						rotationNormal = Quaternion.LookRotation(-hit.normal);
						rotationState = 5;
					}
					else if (!Physics.Raycast(transform.position + posChange2 + (upHeight + midSidePosChange)*1.1f, forwardLength + rightWidth/2, out hit, 5f, collisionLayers) && !Physics.Raycast(transform.position + posChange2 + (upHeight + midSidePosChange)*1.1f, forwardLength - rightWidth/2, out hit, 2f, collisionLayers) && Physics.Raycast(transform.position + posChange2 + (upHeight + midSidePosChange)*1.1f, forwardLength, out hit, 2f, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						
						rotationNormal = Quaternion.LookRotation(-hit.normal);
						rotationState = 6;
					}
					else if (!rightBlocked && !Physics.Linecast(transform.position + posChange1 + upHeight*1.2f + forwardLength/1.5f - rightWidth/5, transform.position + posChange1 + upHeight*1.2f + forwardLength/3 + rightWidth/5, out hit, collisionLayers) && !Physics.Raycast(transform.position + posChange2 + (upHeight + midSidePosChange)*1.1f, forwardLength - rightWidth/2, out hit, 0.5f, collisionLayers) && Physics.Linecast(transform.position + posChange1 + upHeight*1.2f + forwardLength/1.5f + rightWidth/5, transform.position + posChange1 + upHeight*1.2f + forwardLength/3 - rightWidth/5, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						
						rotationNormal = Quaternion.LookRotation(-hit.normal);
						rotationState = 7;
					}
					else if (!rightBlocked && !Physics.Raycast(transform.position + posChange2 + (upHeight + midSidePosChange)*1.1f, forwardLength - rightWidth/2, out hit, 0.5f, collisionLayers) && Physics.Raycast(transform.position + midSidePosChange + posChange2 + upHeight*1.1f, forwardLength + rightWidth/2, out hit, 1f, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						
						if (Physics.Raycast(transform.position + midSidePosChange + posChange2 + upHeight*1.1f, forwardLength, out hit, 1f, collisionLayers)){
							rotationNormal = Quaternion.LookRotation(-hit.normal);
						}
						else {
							rotationNormal = Quaternion.LookRotation(-hit.normal);
						}
						rotationState = 8;
					}
					else if (!rightBlocked && !Physics.Linecast(transform.position + posChange1 + upHeight*1.2f + forwardLength/1.5f - rightWidth/5, transform.position + posChange1 + upHeight*1.2f + forwardLength/3 + rightWidth/5, out hit, collisionLayers) && !Physics.Raycast(transform.position + posChange2 + (upHeight + midSidePosChange)*1.1f, forwardLength - rightWidth/2, out hit, 2f, collisionLayers) && Physics.Linecast(transform.position + posChange1 + upHeight*1.2f + forwardLength/1.5f + rightWidth/5, transform.position + posChange1 + upHeight*1.2f + forwardLength/3 - rightWidth/5, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						
						rotationNormal = Quaternion.LookRotation(-hit.normal);
						rotationState = 9;
					}
					else if (!rightBlocked && !Physics.Raycast(transform.position + posChange2 + (upHeight + midSidePosChange)*1.1f, forwardLength - rightWidth/2, out hit, 2f, collisionLayers) && Physics.Raycast(transform.position + midSidePosChange + posChange2 + upHeight*1.1f, forwardLength + rightWidth/2, out hit, 1f, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						
						rotationNormal = Quaternion.LookRotation(-hit.normal);
						rotationState = 10;
					}
					else if (!leftBlocked && !Physics.Linecast(transform.position + posChange1 + upHeight*1.2f + forwardLength/1.5f - rightWidth/5, transform.position + posChange1 + upHeight*1.2f + forwardLength/3 + rightWidth/5, out hit, collisionLayers) && Physics.Linecast(transform.position + posChange1 + upHeight*1.2f + forwardLength/1.5f - rightWidth/5, transform.position + posChange1 + upHeight*1.2f + forwardLength/3 + rightWidth/5, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						
						rotationNormal = Quaternion.LookRotation(-hit.normal);
						rotationState = 11;
					}
					else if (!leftBlocked && Physics.Raycast(transform.position + midSidePosChange + posChange2 + upHeight*1.1f, forwardLength - rightWidth/2, out hit, 1f, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						
						rotationNormal = Quaternion.LookRotation(-hit.normal);
						rotationState = 12;
					}
					else if (Physics.Raycast(transform.position + posChange2 + (upHeight + midSidePosChange)*1.1f, forwardLength, out hit, 1f, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						
						rotationNormal = Quaternion.LookRotation(-hit.normal);
						rotationState = 13;
					}
					else if (!rightBlocked && !Physics.Raycast(transform.position + posChange2 + (upHeight + midSidePosChange)*1.1f, forwardLength - rightWidth/2, out hit, 0.5f, collisionLayers) && Physics.Raycast(transform.position + posChange2 + (upHeight + midSidePosChange)*1.1f, forwardLength + rightWidth/2, out hit, 1f, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						
						rotationNormal = Quaternion.LookRotation(-hit.normal);
						rotationState = 14;
					}
					else if (!rightBlocked && !Physics.Raycast(transform.position + posChange2 + (upHeight + midSidePosChange)*1.1f, forwardLength - rightWidth/2, out hit, 2f, collisionLayers) && Physics.Raycast(transform.position + posChange2 + (upHeight + midSidePosChange)*1.1f, forwardLength + rightWidth/2, out hit, 1f, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						
						rotationNormal = Quaternion.LookRotation(-hit.normal);
						rotationState = 15;
					}
					else if (!leftBlocked && Physics.Raycast(transform.position + posChange2 + (upHeight + midSidePosChange)*1.1f, forwardLength - rightWidth/2, out hit, 1f, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						
						rotationNormal = Quaternion.LookRotation(-hit.normal);
						rotationState = 16;
					}
					else if (!upfront && !rightBlocked && Physics.Raycast(transform.position + posChange2 + (upHeight + midSidePosChange)*0.5f, forwardLength/4 + rightWidth/2 + (upHeight + midSidePosChange)*0.5f, out hit, 0.7f, collisionLayers) && !upright && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						
						rotationNormal = Quaternion.LookRotation(-hit.normal);
						rotationState = 17;
					}
					else if (!upfront && !leftBlocked && Physics.Raycast(transform.position + posChange2 + (upHeight + midSidePosChange)*0.5f, forwardLength/4 - rightWidth/2 + (upHeight + midSidePosChange)*0.5f, out hit, 0.7f, collisionLayers) && !upleft && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						
						rotationNormal = Quaternion.LookRotation(-hit.normal);
						rotationState = 18;
					}
					else if (Physics.Linecast(transform.position + posChange1 + upHeight*1.2f + forwardLength/3f + rightWidth/5, transform.position + posChange1 + upHeight*1.2f + forwardLength/3 - rightWidth/5, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						
						rotationNormal = Quaternion.LookRotation(-hit.normal);
						rotationState = 19;
					}
					else if (Physics.Linecast(transform.position + posChange1 + upHeight*1.2f + forwardLength/3f - rightWidth/5, transform.position + posChange1 + upHeight*1.2f + forwardLength/3 + rightWidth/5, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						
						rotationNormal = Quaternion.LookRotation(-hit.normal);
						rotationState = 20;
					}
					else if (Physics.Linecast(transform.position + posChange1 + upHeight*1.2f + forwardLength/1.5f + rightWidth/5, transform.position + posChange1 + upHeight*1.2f + forwardLength/1.5f - rightWidth/5, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						
						rotationNormal = Quaternion.LookRotation(-hit.normal);
						rotationState = 21;
					}
					else if (Physics.Linecast(transform.position + posChange1 + upHeight*1.2f + forwardLength/1.5f - rightWidth/5, transform.position + posChange1 + upHeight*1.2f + forwardLength/1.5f + rightWidth/5, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						
						rotationNormal = Quaternion.LookRotation(-hit.normal);
						rotationState = 22;
					}
					else if (!left && !right){
						rotationState = 23;
						if (scriptsToDisableOnGrab != null){
							foreach (string script in scriptsToDisableOnGrab)
							{
								scriptToDisable = GetComponent(script) as MonoBehaviour;
								if (scriptToDisable != null){
									scriptToDisable.enabled = true;
								}
								else if (!currentlyEnablingAndDisablingScripts || grabbedOn){
									scriptWarning = true;
								}
							}
						}
						if (scriptsToEnableOnGrab != null){
							foreach (string script in scriptsToEnableOnGrab)
							{
								scriptToEnable = GetComponent(script) as MonoBehaviour;
								if (scriptToEnable != null){
									scriptToEnable.enabled = false;
								}
								else if (!currentlyEnablingAndDisablingScripts || grabbedOn){
									scriptWarning = true;
								}
							}
						}
						currentlyEnablingAndDisablingScripts = true;
						if (GetComponent<Animator>()){
							GetComponent<Animator>().speed = 1;
						}
						getOn = false;
						getOn2 = false;
						pullingUp = false;
						grabbedOn = false;
					}
					else {
						rotationState = 0;
					}
					
					if (movementSpeed > 0 || Input.GetAxis("Horizontal") != 0){
						hasNotMovedOnLedgeYet = false;
						hasNotMovedOnLedgeAsideFromLedgeSwitchingYet = false;
					}
					
				}
				
				//checking to see if player changed their direction from left to right/right to left
				if ((Input.GetAxis("Horizontal") > 0 && horizontalAxis <= 0 || Input.GetAxis("Horizontal") < 0 && horizontalAxis >= 0)){
					axisChanged = true;
				}
				else if (transform.rotation == lastRot3 && climbPossible && climbPossibleL && climbPossibleR){
					axisChanged = false;
				}
				horizontalAxis = Input.GetAxis("Horizontal");
				lastRot3 = transform.rotation;
				
				//rotating the player
				if (rotationState != 23 && rotationState != 0){
					transform.rotation = Quaternion.Slerp(transform.rotation, rotationNormal, movingDetectors.rotationSpeed * Time.deltaTime);
				}
				
				//checking to see if player is leaning forward on a ledge
				wallInFrontAngle = Vector3.Angle(hit.normal, Vector3.up);
				if (wallInFrontAngle < 90){
					leaningForward = true;
				}
				else {
					leaningForward = false;
				}
				
			}
			//
			
			
			if (grabbedOn && (!switching || !ledgeSwitchingDetectors.allowLedgeSwitching)){
				//checking to see if left is hit/blocked
				if (!Physics.Linecast(transform.position + posChange1 + upHeight + (rightWidth/4) + minDistFromGroundWidth2, transform.position + posChange1 - upHeight/4 + (rightWidth/4) + minDistFromGroundHeight2 + minDistFromGroundWidth2, out hit, collisionLayers) && Physics.Linecast(transform.position + posChange1 + upHeight - (rightWidth/4)  - minDistFromGroundWidth2, transform.position + posChange1 - upHeight/4 - (rightWidth/4) + minDistFromGroundHeight2 - minDistFromGroundWidth2, out hit, collisionLayers) && !sL){
					transform.position += transform.right/10;
				}
				//checking to see if right is hit/blocked
				if (!Physics.Linecast(transform.position + posChange1 + upHeight - (rightWidth/4)  - minDistFromGroundWidth2, transform.position + posChange1 - upHeight/4 - (rightWidth/4) + minDistFromGroundHeight2 - minDistFromGroundWidth2, out hit, collisionLayers) && Physics.Linecast(transform.position + posChange1 + upHeight + (rightWidth/4) + minDistFromGroundWidth2, transform.position + posChange1 - upHeight/4 + (rightWidth/4) + minDistFromGroundHeight2 + minDistFromGroundWidth2, out hit, collisionLayers) && !sR){
					transform.position -= transform.right/10;
				}
			}
			
			
			//checking to see if the angle of the surface (to the left or right) is greater than the angle limit
			if (!Physics.Linecast(transform.position + posChange2 + forwardLength/2f + upHeight*1.5f - (rightWidth/2) + ledgeAngleDetectorsHeight2 - ledgeAngleDetectorsWidth2, transform.position + posChange2 + upHeight*1.5f + forwardLength - (rightWidth/2) + ledgeAngleDetectorsHeight2 - ledgeAngleDetectorsWidth2, out hit, collisionLayers) && Physics.Linecast(transform.position + posChange2 + forwardLength/2f + upHeight*1.5f - (rightWidth/2) + ledgeAngleDetectorsHeight2 - ledgeAngleDetectorsWidth2, transform.position + posChange2 + upHeight + forwardLength/2f - upHeight/2 - (rightWidth/2) - ledgeAngleDetectorsWidth2, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) > ledgeAngleLimit
			&&  Physics.Linecast(transform.position + posChange2 + forwardLength/2f + upHeight*1.5f - (rightWidth/1.85f) + ledgeAngleDetectorsHeight2 - ledgeAngleDetectorsWidth2, transform.position + posChange2 + upHeight + forwardLength/2f - upHeight/2 - (rightWidth/1.85f) - ledgeAngleDetectorsWidth2, out hit, collisionLayers)) {
				left = false;
				angledLeft = true;
			}
			else{
				angledLeft = false;
			}
			if (!Physics.Linecast(transform.position + posChange2 + forwardLength/2f + upHeight*1.5f + (rightWidth/2) + ledgeAngleDetectorsHeight2 + ledgeAngleDetectorsWidth2, transform.position + posChange2 + upHeight*1.5f + forwardLength + (rightWidth/2) + ledgeAngleDetectorsHeight2 + ledgeAngleDetectorsWidth2, out hit, collisionLayers) && Physics.Linecast(transform.position + posChange2 + forwardLength/2f + upHeight*1.5f + (rightWidth/2) + ledgeAngleDetectorsHeight2 + ledgeAngleDetectorsWidth2, transform.position + posChange2 + upHeight + forwardLength/2f - upHeight/2 + (rightWidth/2) + ledgeAngleDetectorsWidth2, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) > ledgeAngleLimit
			&&  Physics.Linecast(transform.position + posChange2 + forwardLength/2f + upHeight*1.5f + (rightWidth/1.85f) + ledgeAngleDetectorsHeight2 + ledgeAngleDetectorsWidth2, transform.position + posChange2 + upHeight + forwardLength/2f - upHeight/2 + (rightWidth/1.85f) + ledgeAngleDetectorsWidth2, out hit, collisionLayers)) {
				right = false;
				angledRight = true;
			}
			else{
				angledRight = false;
			}

		
		}
		
		//if stayUpright is true, only rotate to the left and right
		if (grabbedOn || pullingUp || turnBack || back2){
			if (stayUpright && !leaningForward){
				transform.eulerAngles = new Vector3(0f, transform.eulerAngles.y, 0f);
			}
		}
		
		//determining if an axis (horizontal or vertical) is being used to grab on to a ledge
		LedgeGrabbingAxisDetection();
		
		//letting go of a ledge
		DropOffLedge();
		
		//pushing off of wall after letting go of ledge
		PushOffLedge();
		
		//getting information for ledge switching
		switchHitPoint = new RaycastHit();
		GetLedgeSwitchInfo();
		
		//if player is grabbed on to a ledge
		if (grabbedOn){
			
			//enabling and disabling scripts
			EnableAndDisableScripts();
			
			if (getOn){
				transform.position = new Vector3(playerPosXZ.x, (playerPosY + onLedgeHeight2/10), playerPosXZ.z);
				getOn = false;
			}
			
			//moving to the left
			LeftMovement();
			
			//moving to the right
			RightMovement();
			
			//not moving to either side
			if (Input.GetAxis ("Horizontal") == 0){
				movementSpeed = 0;
			}
			
			//locking axis for side-scrolling
			if (movingDetectors.sideScrolling.lockMovementOnXAxis){
				movementSpeed = 0;
				movementVector.x = 0;
				transform.position = new Vector3(movingDetectors.sideScrolling.xValue, transform.position.y, transform.position.z);
			}
			if (movingDetectors.sideScrolling.lockMovementOnZAxis){
				movementSpeed = 0;
				movementVector.z = 0;
				transform.position = new Vector3(transform.position.x, transform.position.y, movingDetectors.sideScrolling.zValue);
			}
			//setting player controller's side-scrolling rotation to what ours is currently closest to
			if (transform.eulerAngles.y > 180){
				yRotationValue = transform.eulerAngles.y - 360;
			}
			else {
				yRotationValue = transform.eulerAngles.y;
			}
			if (GetComponent<PlayerController>()){
			
				//getting rotation on z-axis (x-axis is locked)
				if (GetComponent<PlayerController>().movement.sideScrolling.lockMovementOnXAxis && !GetComponent<PlayerController>().movement.sideScrolling.lockMovementOnZAxis){
					//if our rotation is closer to the right, set the bodyRotation to the right
					if (yRotationValue >= 90){
						GetComponent<PlayerController>().horizontalValue = -1;
						GetComponent<PlayerController>().bodyRotation = 180;
					}
					//if our rotation is closer to the left, set the bodyRotation to the left
					else {
						GetComponent<PlayerController>().horizontalValue = 1;
						GetComponent<PlayerController>().bodyRotation = 0;
					}
				}
				//getting rotation on x-axis (z-axis is locked)
				else if (GetComponent<PlayerController>().movement.sideScrolling.lockMovementOnZAxis && !GetComponent<PlayerController>().movement.sideScrolling.lockMovementOnXAxis){
					//if our rotation is closer to the right, set the bodyRotation to the right
					if (yRotationValue >= 0){
						GetComponent<PlayerController>().horizontalValue = 1;
						GetComponent<PlayerController>().bodyRotation = 90;
					}
					//if our rotation is closer to the left, set the bodyRotation to the left
					else {
						GetComponent<PlayerController>().horizontalValue = -1;
						GetComponent<PlayerController>().bodyRotation = -90;
					}
				}
				
			}
			
		}
		
		//pulling up over a ledge
		ClimbingOverLedge();
		
		//when scripts are being enabled or disabled, warn the user if any script names they entered do not exist on the player
		ScriptWarning();
		
		//making sure player is not stuck on a collider
		CheckIfStuck();
		
		//animations
		if (GetComponent<Animator>()){
			animator = GetComponent<Animator>();
			
			//animating grabbing back on to a ledge after walking off
			if (turnBack && !turnedBackToLedge && walkingOffLedgeDetectors.allowGrabbingBackOnToLedges && nonJumpTurnAround){
				
				//if the angle between the player and wall we are grabbing back on to is less than 90, turn to the left
				if (angleBetweenPlayerAndTurnBackWall < 90){
					animator.SetFloat ("ledgeState", 1);
				}
				//if the angle between the player and wall we are grabbing back on to is greater than or equal to 90, turn to the right
				else {
					animator.SetFloat ("ledgeState", 2);
				}
				animator.CrossFade("LedgeMovement", 0f, -1, 0f);
				turnedBackToLedge = true;
				
			}
			else if (!turnBack && !back2 && turnedBackToLedge && Input.GetAxis("Horizontal") != 0){
				turnedBackToLedge = false;
			}
			
			if (switching){
				animator.speed = (ledgeSwitchingDetectors.switchJumpSpeed / switchPointDist*3)/4;
			}
			if (grabbedOn && !turnedBackToLedge){
				
				if (!animator.GetBool("onLedge") && (!movingDetectors.sideScrolling.lockMovementOnXAxis && !movingDetectors.sideScrolling.lockMovementOnZAxis)){
					animator.SetBool("onLedge", true);
				}
				
				if (!switchJumping){
					animator.SetFloat ("ledgeAngle", ledgeAngle);
					if (Input.GetAxis("Horizontal") > 0 && movingDetectors.moveSpeed > 0 && (!movingDetectors.sideScrolling.lockMovementOnXAxis && !movingDetectors.sideScrolling.lockMovementOnZAxis)){
					
						animator.speed = ((movingDetectors.moveSpeed/3)/movingDetectors.burstLength)/((movingDetectors.moveSpeed*2)/(3 + movingDetectors.moveSpeed));
						
						//animating moving to the right while grabbed on to a ledge
						if (!switching){
							if (right && !stuckToRight){
								if (animator.GetFloat ("ledgeSpeed") != 1 || movementSpeed < 0.1f){
									animator.CrossFade("LedgeMovement", 0f, -1, 0f);
									animator.SetFloat ("ledgeSpeed", 1);
								}
							}
							else {
								//stopping player's movement and keeping him from moving to the right
								animator.speed = 1;
								if (animator.GetFloat ("ledgeSpeed") == 1){
									movementSpeed = 0;
								}
								animator.SetFloat ("ledgeSpeed", Mathf.Lerp(animator.GetFloat("ledgeSpeed"), 0, ((((movingDetectors.moveSpeed/3)/movingDetectors.burstLength)/((movingDetectors.moveSpeed*2)/(3 + movingDetectors.moveSpeed)))*12) * Time.deltaTime));
							}
						}
						//animating switching to a ledge on the right side of the player
						else if (animator.GetFloat ("ledgeSpeed") != 2 && !switchJumping){
							animator.speed = (ledgeSwitchingDetectors.switchJumpSpeed / switchPointDist*3)/4;
							animator.CrossFade("LedgeMovement", 0f, -1, 0f);
							animator.SetFloat ("ledgeSpeed", 2);
						}
					}
					else if (Input.GetAxis("Horizontal") < 0 && movingDetectors.moveSpeed > 0 && (!movingDetectors.sideScrolling.lockMovementOnXAxis && !movingDetectors.sideScrolling.lockMovementOnZAxis)){
					
						animator.speed = ((movingDetectors.moveSpeed/3)/movingDetectors.burstLength)/((movingDetectors.moveSpeed*2)/(3 + movingDetectors.moveSpeed));
						
						//animating moving to the left while grabbed on to a ledge
						if (!switching){
							if (left && !stuckToLeft){
								if (animator.GetFloat ("ledgeSpeed") != -1 || movementSpeed < 0.1f){
									animator.CrossFade("LedgeMovement", 0f, -1, 0f);
									animator.SetFloat ("ledgeSpeed", -1);
								}
							}
							else {
								//stopping player's movement and keeping him from moving to the left
								animator.speed = 1;
								if (animator.GetFloat ("ledgeSpeed") == -1){
									movementSpeed = 0;
								}
								animator.SetFloat ("ledgeSpeed", Mathf.Lerp(animator.GetFloat("ledgeSpeed"), 0, ((((movingDetectors.moveSpeed/3)/movingDetectors.burstLength)/((movingDetectors.moveSpeed*2)/(3 + movingDetectors.moveSpeed)))*12) * Time.deltaTime));
							}
						}
						//animating switching to a ledge on the left side of the player
						else if (animator.GetFloat ("ledgeSpeed") != -2 && !switchJumping){
							animator.speed = (ledgeSwitchingDetectors.switchJumpSpeed / switchPointDist*3)/4;
							animator.CrossFade("LedgeMovement", 0f, -1, 0f);
							animator.SetFloat ("ledgeSpeed", -2);
						}
					}
					else {
						animator.speed = 1;
						if (!switching){
							animator.SetFloat ("ledgeSpeed", 0);
						}
					}
				}
				
				if (grabbedOn && !pullingUp && !turnBack && !animator.GetCurrentAnimatorStateInfo(0).IsName("LedgeMovement")){
					animator.SetFloat ("ledgeSpeed", 0);
					animator.CrossFade("LedgeMovement", 0f, -1, 0f);
				}
				
			}
			else {
				animator.SetBool("onLedge", false);
			}
			
			if (!turnBack && !grabbedOn && !pullingUp){
				
				turnedBackToLedge = false;
			}
			
			//animating climbing over a ledge
			if (pullingUp){
				if (animator.GetFloat("ledgeState") != 3 || !animator.GetCurrentAnimatorStateInfo(0).IsName("LedgeMovement")){
					if (!animatePullingUp){
						if (grabbedOnLastUpdate){
							animator.speed = Mathf.Abs((climbingDetectors.pullUpSpeed/4) * (onLedgeHeight2/19 + 1));
						}
						else {
							animator.speed = climbingDetectors.pullUpSpeed/4;
						}
						animator.SetFloat ("ledgeState", 3);
						animator.CrossFade("LedgeMovement", 0f, -1, 0f);
						animatePullingUp = true;
					}
				}
			}
			else if (animatePullingUp){
				animator.speed = 1;
				animatePullingUp = false;
			}
			
			//if we are pulling up when we should not be
			if (grabbedOn && !pullingUp && animator.GetFloat("ledgeState") == 3){
				animator.SetFloat ("ledgeState", 0);
				animator.SetFloat ("ledgeSpeed", 0);
				animator.CrossFade("LedgeMovement", 0f, -1, 0f);
			}
			
			//animating jumping off of a ledge after walking off
			if (!animator.GetCurrentAnimatorStateInfo(0).IsName("LedgeJump") && inAirFromJumpingOffLedge && animateLedgeJump){
				animator.CrossFade("LedgeJump", 0f, -1, 0f);
				animateLedgeJump = false;
			}
			if (!inAirFromJumpingOffLedge || currentStatesOfVariables.grounded){
				animateLedgeJump = true;
			}
			
			if (!pullingUp && !turnBack && !back2){
				
				if (animator.GetBool("onLedge")){
					animator.SetFloat ("ledgeState", 0);
				}
				if (animator.GetCurrentAnimatorStateInfo(0).IsName("LedgeMovement") && animator.GetFloat("ledgeState") != 3 && !grabbedOn){
					animator.SetBool("onLedge", false);
					animator.CrossFade(entryAnimation, 0f, -1, 0f);
				}
				
			}
			
		}
		if (grabbedOn){
			grabbedOnLastUpdate = true;
		}
		else if (!pullingUp){
			grabbedOnLastUpdate = false;
		}
		
		
		//ledge switching
		SwitchingLedges();
		
	}
	
	void Update () {


        if (Input.GetKeyDown(KeyCode.C))
        {
            varGameObject.GetComponent<LedgeClimbController>().enabled = true;
        }
        //getting the player's CharacterController component (if he has one)
        if (GetComponent<CharacterController>() && GetComponent<CharacterController>().enabled){
			characterController = GetComponent<CharacterController>();
			rigidBody = null;
		}
		//getting the player's Rigidbody component (if he has one)
		else if (GetComponent<Rigidbody>()){
			rigidBody = GetComponent<Rigidbody>();
			characterController = null;
		}
		
		//if we are not climbing on a moving platform, but are still attached to it, detach from it
		DetachingFromMovingPlatform();
		
	}
	
	void LedgeGrabbingAxisDetection () {
		
		if (Input.GetAxisRaw("Horizontal") != 0 || Input.GetAxisRaw("Vertical") != 0){

			//grab on to ledge
			if (!currentStatesOfVariables.grounded && canGrabBackOn && !turnBack && !back2 && (!GetComponent<PlayerController>() || !GetComponent<PlayerController>().climbableWallInFront)
			&& !Physics.Linecast(transform.position + posChange1 + upHeight, new Vector3(transform.position.x, (playerPosY + onLedgeHeight2/10), transform.position.z) + posChange1 - upHeight/3f + minDistFromGroundHeight2, out hit, collisionLayers | 1 << 4) && !Physics.Linecast(transform.position + posChange1 + upHeight - (rightWidth/4) - minDistFromGroundWidth2, new Vector3(transform.position.x, (playerPosY + onLedgeHeight2/10), transform.position.z) + posChange1 - upHeight/3f + minDistFromGroundHeight2 - (rightWidth/4) - minDistFromGroundWidth2, out hit, collisionLayers | 1 << 4) && !Physics.Linecast(transform.position + posChange1 + upHeight + (rightWidth/4) + minDistFromGroundWidth2, new Vector3(transform.position.x, (playerPosY + onLedgeHeight2/10), transform.position.z) + posChange1 - upHeight/3f + minDistFromGroundHeight2 + (rightWidth/4) + minDistFromGroundWidth2, out hit, collisionLayers | 1 << 4)){
				if (characterController && characterController.enabled && characterController.velocity.y <= 0f || rigidBody && !rbPosYIncreasing){
					if (climbable || climbPossible){
						if (!getOn){
							playerPosXZ = transform.position + posChange2;
							getOn = true;
						}
					}
					else if (rigidBody && grabbedOn && (!switching || !ledgeSwitchingDetectors.allowLedgeSwitching)){
						if (Physics.Linecast(transform.position + midSidePosChange + posChange2 + upHeight*1.2f + forwardLength/1.25f + upHeight*1.5f + (rightWidth/2) + frontTopOfLedgeSurfaceDetectorsForward2, transform.position + midSidePosChange + posChange2 + upHeight + forwardLength/1.75f - upHeight/2 + (rightWidth/2) + frontTopOfLedgeSurfaceDetectorsForward2, out hit, collisionLayers)
						||  Physics.Linecast(transform.position + midSidePosChange + posChange2 + upHeight*1.2f + forwardLength/1.25f + upHeight*1.5f - (rightWidth/2) + frontTopOfLedgeSurfaceDetectorsForward2, transform.position + midSidePosChange + posChange2 + upHeight + forwardLength/1.75f - upHeight/2 - (rightWidth/2) + frontTopOfLedgeSurfaceDetectorsForward2, out hit, collisionLayers)){
							if (!getOn){
								playerPosXZ = transform.position + posChange2;
								getOn = true;
							}
						}
					}
				}
			}
	
			if (currentStatesOfVariables.grounded && walkingOffLedgeDetectors.allowJumpingOffLedges && directionVector.magnitude >= walkingOffLedgeDetectors.inputPercentageNeededToJump/100 && ledgeJumpPossible
			&& !Physics.Linecast(transform.position + posChange1 + forwardLength/3.8f + upHeight*0.5f + spaceBelowNeededToGrabBackOnForward2, transform.position + posChange1 + forwardLength/3.8f - upHeight*0.5f - spaceBelowNeededToJump2 + spaceBelowNeededToGrabBackOnForward2, out hit, collisionLayers) && !Physics.Linecast(transform.position + posChange1 + forwardLength/1.48f + upHeight*0.5f + spaceInFrontNeededToGrabBackOn2, transform.position + posChange1 + forwardLength/1.48f - upHeight*0.5f + spaceInFrontNeededToGrabBackOn2 - spaceBelowNeededToJump2, out hit, collisionLayers)){
				canJumpOffLedge = true;
			}
			else {
				canJumpOffLedge = false;
			}
			
			if (!axisInUse || climbingDetectors.automaticallyClimbOverGroundLedgeIfColliding && !grabbedOn && currentStatesOfVariables.grounded && climbingDetectors.allowClimbingOverLedgesIfOnGround){
				//pull up, over, and then on top of the ledge
				if (climbable && climbableL && climbableR && !turnBack && !back2 && !Physics.Linecast(transform.position + posChange2 + upHeight, transform.position + posChange2 + upHeight*2.5f + spaceAboveHeadNeededToClimbUp2, out hit, collisionLayers | 1 << 4)){
					if (!grabbedOn && climbingDetectors.allowClimbingOverLedgesIfOnGround || grabbedOn && Input.GetAxisRaw("Vertical") >= 0.5f && climbingDetectors.allowClimbingOverLedgesIfInAir){
						getOn2 = true;
					}
				}

				axisInUse = true;
			 
			}
		}
		else {
			axisInUse = false;
		}
		
		//making sure that the player is not moving to the left/right before we pull up
		if (Mathf.Abs(Input.GetAxis("Horizontal")) < 0.25f && (climbingDetectors.climbOverLedgesWithoutLettingGoOfJoystickFirst || directionVector.magnitude < Mathf.Abs(axisBeforeGrab) - 0.2f || Mathf.Abs(axisBeforeGrab) <= 0.2f && Input.GetAxis("Vertical") < 0.5f)){
			axisInUse = false;
		}
		else {
			axisInUse = true;
		}
		
	}
	
	void DropOffLedge () {
		
		//checking to see if we are in mid-air
		if (grabbedOn && rotationState == 0 && !Physics.Raycast(transform.position + posChange2 + midSidePosChange * 0.5f, forwardLength/4, out hit, 1f, collisionLayers) && !Physics.Raycast(transform.position + posChange2 + (upHeight + midSidePosChange) * 0.5f, forwardLength/4, out hit, 1f, collisionLayers) && !Physics.Raycast(transform.position + posChange2 + (upHeight + midSidePosChange)*1.1f, forwardLength, out hit, 1f, collisionLayers)
		&& !Physics.Raycast(transform.position + midSidePosChange + posChange2 + upHeight*1.1f, forwardLength + rightWidth/2, out hit, 1f, collisionLayers) && !Physics.Raycast(transform.position + midSidePosChange + posChange2 + upHeight*1.1f, forwardLength - rightWidth/2, out hit, 1f, collisionLayers)
		&& !Physics.Raycast(transform.position + posChange2 + (upHeight + midSidePosChange) * 0.5f, forwardLength/4 + rightWidth/2, out hit, 1f, collisionLayers) && !Physics.Raycast(transform.position + posChange2 + (upHeight + midSidePosChange) * 0.5f, forwardLength/4 - rightWidth/2, out hit, 1f, collisionLayers)
		&& !Physics.Raycast(transform.position + midSidePosChange + posChange2 + upHeight*1.1f, forwardLength + rightWidth/2, out hit, 1f, collisionLayers) && !Physics.Raycast(transform.position + midSidePosChange + posChange2 + upHeight*1.1f, forwardLength - rightWidth/2, out hit, 1f, collisionLayers) && !Physics.Raycast(transform.position + posChange2 + (upHeight + midSidePosChange)*1.1f, forwardLength, out hit, 1f, collisionLayers)
		&& !Physics.Raycast(transform.position + posChange2 + (upHeight + midSidePosChange)*1.1f, forwardLength + rightWidth/2, out hit, 1f, collisionLayers) && !Physics.Raycast(transform.position + posChange2 + (upHeight + midSidePosChange)*1.1f, forwardLength - rightWidth/2, out hit, 1f, collisionLayers)
		&& !Physics.Raycast(transform.position + posChange2 + (upHeight + midSidePosChange) * 0.5f, forwardLength/4 + rightWidth/2 + (upHeight + midSidePosChange) * 0.5f, out hit, 0.7f, collisionLayers) && !Physics.Raycast(transform.position + posChange2 + (upHeight + midSidePosChange) * 0.5f, forwardLength/4 - rightWidth/2 + (upHeight + midSidePosChange) * 0.5f, out hit, 0.7f, collisionLayers)){
			inMidAir = true;
		}
		else{
			inMidAir = false;
		}
		
		//drop off ledge
		if (!climbPossible && !climbable && !left && !right && grabbedOn && (!switching && !switchJumping || !ledgeSwitchingDetectors.allowLedgeSwitching) && Quaternion.Angle(lastRot, transform.rotation) <= 0.1f || Input.GetButtonDown("Jump") && grabbedOn || Input.GetButtonDown("Jump") && pullingUp
		|| (inMidAir || grabbedOn && !turnBack && !back2 && Physics.Linecast(transform.position + posChange1 + upHeight, new Vector3(transform.position.x, (playerPosY + onLedgeHeight2/10), transform.position.z) + posChange1 - upHeight/4.01f + minDistFromGroundHeight2, out hit, collisionLayers)) && (!switching || !ledgeSwitchingDetectors.allowLedgeSwitching)){
			if (scriptsToDisableOnGrab != null){
				foreach (string script in scriptsToDisableOnGrab)
				{
					scriptToDisable = GetComponent(script) as MonoBehaviour;
					if (scriptToDisable != null){
						scriptToDisable.enabled = true;
					}
					else if (!currentlyEnablingAndDisablingScripts || grabbedOn || pullingUp){
						scriptWarning = true;
					}
				}
			}
			if (scriptsToEnableOnGrab != null){
				foreach (string script in scriptsToEnableOnGrab)
				{
					scriptToEnable = GetComponent(script) as MonoBehaviour;
					if (scriptToEnable != null){
						scriptToEnable.enabled = false;
					}
					else if (!currentlyEnablingAndDisablingScripts || grabbedOn || pullingUp){
						scriptWarning = true;
					}
				}
			}
			currentlyEnablingAndDisablingScripts = true;
			
			//getting direction to push off of wall after letting go
			if (!inMidAir){
				jumpedOffTimer = 0;
				jumpedOffDirection = -transform.forward*distanceToPushOffOfLedgeAfterLettingGo;
			}
			if (GetComponent<Animator>()){
				GetComponent<Animator>().speed = 1;
			}
			getOn = false;
			getOn2 = false;
			pullingUp = false;
			grabbedOn = false;
			turnBack = false;
		}
		
	}
	
	void PushOffLedge () {
		
		//pushing off of wall after letting go
		jumpedOffTimer += 0.02f;
		if (jumpedOffTimer < 0.3f){
			jumpedOffDirection = Vector3.Slerp(jumpedOffDirection, Vector3.zero, 8 * Time.deltaTime);
			if (characterController && characterController.enabled){
				characterController.Move(jumpedOffDirection * Time.deltaTime);
			}
			else if (rigidBody){
				rigidBody.MovePosition(transform.position + jumpedOffDirection * Time.deltaTime);
			}
		}
		
	}
	
	void GetLedgeSwitchInfo () {
		
		//getting information for ledge switching
		if (lastRot == transform.rotation){
			rotTimer += 0.01f;
		}
		else {
			rotTimer = 0;
		}
		//getting rotation
		lastRot = transform.rotation;
		
		ActivateLedgeSwitchClearDetectors();
		ActivateLedgeSwitchHitPointDetectors();	
		
	}
	
	void ActivateLedgeSwitchClearDetectors () {
		
		//detecting if a ledge on the left side of the player is clear to switch to
		LedgeSwitchingClearSecondFrontLeft();
		LedgeSwitchingClearFirstFrontLeft();
		LedgeSwitchingClearMiddleLeft();
		LedgeSwitchingClearFirstBackLeft();
		LedgeSwitchingClearSecondBackLeft();
		
		//detecting if a ledge on the right side of the player is clear to switch to
		LedgeSwitchingClearSecondFrontRight();
		LedgeSwitchingClearFirstFrontRight();
		LedgeSwitchingClearMiddleRight();
		LedgeSwitchingClearFirstBackRight();
		LedgeSwitchingClearSecondBackRight();
		
	}
	
	void ActivateLedgeSwitchHitPointDetectors () {
		
		//getting the exact point or location of ledge to the left of the player to switch to
		LedgeSwitchHitPointsSecondFrontLeft();
		LedgeSwitchHitPointsFirstFrontLeft();
		LedgeSwitchHitPointsMiddleLeft();
		LedgeSwitchHitPointsFirstBackLeft();
		LedgeSwitchHitPointsSecondBackLeft();
		LedgeSwitchHitPointsThirdBackLeft();
		
		//getting the exact point or location of ledge to the right of the player to switch to
		LedgeSwitchHitPointsSecondFrontRight();
		LedgeSwitchHitPointsFirstFrontRight();
		LedgeSwitchHitPointsMiddleRight();
		LedgeSwitchHitPointsFirstBackRight();
		LedgeSwitchHitPointsSecondBackRight();
		LedgeSwitchHitPointsThirdBackRight();
		
	}
	
	void EnableAndDisableScripts () {
		
		if (scriptsToDisableOnGrab != null){
			foreach (string script in scriptsToDisableOnGrab)
			{
				scriptToDisable = GetComponent(script) as MonoBehaviour;
				if (scriptToDisable != null){
					scriptToDisable.enabled = false;
				}
				else if (!currentlyEnablingAndDisablingScripts){
					scriptWarning = true;
				}
			}
		}
		if (scriptsToEnableOnGrab != null){
			foreach (string script in scriptsToEnableOnGrab)
			{
				scriptToEnable = GetComponent(script) as MonoBehaviour;
				if (scriptToEnable != null){
					scriptToEnable.enabled = true;
				}
				else if (!currentlyEnablingAndDisablingScripts){
					scriptWarning = true;
				}
			}
		}
		currentlyEnablingAndDisablingScripts = true;
		
	}
	
	void ScriptWarning () {
		
		//all loops that enable or disable scripts have finished, so we set currentlyEnablingAndDisablingScripts to false
		if (!pullingUp && !turnBack && !back2 && !grabbedOn && !inAirFromJumpingOffLedge && jumpDir == Vector3.zero){
			currentlyEnablingAndDisablingScripts = false;
		}
		//warns the user if any script names they entered do not exist on the player
		if (scriptWarning){
			if (scriptsToDisableOnGrab != null){
				foreach (string script in scriptsToDisableOnGrab)
				{
					scriptToDisable = GetComponent(script) as MonoBehaviour;
					if (scriptToDisable == null){
						Debug.Log("<color=red>The script to disable on grab named: </color>\"" + script + "\"<color=red> was not found on the player</color>");
					}
				}
			}
			if (scriptsToEnableOnGrab != null){
				foreach (string script in scriptsToEnableOnGrab)
				{
					scriptToEnable = GetComponent(script) as MonoBehaviour;
					if (scriptToEnable == null){
						Debug.Log("<color=red>The script to enable on grab named: </color>\"" + script + "\"<color=red> was not found on the player</color>");
					}
				}
			}
			scriptWarning = false;
		}
		
	}
	
	void LeftMovement () {
		
		//moving left
		if (left){
			if (Input.GetAxis ("Horizontal") < 0 && lSide != Vector3.zero && !stuckToLeft){
				
				if (!leftBlocked){
					
					//getting the distance between the player and the point on the ledge that the player will switch to
					LeftSwitchPointDetecting();
					
				}
				
				if (!switching || !ledgeSwitchingDetectors.allowLedgeSwitching){
					if (movingDetectors.moveInBursts){
						if (startingLeft){
							movementSpeed = Mathf.Lerp(movementSpeed, movingDetectors.moveSpeed, ((2 + movingDetectors.moveSpeed)*(movementSpeed/2 + 1))/movingDetectors.burstLength * Time.deltaTime);
						}
						else {
							movementSpeed = Mathf.Lerp(movementSpeed, 0, ((2 + movingDetectors.moveSpeed)*(movementSpeed/2 + 1))/movingDetectors.burstLength * Time.deltaTime);
						}
						if (movingDetectors.moveSpeed - movementSpeed < 0.1f){
							startingLeft = false;
						}
						else if (movementSpeed - 0 < 0.1f){
							startingLeft = true;
						}
					}
					else {
						movementSpeed = movingDetectors.moveSpeed;
					}
					
					movementVector = (new Vector3(lSide.x - transform.forward.x*colliderLengthFromCenter, (playerPosY + onLedgeHeight2/10), lSide.z - transform.forward.z*colliderLengthFromCenter) - transform.position + posChange2).normalized * (movementSpeed*directionVector.magnitude);
					if (characterController && characterController.enabled){
						characterController.Move(movementVector * Time.deltaTime);
					}
					else if (rigidBody){
						rigidBody.MovePosition(transform.position + movementVector * Time.deltaTime);
					}
					transform.position = new Vector3(transform.position.x, (playerPosY + onLedgeHeight2/10), transform.position.z);
				}
			}
			else if (rigidBody && (Input.GetAxis ("Horizontal") == 0 || stuckToLeft)){
				rigidBody.velocity = Vector3.zero;
				movementVector = Vector3.zero;
			}
				
			if (Input.GetAxis ("Horizontal") >= 0){
				startingLeft = true;
			}
		}
		
	}
	void LeftSwitchPointDetecting () {
		
		if ((!switching || !ledgeSwitchingDetectors.allowLedgeSwitching) && grabbedOn && !turnBack && !back2 && Input.GetAxis ("Horizontal") <= -ledgeSwitchingDetectors.inputPercentageNeededToSwitch/100 && directionVector.magnitude >= ledgeSwitchingDetectors.inputPercentageNeededToSwitch/100){
			
			//1
			//second forward
			if (l1SecondForwardHit && l1SecondForwardClear
			&& !l1FirstForwardHit && !l1MiddleHit && !l1FirstBackHit && !l1SecondBackHit && !l1ThirdBackHit
			&& !l1FirstForwardSurfaceDetectorsHit && !l1MiddleSurfaceDetectorsHit && !l1FirstBackSurfaceDetectorsHit && !l1SecondBackSurfaceDetectorsHit && !l1ThirdBackSurfaceDetectorsHit){
		
				ledgeSwitchPoint = new Vector3(0, onLedgeHeight2/10, 0) + l1SecondForwardHitPoint;
				currentLedgeSwitchPoint = ledgeSwitchPoint;
				switchPointDist = Vector3.Distance(transform.position, ledgeSwitchPoint);
				midSwitchPoint = (transform.position + ledgeSwitchPoint)/2 + upHeight*(ledgeSwitchingDetectors.switchJumpHeight/5)*((ledgeSwitchingDetectors.switchJumpSpeed / switchPointDist*3)/6);
				switching = true;
		
			}
			//first forward
			else if (l1FirstForwardHit && l1FirstForwardSurfaceDetectorsHit && l1FirstForwardClear
			&& !l1MiddleHit && !l1FirstBackHit && !l1SecondBackHit && !l1ThirdBackHit
			&& !l1MiddleSurfaceDetectorsHit && !l1FirstBackSurfaceDetectorsHit && !l1SecondBackSurfaceDetectorsHit && !l1ThirdBackSurfaceDetectorsHit){
		
				ledgeSwitchPoint = new Vector3(0, onLedgeHeight2/10, 0) + l1FirstForwardHitPoint;
				currentLedgeSwitchPoint = ledgeSwitchPoint;
				switchPointDist = Vector3.Distance(transform.position, ledgeSwitchPoint);
				midSwitchPoint = (transform.position + ledgeSwitchPoint)/2 + upHeight*(ledgeSwitchingDetectors.switchJumpHeight/5)*((ledgeSwitchingDetectors.switchJumpSpeed / switchPointDist*3)/6);
				switching = true;
		
			}
			//middle
			else if (l1MiddleHit && l1MiddleSurfaceDetectorsHit && l1MiddleClear
			&& !l1FirstBackHit && !l1SecondBackHit && !l1ThirdBackHit
			&& !l1FirstBackSurfaceDetectorsHit && !l1SecondBackSurfaceDetectorsHit && !l1ThirdBackSurfaceDetectorsHit){
		
				ledgeSwitchPoint = new Vector3(0, onLedgeHeight2/10, 0) + l1MiddleHitPoint;
				currentLedgeSwitchPoint = ledgeSwitchPoint;
				switchPointDist = Vector3.Distance(transform.position, ledgeSwitchPoint);
				midSwitchPoint = (transform.position + ledgeSwitchPoint)/2 + upHeight*(ledgeSwitchingDetectors.switchJumpHeight/5)*((ledgeSwitchingDetectors.switchJumpSpeed / switchPointDist*3)/6);
				switching = true;
		
			}
			//first back
			else if (l1FirstBackHit && l1FirstBackSurfaceDetectorsHit && l1FirstBackClear
			&& !l1SecondBackHit && !l1ThirdBackHit
			&& !l1SecondBackSurfaceDetectorsHit && !l1ThirdBackSurfaceDetectorsHit){
		
				ledgeSwitchPoint = new Vector3(0, onLedgeHeight2/10, 0) + l1FirstBackHitPoint;
				currentLedgeSwitchPoint = ledgeSwitchPoint;
				switchPointDist = Vector3.Distance(transform.position, ledgeSwitchPoint);
				midSwitchPoint = (transform.position + ledgeSwitchPoint)/2 + upHeight*(ledgeSwitchingDetectors.switchJumpHeight/5)*((ledgeSwitchingDetectors.switchJumpSpeed / switchPointDist*3)/6);
				switching = true;
		
			}
			//second back
			else if (l1SecondBackHit && l1SecondBackSurfaceDetectorsHit && l1SecondBackClear
			&& !l1ThirdBackHit
			&& !l1ThirdBackSurfaceDetectorsHit){
		
				ledgeSwitchPoint = new Vector3(0, onLedgeHeight2/10, 0) + l1SecondBackHitPoint;
				currentLedgeSwitchPoint = ledgeSwitchPoint;
				switchPointDist = Vector3.Distance(transform.position, ledgeSwitchPoint);
				midSwitchPoint = (transform.position + ledgeSwitchPoint)/2 + upHeight*(ledgeSwitchingDetectors.switchJumpHeight/5)*((ledgeSwitchingDetectors.switchJumpSpeed / switchPointDist*3)/6);
				switching = true;
		
			}
			//2
			//second forward
			else if (l2SecondForwardHit && l2SecondForwardClear
			&& !l2FirstForwardHit && !l2MiddleHit && !l2FirstBackHit && !l2SecondBackHit && !l2ThirdBackHit
			&& !l2FirstForwardSurfaceDetectorsHit && !l2MiddleSurfaceDetectorsHit && !l2FirstBackSurfaceDetectorsHit && !l2SecondBackSurfaceDetectorsHit && !l2ThirdBackSurfaceDetectorsHit){
		
				ledgeSwitchPoint = new Vector3(0, onLedgeHeight2/10, 0) + l2SecondForwardHitPoint;
				currentLedgeSwitchPoint = ledgeSwitchPoint;
				switchPointDist = Vector3.Distance(transform.position, ledgeSwitchPoint);
				midSwitchPoint = (transform.position + ledgeSwitchPoint)/2 + upHeight*(ledgeSwitchingDetectors.switchJumpHeight/5)*((ledgeSwitchingDetectors.switchJumpSpeed / switchPointDist*3)/6);
				switching = true;
		
			}
			//first forward
			else if (l2FirstForwardHit && l2FirstForwardSurfaceDetectorsHit && l2FirstForwardClear
			&& !l2MiddleHit && !l2FirstBackHit && !l2SecondBackHit && !l2ThirdBackHit
			&& !l2MiddleSurfaceDetectorsHit && !l2FirstBackSurfaceDetectorsHit && !l2SecondBackSurfaceDetectorsHit && !l2ThirdBackSurfaceDetectorsHit){
		
				ledgeSwitchPoint = new Vector3(0, onLedgeHeight2/10, 0) + l2FirstForwardHitPoint;
				currentLedgeSwitchPoint = ledgeSwitchPoint;
				switchPointDist = Vector3.Distance(transform.position, ledgeSwitchPoint);
				midSwitchPoint = (transform.position + ledgeSwitchPoint)/2 + upHeight*(ledgeSwitchingDetectors.switchJumpHeight/5)*((ledgeSwitchingDetectors.switchJumpSpeed / switchPointDist*3)/6);
				switching = true;
		
			}
			//middle
			else if (l2MiddleHit && l2MiddleSurfaceDetectorsHit && l2MiddleClear
			&& !l2FirstBackHit && !l2SecondBackHit && !l2ThirdBackHit
			&& !l2FirstBackSurfaceDetectorsHit && !l2SecondBackSurfaceDetectorsHit && !l2ThirdBackSurfaceDetectorsHit){
		
				ledgeSwitchPoint = new Vector3(0, onLedgeHeight2/10, 0) + l2MiddleHitPoint;
				currentLedgeSwitchPoint = ledgeSwitchPoint;
				switchPointDist = Vector3.Distance(transform.position, ledgeSwitchPoint);
				midSwitchPoint = (transform.position + ledgeSwitchPoint)/2 + upHeight*(ledgeSwitchingDetectors.switchJumpHeight/5)*((ledgeSwitchingDetectors.switchJumpSpeed / switchPointDist*3)/6);
				switching = true;
		
			}
			//first back
			else if (l2FirstBackHit && l2FirstBackSurfaceDetectorsHit && l2FirstBackClear
			&& !l2SecondBackHit && !l2ThirdBackHit
			&& !l2SecondBackSurfaceDetectorsHit && !l2ThirdBackSurfaceDetectorsHit){
		
				ledgeSwitchPoint = new Vector3(0, onLedgeHeight2/10, 0) + l2FirstBackHitPoint;
				currentLedgeSwitchPoint = ledgeSwitchPoint;
				switchPointDist = Vector3.Distance(transform.position, ledgeSwitchPoint);
				midSwitchPoint = (transform.position + ledgeSwitchPoint)/2 + upHeight*(ledgeSwitchingDetectors.switchJumpHeight/5)*((ledgeSwitchingDetectors.switchJumpSpeed / switchPointDist*3)/6);
				switching = true;
		
			}
			//second back
			else if (l2SecondBackHit && l2SecondBackSurfaceDetectorsHit && l2SecondBackClear
			&& !l2ThirdBackHit
			&& !l2ThirdBackSurfaceDetectorsHit){
		
				ledgeSwitchPoint = new Vector3(0, onLedgeHeight2/10, 0) + l2SecondBackHitPoint;
				currentLedgeSwitchPoint = ledgeSwitchPoint;
				switchPointDist = Vector3.Distance(transform.position, ledgeSwitchPoint);
				midSwitchPoint = (transform.position + ledgeSwitchPoint)/2 + upHeight*(ledgeSwitchingDetectors.switchJumpHeight/5)*((ledgeSwitchingDetectors.switchJumpSpeed / switchPointDist*3)/6);
				switching = true;
		
			}
			//3
			//second forward
			else if (l3SecondForwardHit && l3SecondForwardClear
			&& !l3FirstForwardHit && !l3MiddleHit && !l3FirstBackHit && !l3SecondBackHit && !l3ThirdBackHit
			&& !l3FirstForwardSurfaceDetectorsHit && !l3MiddleSurfaceDetectorsHit && !l3FirstBackSurfaceDetectorsHit && !l3SecondBackSurfaceDetectorsHit && !l3ThirdBackSurfaceDetectorsHit){
		
				ledgeSwitchPoint = new Vector3(0, onLedgeHeight2/10, 0) + l3SecondForwardHitPoint;
				currentLedgeSwitchPoint = ledgeSwitchPoint;
				switchPointDist = Vector3.Distance(transform.position, ledgeSwitchPoint);
				midSwitchPoint = (transform.position + ledgeSwitchPoint)/2 + upHeight*(ledgeSwitchingDetectors.switchJumpHeight/5)*((ledgeSwitchingDetectors.switchJumpSpeed / switchPointDist*3)/6);
				switching = true;
		
			}
			//first forward
			else if (l3FirstForwardHit && l3FirstForwardSurfaceDetectorsHit && l3FirstForwardClear
			&& !l3MiddleHit && !l3FirstBackHit && !l3SecondBackHit && !l3ThirdBackHit
			&& !l3MiddleSurfaceDetectorsHit && !l3FirstBackSurfaceDetectorsHit && !l3SecondBackSurfaceDetectorsHit && !l3ThirdBackSurfaceDetectorsHit){
		
				ledgeSwitchPoint = new Vector3(0, onLedgeHeight2/10, 0) + l3FirstForwardHitPoint;
				currentLedgeSwitchPoint = ledgeSwitchPoint;
				switchPointDist = Vector3.Distance(transform.position, ledgeSwitchPoint);
				midSwitchPoint = (transform.position + ledgeSwitchPoint)/2 + upHeight*(ledgeSwitchingDetectors.switchJumpHeight/5)*((ledgeSwitchingDetectors.switchJumpSpeed / switchPointDist*3)/6);
				switching = true;
		
			}
			//middle
			else if (l3MiddleHit && l3MiddleSurfaceDetectorsHit && l3MiddleClear
			&& !l3FirstBackHit && !l3SecondBackHit && !l3ThirdBackHit
			&& !l3FirstBackSurfaceDetectorsHit && !l3SecondBackSurfaceDetectorsHit && !l3ThirdBackSurfaceDetectorsHit){
		
				ledgeSwitchPoint = new Vector3(0, onLedgeHeight2/10, 0) + l3MiddleHitPoint;
				currentLedgeSwitchPoint = ledgeSwitchPoint;
				switchPointDist = Vector3.Distance(transform.position, ledgeSwitchPoint);
				midSwitchPoint = (transform.position + ledgeSwitchPoint)/2 + upHeight*(ledgeSwitchingDetectors.switchJumpHeight/5)*((ledgeSwitchingDetectors.switchJumpSpeed / switchPointDist*3)/6);
				switching = true;
		
			}
			//first back
			else if (l3FirstBackHit && l3FirstBackSurfaceDetectorsHit && l3FirstBackClear
			&& !l3SecondBackHit && !l3ThirdBackHit
			&& !l3SecondBackSurfaceDetectorsHit && !l3ThirdBackSurfaceDetectorsHit){
		
				ledgeSwitchPoint = new Vector3(0, onLedgeHeight2/10, 0) + l3FirstBackHitPoint;
				currentLedgeSwitchPoint = ledgeSwitchPoint;
				switchPointDist = Vector3.Distance(transform.position, ledgeSwitchPoint);
				midSwitchPoint = (transform.position + ledgeSwitchPoint)/2 + upHeight*(ledgeSwitchingDetectors.switchJumpHeight/5)*((ledgeSwitchingDetectors.switchJumpSpeed / switchPointDist*3)/6);
				switching = true;
		
			}
			//second back
			else if (l3SecondBackHit && l3SecondBackSurfaceDetectorsHit && l3SecondBackClear
			&& !l3ThirdBackHit
			&& !l3ThirdBackSurfaceDetectorsHit){
		
				ledgeSwitchPoint = new Vector3(0, onLedgeHeight2/10, 0) + l3SecondBackHitPoint;
				currentLedgeSwitchPoint = ledgeSwitchPoint;
				switchPointDist = Vector3.Distance(transform.position, ledgeSwitchPoint);
				midSwitchPoint = (transform.position + ledgeSwitchPoint)/2 + upHeight*(ledgeSwitchingDetectors.switchJumpHeight/5)*((ledgeSwitchingDetectors.switchJumpSpeed / switchPointDist*3)/6);
				switching = true;
		
			}
			
		}
		
	}
	
	void RightMovement () {
		
		//moving right
		if (right){
			if (Input.GetAxis ("Horizontal") > 0 && rSide != Vector3.zero && !stuckToRight){
			
				if (!rightBlocked){
					
					//getting the distance between the player and the point on the ledge that the player will switch to
					RightSwitchPointDetecting();
					
				}
				
				if (!switching || !ledgeSwitchingDetectors.allowLedgeSwitching){
					if (movingDetectors.moveInBursts){
						if (startingRight){
							movementSpeed = Mathf.Lerp(movementSpeed, movingDetectors.moveSpeed, ((2 + movingDetectors.moveSpeed)*(movementSpeed/2 + 1))/movingDetectors.burstLength * Time.deltaTime);
						}
						else {
							movementSpeed = Mathf.Lerp(movementSpeed, 0, ((2 + movingDetectors.moveSpeed)*(movementSpeed/2 + 1))/movingDetectors.burstLength * Time.deltaTime);
						}
						if (movingDetectors.moveSpeed - movementSpeed < 0.1f){
							startingRight = false;
						}
						else if (movementSpeed - 0 < 0.1f){
							startingRight = true;
						}
					}
					else {
						movementSpeed = movingDetectors.moveSpeed;
					}
					
					movementVector = (new Vector3(rSide.x - transform.forward.x*colliderLengthFromCenter, (playerPosY + onLedgeHeight2/10), rSide.z - transform.forward.z*colliderLengthFromCenter) - transform.position + posChange2).normalized * (movementSpeed*directionVector.magnitude);
					if (characterController && characterController.enabled){
						characterController.Move(movementVector * Time.deltaTime);
					}
					else if (rigidBody){
						rigidBody.MovePosition(transform.position + movementVector * Time.deltaTime);
					}
					transform.position = new Vector3(transform.position.x, (playerPosY + onLedgeHeight2/10), transform.position.z);
				}
			}
			else if (rigidBody && (Input.GetAxis ("Horizontal") == 0 || stuckToRight)){
				rigidBody.velocity = Vector3.zero;
				movementVector = Vector3.zero;
			}
			
			if (Input.GetAxis ("Horizontal") <= 0){
				startingRight = true;
			}
		}
		
	}
	void RightSwitchPointDetecting () {
		
		if ((!switching || !ledgeSwitchingDetectors.allowLedgeSwitching) && grabbedOn && !turnBack && !back2 && Input.GetAxis ("Horizontal") >= ledgeSwitchingDetectors.inputPercentageNeededToSwitch/100 && directionVector.magnitude >= ledgeSwitchingDetectors.inputPercentageNeededToSwitch/100){
			
			//1
			//second forward
			if (r1SecondForwardHit && r1SecondForwardClear
			&& !r1FirstForwardHit && !r1MiddleHit && !r1FirstBackHit && !r1SecondBackHit && !r1ThirdBackHit
			&& !r1FirstForwardSurfaceDetectorsHit && !r1MiddleSurfaceDetectorsHit && !r1FirstBackSurfaceDetectorsHit && !r1SecondBackSurfaceDetectorsHit && !r1ThirdBackSurfaceDetectorsHit){
				
				ledgeSwitchPoint = new Vector3(0, onLedgeHeight2/10, 0) + r1SecondForwardHitPoint;
				currentLedgeSwitchPoint = ledgeSwitchPoint;
				switchPointDist = Vector3.Distance(transform.position, ledgeSwitchPoint);
				midSwitchPoint = (transform.position + ledgeSwitchPoint)/2 + upHeight*(ledgeSwitchingDetectors.switchJumpHeight/5)*((ledgeSwitchingDetectors.switchJumpSpeed / switchPointDist*3)/6);
				switching = true;
				
			}
			//first forward
			else if (r1FirstForwardHit && r1FirstForwardSurfaceDetectorsHit && r1FirstForwardClear
			&& !r1MiddleHit && !r1FirstBackHit && !r1SecondBackHit && !r1ThirdBackHit
			&& !r1MiddleSurfaceDetectorsHit && !r1FirstBackSurfaceDetectorsHit && !r1SecondBackSurfaceDetectorsHit && !r1ThirdBackSurfaceDetectorsHit){
				
				ledgeSwitchPoint = new Vector3(0, onLedgeHeight2/10, 0) + r1FirstForwardHitPoint;
				currentLedgeSwitchPoint = ledgeSwitchPoint;
				switchPointDist = Vector3.Distance(transform.position, ledgeSwitchPoint);
				midSwitchPoint = (transform.position + ledgeSwitchPoint)/2 + upHeight*(ledgeSwitchingDetectors.switchJumpHeight/5)*((ledgeSwitchingDetectors.switchJumpSpeed / switchPointDist*3)/6);
				switching = true;
				
			}
			//middle
			else if (r1MiddleHit && r1MiddleSurfaceDetectorsHit && r1MiddleClear
			&& !r1FirstBackHit && !r1SecondBackHit && !r1ThirdBackHit
			&& !r1FirstBackSurfaceDetectorsHit && !r1SecondBackSurfaceDetectorsHit && !r1ThirdBackSurfaceDetectorsHit){
				
				ledgeSwitchPoint = new Vector3(0, onLedgeHeight2/10, 0) + r1MiddleHitPoint;
				currentLedgeSwitchPoint = ledgeSwitchPoint;
				switchPointDist = Vector3.Distance(transform.position, ledgeSwitchPoint);
				midSwitchPoint = (transform.position + ledgeSwitchPoint)/2 + upHeight*(ledgeSwitchingDetectors.switchJumpHeight/5)*((ledgeSwitchingDetectors.switchJumpSpeed / switchPointDist*3)/6);
				switching = true;
				
			}
			//first back
			else if (r1FirstBackHit && r1FirstBackSurfaceDetectorsHit && r1FirstBackClear
			&& !r1SecondBackHit && !r1ThirdBackHit
			&& !r1SecondBackSurfaceDetectorsHit && !r1ThirdBackSurfaceDetectorsHit){
				
				ledgeSwitchPoint = new Vector3(0, onLedgeHeight2/10, 0) + r1FirstBackHitPoint;
				currentLedgeSwitchPoint = ledgeSwitchPoint;
				switchPointDist = Vector3.Distance(transform.position, ledgeSwitchPoint);
				midSwitchPoint = (transform.position + ledgeSwitchPoint)/2 + upHeight*(ledgeSwitchingDetectors.switchJumpHeight/5)*((ledgeSwitchingDetectors.switchJumpSpeed / switchPointDist*3)/6);
				switching = true;
				
			}
			//second back
			else if (r1SecondBackHit && r1SecondBackSurfaceDetectorsHit && r1SecondBackClear
			&& !r1ThirdBackHit
			&& !r1ThirdBackSurfaceDetectorsHit){
				
				ledgeSwitchPoint = new Vector3(0, onLedgeHeight2/10, 0) + r1SecondBackHitPoint;
				currentLedgeSwitchPoint = ledgeSwitchPoint;
				switchPointDist = Vector3.Distance(transform.position, ledgeSwitchPoint);
				midSwitchPoint = (transform.position + ledgeSwitchPoint)/2 + upHeight*(ledgeSwitchingDetectors.switchJumpHeight/5)*((ledgeSwitchingDetectors.switchJumpSpeed / switchPointDist*3)/6);
				switching = true;
				
			}
			//2
			//second forward
			else if (r2SecondForwardHit && r2SecondForwardClear
			&& !r2FirstForwardHit && !r2MiddleHit && !r2FirstBackHit && !r2SecondBackHit && !r2ThirdBackHit
			&& !r2FirstForwardSurfaceDetectorsHit && !r2MiddleSurfaceDetectorsHit && !r2FirstBackSurfaceDetectorsHit && !r2SecondBackSurfaceDetectorsHit && !r2ThirdBackSurfaceDetectorsHit){
				
				ledgeSwitchPoint = new Vector3(0, onLedgeHeight2/10, 0) + r2SecondForwardHitPoint;
				currentLedgeSwitchPoint = ledgeSwitchPoint;
				switchPointDist = Vector3.Distance(transform.position, ledgeSwitchPoint);
				midSwitchPoint = (transform.position + ledgeSwitchPoint)/2 + upHeight*(ledgeSwitchingDetectors.switchJumpHeight/5)*((ledgeSwitchingDetectors.switchJumpSpeed / switchPointDist*3)/6);
				switching = true;
				
			}
			//first forward
			else if (r2FirstForwardHit && r2FirstForwardSurfaceDetectorsHit && r2FirstForwardClear
			&& !r2MiddleHit && !r2FirstBackHit && !r2SecondBackHit && !r2ThirdBackHit
			&& !r2MiddleSurfaceDetectorsHit && !r2FirstBackSurfaceDetectorsHit && !r2SecondBackSurfaceDetectorsHit && !r2ThirdBackSurfaceDetectorsHit){
				
				ledgeSwitchPoint = new Vector3(0, onLedgeHeight2/10, 0) + r2FirstForwardHitPoint;
				currentLedgeSwitchPoint = ledgeSwitchPoint;
				switchPointDist = Vector3.Distance(transform.position, ledgeSwitchPoint);
				midSwitchPoint = (transform.position + ledgeSwitchPoint)/2 + upHeight*(ledgeSwitchingDetectors.switchJumpHeight/5)*((ledgeSwitchingDetectors.switchJumpSpeed / switchPointDist*3)/6);
				switching = true;
				
			}
			//middle
			else if (r2MiddleHit && r2MiddleSurfaceDetectorsHit && r2MiddleClear
			&& !r2FirstBackHit && !r2SecondBackHit && !r2ThirdBackHit
			&& !r2FirstBackSurfaceDetectorsHit && !r2SecondBackSurfaceDetectorsHit && !r2ThirdBackSurfaceDetectorsHit){
				
				ledgeSwitchPoint = new Vector3(0, onLedgeHeight2/10, 0) + r2MiddleHitPoint;
				currentLedgeSwitchPoint = ledgeSwitchPoint;
				switchPointDist = Vector3.Distance(transform.position, ledgeSwitchPoint);
				midSwitchPoint = (transform.position + ledgeSwitchPoint)/2 + upHeight*(ledgeSwitchingDetectors.switchJumpHeight/5)*((ledgeSwitchingDetectors.switchJumpSpeed / switchPointDist*3)/6);
				switching = true;
				
			}
			//first back
			else if (r2FirstBackHit && r2FirstBackSurfaceDetectorsHit && r2FirstBackClear
			&& !r2SecondBackHit && !r2ThirdBackHit
			&& !r2SecondBackSurfaceDetectorsHit && !r2ThirdBackSurfaceDetectorsHit){
				
				ledgeSwitchPoint = new Vector3(0, onLedgeHeight2/10, 0) + r2FirstBackHitPoint;
				currentLedgeSwitchPoint = ledgeSwitchPoint;
				switchPointDist = Vector3.Distance(transform.position, ledgeSwitchPoint);
				midSwitchPoint = (transform.position + ledgeSwitchPoint)/2 + upHeight*(ledgeSwitchingDetectors.switchJumpHeight/5)*((ledgeSwitchingDetectors.switchJumpSpeed / switchPointDist*3)/6);
				switching = true;
				
			}
			//second back
			else if (r2SecondBackHit && r2SecondBackSurfaceDetectorsHit && r2SecondBackClear
			&& !r2ThirdBackHit
			&& !r2ThirdBackSurfaceDetectorsHit){
			
				ledgeSwitchPoint = new Vector3(0, onLedgeHeight2/10, 0) + r2SecondBackHitPoint;
				currentLedgeSwitchPoint = ledgeSwitchPoint;
				switchPointDist = Vector3.Distance(transform.position, ledgeSwitchPoint);
				midSwitchPoint = (transform.position + ledgeSwitchPoint)/2 + upHeight*(ledgeSwitchingDetectors.switchJumpHeight/5)*((ledgeSwitchingDetectors.switchJumpSpeed / switchPointDist*3)/6);
				switching = true;
				
			}
			//3
			//second forward
			else if (r3SecondForwardHit && r3SecondForwardClear
			&& !r3FirstForwardHit && !r3MiddleHit && !r3FirstBackHit && !r3SecondBackHit && !r3ThirdBackHit
			&& !r3FirstForwardSurfaceDetectorsHit && !r3MiddleSurfaceDetectorsHit && !r3FirstBackSurfaceDetectorsHit && !r3SecondBackSurfaceDetectorsHit && !r3ThirdBackSurfaceDetectorsHit){
		
				ledgeSwitchPoint = new Vector3(0, onLedgeHeight2/10, 0) + r3SecondForwardHitPoint;
				currentLedgeSwitchPoint = ledgeSwitchPoint;
				switchPointDist = Vector3.Distance(transform.position, ledgeSwitchPoint);
				midSwitchPoint = (transform.position + ledgeSwitchPoint)/2 + upHeight*(ledgeSwitchingDetectors.switchJumpHeight/5)*((ledgeSwitchingDetectors.switchJumpSpeed / switchPointDist*3)/6);
				switching = true;
		
			}
			//first forward
			else if (r3FirstForwardHit && r3FirstForwardSurfaceDetectorsHit && r3FirstForwardClear
			&& !r3MiddleHit && !r3FirstBackHit && !r3SecondBackHit && !r3ThirdBackHit
			&& !r3MiddleSurfaceDetectorsHit && !r3FirstBackSurfaceDetectorsHit && !r3SecondBackSurfaceDetectorsHit && !r3ThirdBackSurfaceDetectorsHit){
		
				ledgeSwitchPoint = new Vector3(0, onLedgeHeight2/10, 0) + r3FirstForwardHitPoint;
				currentLedgeSwitchPoint = ledgeSwitchPoint;
				switchPointDist = Vector3.Distance(transform.position, ledgeSwitchPoint);
				midSwitchPoint = (transform.position + ledgeSwitchPoint)/2 + upHeight*(ledgeSwitchingDetectors.switchJumpHeight/5)*((ledgeSwitchingDetectors.switchJumpSpeed / switchPointDist*3)/6);
				switching = true;
		
			}
			//middle
			else if (r3MiddleHit && r3MiddleSurfaceDetectorsHit && r3MiddleClear
			&& !r3FirstBackHit && !r3SecondBackHit && !r3ThirdBackHit
			&& !r3FirstBackSurfaceDetectorsHit && !r3SecondBackSurfaceDetectorsHit && !r3ThirdBackSurfaceDetectorsHit){
		
				ledgeSwitchPoint = new Vector3(0, onLedgeHeight2/10, 0) + r3MiddleHitPoint;
				currentLedgeSwitchPoint = ledgeSwitchPoint;
				switchPointDist = Vector3.Distance(transform.position, ledgeSwitchPoint);
				midSwitchPoint = (transform.position + ledgeSwitchPoint)/2 + upHeight*(ledgeSwitchingDetectors.switchJumpHeight/5)*((ledgeSwitchingDetectors.switchJumpSpeed / switchPointDist*3)/6);
				switching = true;
		
			}
			//first back
			else if (r3FirstBackHit && r3FirstBackSurfaceDetectorsHit && r3FirstBackClear
			&& !r3SecondBackHit && !r3ThirdBackHit
			&& !r3SecondBackSurfaceDetectorsHit && !r3ThirdBackSurfaceDetectorsHit){
		
				ledgeSwitchPoint = new Vector3(0, onLedgeHeight2/10, 0) + r3FirstBackHitPoint;
				currentLedgeSwitchPoint = ledgeSwitchPoint;
				switchPointDist = Vector3.Distance(transform.position, ledgeSwitchPoint);
				midSwitchPoint = (transform.position + ledgeSwitchPoint)/2 + upHeight*(ledgeSwitchingDetectors.switchJumpHeight/5)*((ledgeSwitchingDetectors.switchJumpSpeed / switchPointDist*3)/6);
				switching = true;
		
			}
			//second back
			else if (r3SecondBackHit && r3SecondBackSurfaceDetectorsHit && r3SecondBackClear
			&& !r3ThirdBackHit
			&& !r3ThirdBackSurfaceDetectorsHit){
		
				ledgeSwitchPoint = new Vector3(0, onLedgeHeight2/10, 0) + r3SecondBackHitPoint;
				currentLedgeSwitchPoint = ledgeSwitchPoint;
				switchPointDist = Vector3.Distance(transform.position, ledgeSwitchPoint);
				midSwitchPoint = (transform.position + ledgeSwitchPoint)/2 + upHeight*(ledgeSwitchingDetectors.switchJumpHeight/5)*((ledgeSwitchingDetectors.switchJumpSpeed / switchPointDist*3)/6);
				switching = true;
		
			}
			
		}
		
	}
	
	void ClimbingOverLedge () {
		
		//if pulling up over ledge
		if (getOn2){
			pullingUp = true;
		}
		if (pullingUp){
			pullingUpTimer += 0.02f;
			if (scriptsToDisableOnGrab != null){
				foreach (string script in scriptsToDisableOnGrab)
				{
					scriptToDisable = GetComponent(script) as MonoBehaviour;
					if (scriptToDisable != null){
						scriptToDisable.enabled = false;
					}
					else if (!currentlyEnablingAndDisablingScripts){
						scriptWarning = true;
					}
				}
			}
			if (scriptsToEnableOnGrab != null){
				foreach (string script in scriptsToEnableOnGrab)
				{
					scriptToEnable = GetComponent(script) as MonoBehaviour;
					if (scriptToEnable != null){
						scriptToEnable.enabled = true;
					}
					else if (!currentlyEnablingAndDisablingScripts){
						scriptWarning = true;
					}
				}
			}
			currentlyEnablingAndDisablingScripts = true;
			
			if (grabbedOn){
				if (Physics.Linecast(transform.position + posChange2 + upHeight + forwardLength/1.25f + upHeight*1.5f + (rodHoldingLedgeDetectorHeight2 + rodHoldingLedgeDetectorForward2), transform.position + posChange2 + upHeight*0.8f + forwardLength/1.75f + (ledgeDetectorHeight2 + ledgeDetectorForward2 + rodHoldingLedgeDetectorHeight2 + rodHoldingLedgeDetectorForward2), out hit, collisionLayers)) {
					hitPoint = hit.point;
				}
				grabbedOn = false;
			}
			
			//if player is on moving platform
			if (transform.parent != null){
				if (!pullingUpOnToPlatform){
					originalPlatformPosition = transform.parent.position;
					originalPullUpPoint = hitPoint;
					pullingUpOnToPlatform = true;
				}
				if (pullingUpOnToPlatform){
					hitPoint = originalPullUpPoint + (transform.parent.position - originalPlatformPosition);
				}
			}
			else {
				pullingUpOnToPlatform = false;
			}
			
			if (getOn2){
				movementVector = (new Vector3(transform.position.x, hitPoint.y + upHeight.y/10, transform.position.z) - transform.position + posChange1).normalized * climbingDetectors.pullUpSpeed*height2;
				if (characterController && characterController.enabled){
					characterController.Move(movementVector * Time.deltaTime);
				}
				else if (rigidBody){
					rigidBody.MovePosition(transform.position + movementVector * Time.deltaTime);
				}
			}
			if (Vector3.Distance(transform.position, new Vector3(transform.position.x, hitPoint.y + upHeight.y/10, transform.position.z)) <= 0.2f*height2 || pullingUpTimer > Mathf.Abs((climbingDetectors.pullUpSpeed/4) * (-onLedgeHeight2/19 + 1))){
				getOn = false;
				grabbedOn = false;
				getOn2 = false;
			}
			
			if (!getOn2){
				transform.eulerAngles = new Vector3(0f, transform.eulerAngles.y, 0f);
				movementVector = ((hitPoint + forwardLength/10) - transform.position + posChange1).normalized * climbingDetectors.pullUpSpeed*height2;
				if (characterController && characterController.enabled){
					characterController.Move(movementVector * Time.deltaTime);
				}
				else if (rigidBody){
					rigidBody.MovePosition(transform.position + movementVector * Time.deltaTime);
				}
			}
			if (Vector3.Distance(transform.position + posChange1, (hitPoint + forwardLength/10)) <= 0.2f*height2 || pullingUpTimer > Mathf.Abs((climbingDetectors.pullUpSpeed/4) * (-onLedgeHeight2/19 + 1))){
				if (scriptsToDisableOnGrab != null){
					foreach (string script in scriptsToDisableOnGrab)
					{
						scriptToDisable = GetComponent(script) as MonoBehaviour;
						if (scriptToDisable != null){
							scriptToDisable.enabled = true;
						}
						else if (!currentlyEnablingAndDisablingScripts || pullingUp){
							scriptWarning = true;
						}
					}
				}
				if (scriptsToEnableOnGrab != null){
					foreach (string script in scriptsToEnableOnGrab)
					{
						scriptToEnable = GetComponent(script) as MonoBehaviour;
						if (scriptToEnable != null){
							scriptToEnable.enabled = false;
						}
						else if (!currentlyEnablingAndDisablingScripts || pullingUp){
							scriptWarning = true;
						}
					}
				}
				currentlyEnablingAndDisablingScripts = true;
				if (dustEffect != null){
					Instantiate(dustEffect, transform.position + new Vector3(0, 0.05f, 0), dustEffect.transform.rotation);
				}
				getOn2 = false;
				pullingUp = false;
			}
		}
		else {
			pullingUpOnToPlatform = false;
			pullingUpTimer = 0;
		}
		
	}
	
	void CheckIfStuck () {
		
		//if rightMovable is true, then we are not stuck on the right side
		if (rightMovable || Input.GetAxisRaw("Horizontal") < 0 && currentStatesOfVariables.leftMovementPossible){
			stuckToRight = false;
		}
		//if leftMovable is true, then we are not stuck on the left side
		if (leftMovable || Input.GetAxisRaw("Horizontal") > 0 && currentStatesOfVariables.rightMovementPossible){
			stuckToLeft = false;
		}
		
		//checking to see if the player is stuckInSamePos and not colliding
		if (!stuckInSamePos || pullingUp){
			stuckInSamePosNoCol = false;
		}
		else if (noCollisionTimer > 25){
			stuckInSamePosNoCol = true;
		}
		//checking to see if player is stuck on a collider
		if (grabbedOn && (!switching || !ledgeSwitchingDetectors.allowLedgeSwitching) && movementSpeed > 0 && (Input.GetAxisRaw("Horizontal") > 0 && currentStatesOfVariables.rightMovementPossible
		|| Input.GetAxisRaw("Horizontal") < 0 && currentStatesOfVariables.leftMovementPossible || Input.GetAxisRaw("Horizontal") == 0) || pullingUp){
			
			//checking to see if player is stuck on either side
			if (climbable && climbableL && climbableR){
				stuckToRight = false;
				stuckToLeft = false;
			}
			else if (Vector3.Distance(transform.position, lastPos) > 0.0001f && Vector3.Distance(transform.position, lastPos) < 0.01f && transform.position.y == lastPos.y && (!climbable || !climbableL || !climbableR)){
				//stuck on right side
				if (Input.GetAxisRaw("Horizontal") >= 0 && !rightMovable && climbPossible && climbPossibleR
				&& Physics.Linecast(transform.position + posChange2 + upHeight/2 + forwardLength/1.52f + upHeight*0.9f + (ledgeDetectorHeight2*(0.65f - (topOfLedgeSurfaceDetectorHeight2*0.59f)) + (ledgeDetectorForward2*(0.65f - (topOfLedgeSurfaceDetectorHeight2*0.59f))) + rodHoldingLedgeDetectorHeight2 + rodHoldingLedgeDetectorForward2 + transform.forward*(topOfLedgeSurfaceDetectorHeight2*length2)*0.14f + transform.up*(topOfLedgeSurfaceDetectorHeight2*height2)) + rightWidth/4, transform.position + posChange2 + upHeight*0.8f + forwardLength/1.75f + (ledgeDetectorHeight2 + ledgeDetectorForward2 + rodHoldingLedgeDetectorHeight2 + rodHoldingLedgeDetectorForward2) + rightWidth/4, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) <= ledgeAngleLimit){
					stuckToRight = true;
				}
				//stuck on left side
				if (Input.GetAxisRaw("Horizontal") <= 0 && !leftMovable && climbPossible && climbPossibleL
				&& Physics.Linecast(transform.position + posChange2 + upHeight/2 + forwardLength/1.52f + upHeight*0.9f + (ledgeDetectorHeight2*(0.65f - (topOfLedgeSurfaceDetectorHeight2*0.59f)) + (ledgeDetectorForward2*(0.65f - (topOfLedgeSurfaceDetectorHeight2*0.59f))) + rodHoldingLedgeDetectorHeight2 + rodHoldingLedgeDetectorForward2 + transform.forward*(topOfLedgeSurfaceDetectorHeight2*length2)*0.14f + transform.up*(topOfLedgeSurfaceDetectorHeight2*height2)) - rightWidth/4, transform.position + posChange2 + upHeight*0.8f + forwardLength/1.75f + (ledgeDetectorHeight2 + ledgeDetectorForward2 + rodHoldingLedgeDetectorHeight2 + rodHoldingLedgeDetectorForward2) - rightWidth/4, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) <= ledgeAngleLimit){
					stuckToLeft = true;
				}
			}
			
			
			//getting distance from the wall we are colliding with
			if (transform.position == lastPos){
				
				if (noCollisionTimer < 5 && (Physics.Linecast(transform.position + posChange1 + upHeight, transform.position + posChange1 + forwardLength/2 + upHeight, out hit, collisionLayers) || Physics.Linecast(transform.position + posChange1 + upHeight*1.1f, transform.position + posChange1 + forwardLength/2 + upHeight*1.1f, out hit, collisionLayers) || Physics.Linecast(transform.position + posChange1 + upHeight*1.2f, transform.position + posChange1 + forwardLength/2 + upHeight*1.2f, out hit, collisionLayers))){
					distFromWall = Vector3.Distance(new Vector3(hit.point.x, 0, hit.point.z), new Vector3(transform.position.x, 0, transform.position.z));
				}
				if (Input.GetAxisRaw("Horizontal") > 0.1f && currentStatesOfVariables.rightMovementPossible || Input.GetAxisRaw("Horizontal") < -0.1f && currentStatesOfVariables.leftMovementPossible){
					stuckInSamePos = true;
				}
			}
			if (transform.rotation != lastRot2 || Mathf.Abs(transform.position.y - lastPos.y) > 0.001f || stuckInSamePosNoCol && noCollisionTimer < 2){
				stuckInSamePos = false;
				stuckInSamePosNoCol = false;
			}
			
			if (characterController && characterController.enabled){
				
				//if player is stuck
				if (!pullingUp && stuckInSamePos){
					
					//move the player slightly back to avoid collision
					if (climbPossible && climbPossibleL && climbPossibleR && (Physics.Linecast(transform.position + posChange1 + upHeight, transform.position + posChange1 + forwardLength/2 + upHeight, out hit, collisionLayers) || Physics.Linecast(transform.position + posChange1 + upHeight*1.1f, transform.position + posChange1 + forwardLength/2 + upHeight*1.1f, out hit, collisionLayers) || Physics.Linecast(transform.position + posChange1 + upHeight*1.2f, transform.position + posChange1 + forwardLength/2 + upHeight*1.2f, out hit, collisionLayers))){
						if (distFromWall != 0){
							transform.position = new Vector3((hit.point + (hit.normal / (distFromWall/(0.07f * (distFromWall/0.2601f))))*(distFromWall/0.2601f)).x, transform.position.y, (hit.point + (hit.normal / (distFromWall/(0.07f * (distFromWall/0.2601f))))*(distFromWall/0.2601f)).z);
						}
						else {
							transform.position = new Vector3((hit.point + (hit.normal/3.5f)*length2).x, transform.position.y, (hit.point + (hit.normal/3.5f)*length2).z);
						}
					}
					else if (transform.position == lastPos && transform.rotation == lastRot2 || noCollisionTimer < 2){
						transform.position -= transform.forward/100;
					}
					
				}
				
				//if player is stuck while climbing over a ledge, move the player slightly back and up to avoid collision
				if (pullingUp && noCollisionTimer < 5 && (transform.position == lastPos || wallInFrontAngle > 95 && getOn2)){
					transform.position -= transform.forward/25;
					transform.position += transform.up/15;
				}
				
			}
			
		}
		lastPos = transform.position;
		lastRot2 = transform.rotation;
		
	}
	
	void SwitchingLedges () {
		
		//ledge switching
		if (switching && ledgeSwitchingDetectors.allowLedgeSwitching && grabbedOn){
			
			movementSpeed = 0;
			playerPosY = ledgeSwitchPoint.y - upHeight.y*0.1f;
			float diffX = Mathf.Abs(transform.position.x - midSwitchPoint.x);
			float diffZ = Mathf.Abs(transform.position.z - midSwitchPoint.z);
			transform.position = new Vector3(Mathf.Lerp(transform.position.x, currentLedgeSwitchPoint.x, (ledgeSwitchingDetectors.switchJumpSpeed / switchPointDist*3) * Time.deltaTime), Mathf.Lerp(transform.position.y, currentLedgeSwitchPoint.y, (ledgeSwitchingDetectors.switchJumpSpeed / switchPointDist*3) * Time.deltaTime), Mathf.Lerp(transform.position.z, currentLedgeSwitchPoint.z, (ledgeSwitchingDetectors.switchJumpSpeed / switchPointDist*3) * Time.deltaTime));
			
			if (diffX < 0.3f && diffZ < 0.3f){
				atMidPoint = true;
			}
			
			if (!switchJumping && !atMidPoint){
				if ((ledgeSwitchingDetectors.switchJumpHeight/5)*((ledgeSwitchingDetectors.switchJumpSpeed / switchPointDist*3)/6) >= 0 && currentLedgeSwitchPoint.y >= ledgeSwitchPoint.y || (ledgeSwitchingDetectors.switchJumpHeight/5)*((ledgeSwitchingDetectors.switchJumpSpeed / switchPointDist*3)/6) < 0 && currentLedgeSwitchPoint.y <= ledgeSwitchPoint.y){
					switchJumping = true;
				}
			}
			
			if (switchJumping){
				
				if ((ledgeSwitchingDetectors.switchJumpHeight/5)*((ledgeSwitchingDetectors.switchJumpSpeed / switchPointDist*3)/6) >= 0 && currentLedgeSwitchPoint.y <= ledgeSwitchPoint.y && transform.position.y <= ledgeSwitchPoint.y || (ledgeSwitchingDetectors.switchJumpHeight/5)*((ledgeSwitchingDetectors.switchJumpSpeed / switchPointDist*3)/6) < 0 && currentLedgeSwitchPoint.y >= ledgeSwitchPoint.y && transform.position.y >= ledgeSwitchPoint.y){
					currentLedgeSwitchPoint.y = ledgeSwitchPoint.y;
					transform.position = new Vector3(transform.position.x, ledgeSwitchPoint.y, transform.position.z);
					switchJumping = false;
				}
				
				if (!atMidPoint){
					currentLedgeSwitchPoint.y += (ledgeSwitchingDetectors.switchJumpHeight/5)*((ledgeSwitchingDetectors.switchJumpSpeed / switchPointDist*3)/6) * (diffX + diffZ)/2;
				}
				else {
					currentLedgeSwitchPoint.y -= (ledgeSwitchingDetectors.switchJumpHeight/5)*((ledgeSwitchingDetectors.switchJumpSpeed / switchPointDist*3)/6) * (diffX + diffZ)/2;
				}

			}
			else {
				currentLedgeSwitchPoint.y = ledgeSwitchPoint.y;
			}
			
			if (Vector3.Distance(transform.position, ledgeSwitchPoint) < 0.3f){
				atMidPoint = false;
				if (animator != null){
					animator.SetFloat("ledgeSpeed", 0);
				}
				switching = false;
			}
			
		}
		else {
			atMidPoint = false;
			switchJumping = false;
			switching = false;
		}
		
	}
	
	void DetachingFromMovingPlatform () {
		
		//getting the positions for the inner and outer bounds of the player's collider
		GetColliderBounds();
		
		if (GetComponent<PlayerController>()){
			
			if (GetComponent<PlayerController>().emptyObject != null){
				emptyObject = GetComponent<PlayerController>().emptyObject;
			}
			else {
				emptyObject = null;
			}
			if (GetComponent<PlayerController>().oldParent != null){
				oldParent = GetComponent<PlayerController>().oldParent;
			}
			else {
				oldParent = null;
			}
			
		}
		else if (GetComponent<MovingPlatformController_Standalone>()){
			
			if (GetComponent<MovingPlatformController_Standalone>().emptyObject != null){
				emptyObject = GetComponent<MovingPlatformController_Standalone>().emptyObject;
			}
			else {
				emptyObject = null;
			}
			if (GetComponent<MovingPlatformController_Standalone>().oldParent != null){
				oldParent = GetComponent<MovingPlatformController_Standalone>().oldParent;
			}
			else {
				oldParent = null;
			}
			
		}
		
		//detaching from a moving platform
		if ((GetComponent<PlayerController>() || GetComponent<MovingPlatformController_Standalone>()) && emptyObject != null && transform.parent == emptyObject.transform){
			
			if ((grabbedOn || turnBack || back2 || pullingUp)
			&& ((Physics.Linecast(transform.position + posChange2 + upHeight/2 + forwardLength/1.52f + upHeight*0.9f + (ledgeDetectorHeight2*(0.65f - (topOfLedgeSurfaceDetectorHeight2*0.59f)) + (ledgeDetectorForward2*(0.65f - (topOfLedgeSurfaceDetectorHeight2*0.59f))) + rodHoldingLedgeDetectorHeight2 + rodHoldingLedgeDetectorForward2 + transform.forward*(topOfLedgeSurfaceDetectorHeight2*length2)*0.14f + transform.up*(topOfLedgeSurfaceDetectorHeight2*height2)), transform.position + posChange2 + upHeight*0.8f + forwardLength/1.75f + (ledgeDetectorHeight2 + ledgeDetectorForward2 + rodHoldingLedgeDetectorHeight2 + rodHoldingLedgeDetectorForward2), out hit, collisionLayers) && hit.transform.tag != GetComponent<PlayerController>().movingPlatforms.movingPlatformTag)
			|| (Physics.Linecast(transform.position + posChange2 + upHeight*2.2f + forwardLength/1.75f + maxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*0.8f + forwardLength/1.75f, out hit, collisionLayers) && hit.transform.tag != GetComponent<PlayerController>().movingPlatforms.movingPlatformTag)) || switching){
				//making sure we are no longer attached to the empty object (so that we don't delete ourself)
				transform.parent = null;
				//deleting the emptyObject
				if (transform.parent != emptyObject.transform){
					transform.parent = null;
					Destroy(emptyObject);
				}
				//setting parent back to normal
				if (oldParent != null){
					transform.parent = oldParent.transform;
				}
				else {
					transform.parent = null;
				}
			}
			platformParentLastUpdate = true;
			
			if (platformParentLastUpdate && !switching && grabbedOn
			//if the player is no longer climbing a moving platform, but is still attached to it, detach from it
			&& (!climbable && !climbableL && !climbableR && !climbPossible && !climbPossibleL && !climbPossibleR
			||
			//if the player is bumped into a wall, drop off of the moving platform 
			(Physics.Linecast(new Vector3(colliderCenter.x, colliderBottom.y, colliderCenter.z), new Vector3(colliderBack.x, colliderBottom.y, colliderBack.z) - transform.forward/3, out hit, collisionLayers)
			|| Physics.Linecast(new Vector3(colliderCenter.x, (colliderBottom.y*3 + colliderCenter.y)/4, colliderCenter.z), new Vector3(colliderBack.x, (colliderBottom.y*3 + colliderBack.y)/4, colliderBack.z) - transform.forward/3, out hit, collisionLayers)
			|| Physics.Linecast(new Vector3(colliderCenter.x, (colliderBottom.y + colliderCenter.y)/2, colliderCenter.z), new Vector3(colliderBack.x, (colliderBottom.y + colliderBack.y)/2, colliderBack.z) - transform.forward/3, out hit, collisionLayers)
			|| Physics.Linecast(new Vector3(colliderCenter.x, (colliderBottom.y + colliderCenter.y*3)/4, colliderCenter.z), new Vector3(colliderBack.x, (colliderBottom.y + colliderBack.y*3)/4, colliderBack.z) - transform.forward/3, out hit, collisionLayers)
			|| Physics.Linecast(colliderCenter, colliderBack - transform.forward/3, out hit, collisionLayers)
			|| Physics.Linecast(new Vector3(colliderCenter.x, (colliderTop.y + colliderCenter.y*3)/4, colliderCenter.z), new Vector3(colliderBack.x, (colliderTop.y + colliderBack.y*3)/4, colliderBack.z) - transform.forward/3, out hit, collisionLayers)
			|| Physics.Linecast(new Vector3(colliderCenter.x, (colliderTop.y + colliderCenter.y)/2, colliderCenter.z), new Vector3(colliderBack.x, (colliderTop.y + colliderBack.y)/2, colliderBack.z) - transform.forward/3, out hit, collisionLayers)
			|| Physics.Linecast(new Vector3(colliderCenter.x, (colliderTop.y*3 + colliderCenter.y)/4, colliderCenter.z), new Vector3(colliderBack.x, (colliderTop.y*3 + colliderBack.y)/4, colliderBack.z) - transform.forward/3, out hit, collisionLayers)
			|| Physics.Linecast(new Vector3(colliderCenter.x, colliderTop.y, colliderCenter.z), new Vector3(colliderBack.x, colliderTop.y, colliderBack.z) - transform.forward/3, out hit, collisionLayers)))){
				movementSpeed = 0;
				if (scriptsToDisableOnGrab != null){
					foreach (string script in scriptsToDisableOnGrab)
					{
						scriptToDisable = GetComponent(script) as MonoBehaviour;
						if (scriptToDisable != null){
							scriptToDisable.enabled = true;
						}
						else if (!currentlyEnablingAndDisablingScripts || turnBack){
							scriptWarning = true;
						}
					}
				}
				if (scriptsToEnableOnGrab != null){
					foreach (string script in scriptsToEnableOnGrab)
					{
						scriptToEnable = GetComponent(script) as MonoBehaviour;
						if (scriptToEnable != null){
							scriptToEnable.enabled = false;
						}
						else if (!currentlyEnablingAndDisablingScripts || turnBack){
							scriptWarning = true;
						}
					}
				}
				currentlyEnablingAndDisablingScripts = true;
				jumpedOffTimer = 0;
				jumpedOffDirection = -transform.forward*distanceToPushOffOfLedgeAfterLettingGo;
				if (GetComponent<Animator>()){
					GetComponent<Animator>().speed = 1;
				}
				getOn = false;
				getOn2 = false;
				pullingUp = false;
				grabbedOn = false;
				turnBack = false;
				//making sure we are no longer attached to the empty object (so that we don't delete ourself)
				transform.parent = null;
				//deleting the emptyObject
				if (transform.parent != emptyObject.transform){
					transform.parent = null;
					Destroy(emptyObject);
				}
				//setting parent back to normal
				if (oldParent != null){
					transform.parent = oldParent.transform;
				}
				else {
					transform.parent = null;
				}
			}
			
		}
		else {
			if (platformParentLastUpdate && !switching && grabbedOn && !climbable && !climbableL && !climbableR && !climbPossible && !climbPossibleL && !climbPossibleR){
				movementSpeed = 0;
				if (scriptsToDisableOnGrab != null){
					foreach (string script in scriptsToDisableOnGrab)
					{
						scriptToDisable = GetComponent(script) as MonoBehaviour;
						if (scriptToDisable != null){
							scriptToDisable.enabled = true;
						}
						else if (!currentlyEnablingAndDisablingScripts || turnBack){
							scriptWarning = true;
						}
					}
				}
				if (scriptsToEnableOnGrab != null){
					foreach (string script in scriptsToEnableOnGrab)
					{
						scriptToEnable = GetComponent(script) as MonoBehaviour;
						if (scriptToEnable != null){
							scriptToEnable.enabled = false;
						}
						else if (!currentlyEnablingAndDisablingScripts || turnBack){
							scriptWarning = true;
						}
					}
				}
				currentlyEnablingAndDisablingScripts = true;
				jumpedOffTimer = 0;
				jumpedOffDirection = -transform.forward*distanceToPushOffOfLedgeAfterLettingGo;
				if (GetComponent<Animator>()){
					GetComponent<Animator>().speed = 1;
				}
				getOn = false;
				getOn2 = false;
				pullingUp = false;
				grabbedOn = false;
				turnBack = false;
			}
			platformParentLastUpdate = false;
		}
		
	}
	
	void GetColliderBounds () {
		
		Vector3 scaleForward = transform.forward*transform.localScale.z;
		Vector3 scaleUp = transform.up*transform.localScale.y;
		
		//getting the positions for the inner and outer bounds of the player's collider
		if (characterController && characterController.enabled){
			
			//center
			colliderCenter = characterController.bounds.center;
			//back
			colliderBack = characterController.bounds.center - (characterController.radius*scaleForward);
			//front
			colliderFront = characterController.bounds.center + (characterController.radius*scaleForward);
			//bottom
			colliderBottom = characterController.bounds.center - (characterController.height*0.5f*scaleUp);
			//top
			colliderTop = characterController.bounds.center + (characterController.height*0.5f*scaleUp);
			
		}
		else if (rigidBody){
			
			//center
			colliderCenter = GetComponent<Collider>().bounds.center;
			
			if (GetComponent<CapsuleCollider>()){
				//back
				colliderBack = GetComponent<Collider>().bounds.center - (GetComponent<CapsuleCollider>().radius*scaleForward);
				//front
				colliderFront = GetComponent<Collider>().bounds.center + (GetComponent<CapsuleCollider>().radius*scaleForward);
				//bottom
				colliderBottom = GetComponent<Collider>().bounds.center - (GetComponent<CapsuleCollider>().height*0.5f*scaleUp);
				//top
				colliderTop = GetComponent<Collider>().bounds.center + (GetComponent<CapsuleCollider>().height*0.5f*scaleUp);
			}
			else if (GetComponent<SphereCollider>()){
				//back
				colliderBack = GetComponent<Collider>().bounds.center - (GetComponent<SphereCollider>().radius*scaleForward);
				//front
				colliderFront = GetComponent<Collider>().bounds.center + (GetComponent<SphereCollider>().radius*scaleForward);
				//bottom
				colliderBottom = GetComponent<Collider>().bounds.center - (GetComponent<SphereCollider>().radius*scaleUp);
				//top
				colliderTop = GetComponent<Collider>().bounds.center + (GetComponent<SphereCollider>().radius*scaleUp);
			}
			else if (GetComponent<BoxCollider>()){
				//back
				colliderBack = GetComponent<Collider>().bounds.center - (GetComponent<BoxCollider>().size.z*0.5f*scaleForward);
				//front
				colliderFront = GetComponent<Collider>().bounds.center + (GetComponent<BoxCollider>().size.z*0.5f*scaleForward);
				//bottom
				colliderBottom = GetComponent<Collider>().bounds.center - (GetComponent<BoxCollider>().size.y*0.5f*scaleUp);
				//top
				colliderTop = GetComponent<Collider>().bounds.center + (GetComponent<BoxCollider>().size.y*0.5f*scaleUp);
			}
			
		}
		
		//getting the size of the collider from its center to its front edge
		colliderLengthFromCenter = Vector3.Distance(colliderCenter, colliderFront);
		
	}
	
	void LedgeSwitchingClearSecondFrontLeft () {
		
		if (!switching && ledgeSwitchingDetectors.allowLedgeSwitching && grabbedOn){
			
			//left
			
			//Determining if point on the left is clear to go to (the first 3 linecasts are bottom detectors, the 4th, 5th, 6th, and 7th are no surface detectors, and the 8th, 9th, 10, and 11th are space needed detectors that go from position to the surface detector,
			//the 12th, 13th, 14th, and 15th point directly forward to detect walls in front of the bottom half of the player, the 16th, 17th, 18th, and 19th point directly forward to detect walls in front of the top half of the player, the 4 after that start in front of the bottom half of the player and point directly back to detect walls,
			//and the last 4 linecasts start in front of the top half of the player and point directly back to detect walls as well)
			
			//second forward detectors
			//1
			if (!Physics.Linecast(transform.position + posChange1 + upHeight + ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 + minDistFromGroundHeight2 + ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange1 + upHeight - (rightWidth/4) - minDistFromGroundWidth2 + ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 - (rightWidth/4) + minDistFromGroundHeight2 - minDistFromGroundWidth2 + ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange1 + upHeight + (rightWidth/4) + minDistFromGroundWidth2 + ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 + (rightWidth/4) + minDistFromGroundHeight2 + minDistFromGroundWidth2 + ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			
			&&  !Physics.Linecast((transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/0.585f - rightWidth*1.33f - firstSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2)) + upHeight*2.2f + noSurfaceDetectorHeight2, (transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/0.585f - rightWidth*1.33f - firstSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2)) + upHeight*0.3f - noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast((transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/0.585f - rightWidth*1.33f - firstSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2)) + upHeight*0.3f - noSurfaceDetectorHeight2, (transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/0.585f - rightWidth*1.33f - firstSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2)) + upHeight*2.2f + noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/0.585f - ledgeSwitchFirstWidthBack + upHeight*2.2f + noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/0.585f - ledgeSwitchFirstWidthBack + upHeight*0.3f - noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/0.585f - ledgeSwitchFirstWidthBack + upHeight*0.3f - noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/0.585f - ledgeSwitchFirstWidthBack + upHeight*2.2f + noSurfaceDetectorHeight2, out hit, collisionLayers)
			
			&&  !Physics.Linecast(leftSpace, transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2 + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(leftSpace + ledgeSwitchHeight*0.375f, transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2 + ledgeSwitchHeight*0.375f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(leftSpace + ledgeSwitchHeight*0.75f, transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2 + ledgeSwitchHeight*0.75f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(leftSpace + ledgeSwitchHeight*1.125f, transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2 + ledgeSwitchHeight*1.125f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.585f - ledgeSwitchFirstWidthBack, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.585f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*0.375f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.585f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*0.75f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.585f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.125f, out hit, collisionLayers)
			//
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.585f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.45f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.585f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.8f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.585f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*2.1f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.585f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*2.405f, out hit, collisionLayers)
			
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.585f - ledgeSwitchFirstWidthBack, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.585f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*0.375f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.585f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*0.75f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.585f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.125f, out hit, collisionLayers)
			//
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.585f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.45f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.585f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.8f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.585f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*2.1f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.585f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*2.405f, out hit, collisionLayers)
			&&  !l1FirstForwardSurfaceDetectorsHit && !l1FirstForwardHit
			&&  l1SecondForwardHit){
				l1SecondForwardTimer += 0.01f;
				if (l1SecondForwardTimer > 0.1f || rotTimer > 0){
					l1SecondForwardClear = true;
				}
				else {
					l1SecondForwardClear = false;
				}
			}
			else {
				l1SecondForwardTimer = 0.0f;
				l1SecondForwardClear = false;
			}
			//2
			if (!Physics.Linecast(transform.position + posChange1 + upHeight + ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 + minDistFromGroundHeight2 + ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange1 + upHeight - (rightWidth/4) - minDistFromGroundWidth2 + ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 - (rightWidth/4) + minDistFromGroundHeight2 - minDistFromGroundWidth2 + ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange1 + upHeight + (rightWidth/4) + minDistFromGroundWidth2 + ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 + (rightWidth/4) + minDistFromGroundHeight2 + minDistFromGroundWidth2 + ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			
			&&  !Physics.Linecast((transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/0.585f - rightWidth*1.33f - secondSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2)) + upHeight*2.2f + noSurfaceDetectorHeight2, (transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/0.585f - rightWidth*1.33f - secondSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2)) + upHeight*0.3f - noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast((transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/0.585f - rightWidth*1.33f - secondSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2)) + upHeight*0.3f - noSurfaceDetectorHeight2, (transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/0.585f - rightWidth*1.33f - secondSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2)) + upHeight*2.2f + noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/0.585f - ledgeSwitchSecondWidthBack + upHeight*2.2f + noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/0.585f - ledgeSwitchSecondWidthBack + upHeight*0.3f - noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/0.585f - ledgeSwitchSecondWidthBack + upHeight*0.3f - noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/0.585f - ledgeSwitchSecondWidthBack + upHeight*2.2f + noSurfaceDetectorHeight2, out hit, collisionLayers)
			
			&&  !Physics.Linecast(leftSpace, transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2 + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(leftSpace + ledgeSwitchHeight*0.375f, transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2 + ledgeSwitchHeight*0.375f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(leftSpace + ledgeSwitchHeight*0.75f, transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2 + ledgeSwitchHeight*0.75f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(leftSpace + ledgeSwitchHeight*1.125f, transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2 + ledgeSwitchHeight*1.125f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.585f - ledgeSwitchSecondWidthBack, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.585f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*0.375f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.585f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*0.75f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.585f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.125f, out hit, collisionLayers)
			//
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.585f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.45f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.585f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.8f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.585f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*2.1f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.585f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*2.405f, out hit, collisionLayers)
			
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.585f - ledgeSwitchSecondWidthBack, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.585f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*0.375f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.585f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*0.75f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.585f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.125f, out hit, collisionLayers)
			//
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.585f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.45f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.585f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.8f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.585f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*2.1f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.585f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*2.405f, out hit, collisionLayers)
			&&  !l2FirstForwardSurfaceDetectorsHit && !l2FirstForwardHit
			&&  l2SecondForwardHit){
				l2SecondForwardTimer += 0.01f;
				if (l2SecondForwardTimer > 0.1f || rotTimer > 0){
					l2SecondForwardClear = true;
				}
				else {
					l2SecondForwardClear = false;
				}
			}
			else {
				l2SecondForwardTimer = 0.0f;
				l2SecondForwardClear = false;
			}
			//3
			if (!Physics.Linecast(transform.position + posChange1 + upHeight + ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 + minDistFromGroundHeight2 + ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange1 + upHeight - (rightWidth/4) - minDistFromGroundWidth2 + ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 - (rightWidth/4) + minDistFromGroundHeight2 - minDistFromGroundWidth2 + ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange1 + upHeight + (rightWidth/4) + minDistFromGroundWidth2 + ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 + (rightWidth/4) + minDistFromGroundHeight2 + minDistFromGroundWidth2 + ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			
			&&  !Physics.Linecast((transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/0.585f - rightWidth*1.33f - thirdSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2)) + upHeight*2.2f + noSurfaceDetectorHeight2, (transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/0.585f - rightWidth*1.33f - thirdSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2)) + upHeight*0.3f - noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast((transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/0.585f - rightWidth*1.33f - thirdSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2)) + upHeight*0.3f - noSurfaceDetectorHeight2, (transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/0.585f - rightWidth*1.33f - thirdSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2)) + upHeight*2.2f + noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/0.585f - ledgeSwitchThirdWidthBack + upHeight*2.2f + noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/0.585f - ledgeSwitchThirdWidthBack + upHeight*0.3f - noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/0.585f - ledgeSwitchThirdWidthBack + upHeight*0.3f - noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/0.585f - ledgeSwitchThirdWidthBack + upHeight*2.2f + noSurfaceDetectorHeight2, out hit, collisionLayers)
			
			&&  !Physics.Linecast(leftSpace, transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2 + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(leftSpace + ledgeSwitchHeight*0.375f, transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2 + ledgeSwitchHeight*0.375f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(leftSpace + ledgeSwitchHeight*0.75f, transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2 + ledgeSwitchHeight*0.75f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(leftSpace + ledgeSwitchHeight*1.125f, transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2 + ledgeSwitchHeight*1.125f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.585f - ledgeSwitchThirdWidthBack, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.585f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*0.375f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.585f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*0.75f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.585f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.125f, out hit, collisionLayers)
			//
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.585f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.45f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.585f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.8f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.585f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*2.1f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.585f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*2.405f, out hit, collisionLayers)
			
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.585f - ledgeSwitchThirdWidthBack, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.585f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*0.375f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.585f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*0.75f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.585f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.125f, out hit, collisionLayers)
			//
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.585f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.45f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.585f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.8f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.585f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*2.1f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.585f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*2.405f, out hit, collisionLayers)
			&&  !l3FirstForwardSurfaceDetectorsHit && !l3FirstForwardHit
			&&  l3SecondForwardHit){
				l3SecondForwardTimer += 0.01f;
				if (l3SecondForwardTimer > 0.1f || rotTimer > 0){
					l3SecondForwardClear = true;
				}
				else {
					l3SecondForwardClear = false;
				}
			}
			else {
				l3SecondForwardTimer = 0.0f;
				l3SecondForwardClear = false;
			}
			
		}
	}
	
	void LedgeSwitchingClearFirstFrontLeft () {
		
		if (!switching && ledgeSwitchingDetectors.allowLedgeSwitching && grabbedOn){
			
			//first forward detectors
			//1
			if (!Physics.Linecast(transform.position + posChange1 + upHeight + ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 + minDistFromGroundHeight2 + ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange1 + upHeight - (rightWidth/4) - minDistFromGroundWidth2 + ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 - (rightWidth/4) + minDistFromGroundHeight2 - minDistFromGroundWidth2 + ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange1 + upHeight + (rightWidth/4) + minDistFromGroundWidth2 + ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 + (rightWidth/4) + minDistFromGroundHeight2 + minDistFromGroundWidth2 + ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			
			&&  !Physics.Linecast((transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/0.875f - rightWidth*1.596f - firstSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2)) + upHeight*2.2f + noSurfaceDetectorHeight2, (transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/0.875f - rightWidth*1.596f - firstSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2)) + upHeight*0.3f - noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast((transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/0.875f - rightWidth*1.596f - firstSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2)) + upHeight*0.3f - noSurfaceDetectorHeight2, (transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/0.875f - rightWidth*1.596f - firstSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2)) + upHeight*2.2f + noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + upHeight*2.2f + noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + upHeight*0.3f - noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + upHeight*0.3f - noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + upHeight*2.2f + noSurfaceDetectorHeight2, out hit, collisionLayers)
			
			&&  !Physics.Linecast(leftSpace, transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(leftSpace + ledgeSwitchHeight*0.375f, transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + ledgeSwitchHeight*0.375f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(leftSpace + ledgeSwitchHeight*0.75f, transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + ledgeSwitchHeight*0.75f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(leftSpace + ledgeSwitchHeight*1.125f, transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + ledgeSwitchHeight*1.125f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstWidthBack, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*0.375f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*0.75f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.125f, out hit, collisionLayers)
			//
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.45f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.8f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*2.1f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*2.405f, out hit, collisionLayers)
			
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstWidthBack, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*0.375f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*0.75f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.125f, out hit, collisionLayers)
			//
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.45f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.8f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*2.1f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*2.405f, out hit, collisionLayers)
			&&  !l1MiddleSurfaceDetectorsHit && !l1MiddleHit
			&&  l1FirstForwardSurfaceDetectorsHit && l1FirstForwardHit){
				l1FirstForwardTimer += 0.01f;
				if (l1FirstForwardTimer > 0.1f || rotTimer > 0){
					l1FirstForwardClear = true;
				}
				else {
					l1FirstForwardClear = false;
				}
			}
			else {
				l1FirstForwardTimer = 0.0f;
				l1FirstForwardClear = false;
			}
			//2
			if (!Physics.Linecast(transform.position + posChange1 + upHeight + ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 + minDistFromGroundHeight2 + ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange1 + upHeight - (rightWidth/4) - minDistFromGroundWidth2 + ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 - (rightWidth/4) + minDistFromGroundHeight2 - minDistFromGroundWidth2 + ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange1 + upHeight + (rightWidth/4) + minDistFromGroundWidth2 + ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 + (rightWidth/4) + minDistFromGroundHeight2 + minDistFromGroundWidth2 + ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			
			&&  !Physics.Linecast((transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/0.875f - rightWidth*1.596f - secondSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2)) + upHeight*2.2f + noSurfaceDetectorHeight2, (transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/0.875f - rightWidth*1.596f - secondSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2)) + upHeight*0.3f - noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast((transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/0.875f - rightWidth*1.596f - secondSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2)) + upHeight*0.3f - noSurfaceDetectorHeight2, (transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/0.875f - rightWidth*1.596f - secondSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2)) + upHeight*2.2f + noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + upHeight*2.2f + noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + upHeight*0.3f - noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + upHeight*0.3f - noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + upHeight*2.2f + noSurfaceDetectorHeight2, out hit, collisionLayers)
			
			&&  !Physics.Linecast(leftSpace, transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(leftSpace + ledgeSwitchHeight*0.375f, transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + ledgeSwitchHeight*0.375f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(leftSpace + ledgeSwitchHeight*0.75f, transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + ledgeSwitchHeight*0.75f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(leftSpace + ledgeSwitchHeight*1.125f, transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + ledgeSwitchHeight*1.125f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondWidthBack, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*0.375f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*0.75f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.125f, out hit, collisionLayers)
			//
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.45f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.8f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*2.1f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*2.405f, out hit, collisionLayers)
			
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondWidthBack, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*0.375f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*0.75f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.125f, out hit, collisionLayers)
			//
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.45f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.8f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*2.1f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*2.405f, out hit, collisionLayers)
			&&  !l2MiddleSurfaceDetectorsHit && !l2MiddleHit
			&&  l2FirstForwardSurfaceDetectorsHit && l2FirstForwardHit){
				l2FirstForwardTimer += 0.01f;
				if (l2FirstForwardTimer > 0.1f || rotTimer > 0){
					l2FirstForwardClear = true;
				}
				else {
					l2FirstForwardClear = false;
				}
			}
			else {
				l2FirstForwardTimer = 0.0f;
				l2FirstForwardClear = false;
			}
			//3
			if (!Physics.Linecast(transform.position + posChange1 + upHeight + ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 + minDistFromGroundHeight2 + ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange1 + upHeight - (rightWidth/4) - minDistFromGroundWidth2 + ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 - (rightWidth/4) + minDistFromGroundHeight2 - minDistFromGroundWidth2 + ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange1 + upHeight + (rightWidth/4) + minDistFromGroundWidth2 + ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 + (rightWidth/4) + minDistFromGroundHeight2 + minDistFromGroundWidth2 + ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			
			&&  !Physics.Linecast((transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/0.875f - rightWidth*1.596f - thirdSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2)) + upHeight*2.2f + noSurfaceDetectorHeight2, (transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/0.875f - rightWidth*1.596f - thirdSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2)) + upHeight*0.3f - noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast((transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/0.875f - rightWidth*1.596f - thirdSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2)) + upHeight*0.3f - noSurfaceDetectorHeight2, (transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/0.875f - rightWidth*1.596f - thirdSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2)) + upHeight*2.2f + noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + upHeight*2.2f + noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + upHeight*0.3f - noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + upHeight*0.3f - noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + upHeight*2.2f + noSurfaceDetectorHeight2, out hit, collisionLayers)
			
			&&  !Physics.Linecast(leftSpace, transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(leftSpace + ledgeSwitchHeight*0.375f, transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + ledgeSwitchHeight*0.375f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(leftSpace + ledgeSwitchHeight*0.75f, transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + ledgeSwitchHeight*0.75f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(leftSpace + ledgeSwitchHeight*1.125f, transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + ledgeSwitchHeight*1.125f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdWidthBack, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*0.375f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*0.75f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.125f, out hit, collisionLayers)
			//
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.45f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.8f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*2.1f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*2.405f, out hit, collisionLayers)
			
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdWidthBack, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*0.375f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*0.75f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.125f, out hit, collisionLayers)
			//
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.45f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.8f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*2.1f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*2.405f, out hit, collisionLayers)
			&&  !l3MiddleSurfaceDetectorsHit && !l3MiddleHit
			&&  l3FirstForwardSurfaceDetectorsHit && l3FirstForwardHit){
				l3FirstForwardTimer += 0.01f;
				if (l3FirstForwardTimer > 0.1f || rotTimer > 0){
					l3FirstForwardClear = true;
				}
				else {
					l3FirstForwardClear = false;
				}
			}
			else {
				l3FirstForwardTimer = 0.0f;
				l3FirstForwardClear = false;
			}
			
		}
	}
	
	void LedgeSwitchingClearMiddleLeft () {
		
		if (!switching && ledgeSwitchingDetectors.allowLedgeSwitching && grabbedOn){
			
			//middle detectors
			//1
			if (!Physics.Linecast(transform.position + posChange1 + upHeight - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 + minDistFromGroundHeight2 - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange1 + upHeight - (rightWidth/4) - minDistFromGroundWidth2 - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 - (rightWidth/4) + minDistFromGroundHeight2 - minDistFromGroundWidth2 - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange1 + upHeight + (rightWidth/4) + minDistFromGroundWidth2 - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 + (rightWidth/4) + minDistFromGroundHeight2 + minDistFromGroundWidth2 - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			
			&&  !Physics.Linecast((transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/1.75f - rightWidth*1.862f - firstSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2)) + upHeight*2.2f + noSurfaceDetectorHeight2, (transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/1.75f - rightWidth*1.862f - firstSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2)) + upHeight*0.3f - noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast((transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/1.75f - rightWidth*1.862f - firstSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2)) + upHeight*0.3f - noSurfaceDetectorHeight2, (transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/1.75f - rightWidth*1.862f - firstSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2)) + upHeight*2.2f + noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + upHeight*2.2f + noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + upHeight*0.3f - noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + upHeight*0.3f - noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + upHeight*2.2f + noSurfaceDetectorHeight2, out hit, collisionLayers)
			
			&&  !Physics.Linecast(leftSpace, transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 - rightWidth*2 - surfaceDetectorWidth2 + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(leftSpace + ledgeSwitchHeight*0.375f, transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 - rightWidth*2 - surfaceDetectorWidth2 + ledgeSwitchHeight*0.375f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(leftSpace + ledgeSwitchHeight*0.75f, transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 - rightWidth*2 - surfaceDetectorWidth2 + ledgeSwitchHeight*0.75f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(leftSpace + ledgeSwitchHeight*1.125f, transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 - rightWidth*2 - surfaceDetectorWidth2 + ledgeSwitchHeight*1.125f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstWidthBack, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*0.375f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*0.75f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.125f, out hit, collisionLayers)
			//
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.45f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.8f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*2.1f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*2.405f, out hit, collisionLayers)
			
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstWidthBack, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*0.375f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*0.75f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.125f, out hit, collisionLayers)
			//
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.45f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.8f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*2.1f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*2.405f, out hit, collisionLayers)
			&&  !l1FirstBackSurfaceDetectorsHit && !l1FirstBackHit
			&&  l1MiddleSurfaceDetectorsHit && l1MiddleHit){
				l1MiddleTimer += 0.01f;
				if (l1MiddleTimer > 0.1f || rotTimer > 0){
					l1MiddleClear = true;
				}
				else {
					l1MiddleClear = false;
				}
			}
			else {
				l1MiddleTimer = 0.0f;
				l1MiddleClear = false;
			}
			//2
			if (!Physics.Linecast(transform.position + posChange1 + upHeight - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 + minDistFromGroundHeight2 - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange1 + upHeight - (rightWidth/4) - minDistFromGroundWidth2 - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 - (rightWidth/4) + minDistFromGroundHeight2 - minDistFromGroundWidth2 - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange1 + upHeight + (rightWidth/4) + minDistFromGroundWidth2 - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 + (rightWidth/4) + minDistFromGroundHeight2 + minDistFromGroundWidth2 - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			
			&&  !Physics.Linecast((transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/1.75f - rightWidth*1.862f - secondSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2)) + upHeight*2.2f + noSurfaceDetectorHeight2, (transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/1.75f - rightWidth*1.862f - secondSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2)) + upHeight*0.3f - noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast((transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/1.75f - rightWidth*1.862f - secondSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2)) + upHeight*0.3f - noSurfaceDetectorHeight2, (transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/1.75f - rightWidth*1.862f - secondSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2)) + upHeight*2.2f + noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + upHeight*2.2f + noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + upHeight*0.3f - noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + upHeight*0.3f - noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + upHeight*2.2f + noSurfaceDetectorHeight2, out hit, collisionLayers)
			
			&&  !Physics.Linecast(leftSpace, transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 - rightWidth*2 - surfaceDetectorWidth2 + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(leftSpace + ledgeSwitchHeight*0.375f, transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 - rightWidth*2 - surfaceDetectorWidth2 + ledgeSwitchHeight*0.375f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(leftSpace + ledgeSwitchHeight*0.75f, transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 - rightWidth*2 - surfaceDetectorWidth2 + ledgeSwitchHeight*0.75f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(leftSpace + ledgeSwitchHeight*1.125f, transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 - rightWidth*2 - surfaceDetectorWidth2 + ledgeSwitchHeight*1.125f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondWidthBack, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*0.375f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*0.75f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.125f, out hit, collisionLayers)
			//
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.45f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.8f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*2.1f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*2.405f, out hit, collisionLayers)
			
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondWidthBack, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*0.375f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*0.75f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.125f, out hit, collisionLayers)
			//
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.45f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.8f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*2.1f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*2.405f, out hit, collisionLayers)
			&&  !l2FirstBackSurfaceDetectorsHit && !l2FirstBackHit
			&&  l2MiddleSurfaceDetectorsHit && l2MiddleHit){
				l2MiddleTimer += 0.01f;
				if (l2MiddleTimer > 0.1f || rotTimer > 0){
					l2MiddleClear = true;
				}
				else {
					l2MiddleClear = false;
				}
			}
			else {
				l2MiddleTimer = 0.0f;
				l2MiddleClear = false;
			}
			//3
			if (!Physics.Linecast(transform.position + posChange1 + upHeight - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 + minDistFromGroundHeight2 - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange1 + upHeight - (rightWidth/4) - minDistFromGroundWidth2 - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 - (rightWidth/4) + minDistFromGroundHeight2 - minDistFromGroundWidth2 - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange1 + upHeight + (rightWidth/4) + minDistFromGroundWidth2 - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 + (rightWidth/4) + minDistFromGroundHeight2 + minDistFromGroundWidth2 - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			
			&&  !Physics.Linecast((transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/1.75f - rightWidth*1.862f - thirdSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2)) + upHeight*2.2f + noSurfaceDetectorHeight2, (transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/1.75f - rightWidth*1.862f - thirdSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2)) + upHeight*0.3f - noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast((transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/1.75f - rightWidth*1.862f - thirdSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2)) + upHeight*0.3f - noSurfaceDetectorHeight2, (transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/1.75f - rightWidth*1.862f - thirdSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2)) + upHeight*2.2f + noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + upHeight*2.2f + noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + upHeight*0.3f - noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + upHeight*0.3f - noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + upHeight*2.2f + noSurfaceDetectorHeight2, out hit, collisionLayers)
			
			&&  !Physics.Linecast(leftSpace, transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 - rightWidth*2 - surfaceDetectorWidth2 + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(leftSpace + ledgeSwitchHeight*0.375f, transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 - rightWidth*2 - surfaceDetectorWidth2 + ledgeSwitchHeight*0.375f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(leftSpace + ledgeSwitchHeight*0.75f, transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 - rightWidth*2 - surfaceDetectorWidth2 + ledgeSwitchHeight*0.75f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(leftSpace + ledgeSwitchHeight*1.125f, transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 - rightWidth*2 - surfaceDetectorWidth2 + ledgeSwitchHeight*1.125f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdWidthBack, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*0.375f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*0.75f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.125f, out hit, collisionLayers)
			//
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.45f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.8f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*2.1f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*2.405f, out hit, collisionLayers)
			
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdWidthBack, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*0.375f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*0.75f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.125f, out hit, collisionLayers)
			//
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.45f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.8f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*2.1f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*2.405f, out hit, collisionLayers)
			&&  !l3FirstBackSurfaceDetectorsHit && !l3FirstBackHit
			&&  l3MiddleSurfaceDetectorsHit && l3MiddleHit){
				l3MiddleTimer += 0.01f;
				if (l3MiddleTimer > 0.1f || rotTimer > 0){
					l3MiddleClear = true;
				}
				else {
					l3MiddleClear = false;
				}
			}
			else {
				l3MiddleTimer = 0.0f;
				l3MiddleClear = false;
			}
			
		}
	}
	
	
	void LedgeSwitchingClearFirstBackLeft () {
	
		if (!switching && ledgeSwitchingDetectors.allowLedgeSwitching && grabbedOn){
			
			//first back detectors
			//1
			if (!Physics.Linecast(transform.position + posChange1 + upHeight - ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 + minDistFromGroundHeight2 - ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange1 + upHeight - (rightWidth/4) - minDistFromGroundWidth2 - ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 - (rightWidth/4) + minDistFromGroundHeight2 - minDistFromGroundWidth2 - ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange1 + upHeight + (rightWidth/4) + minDistFromGroundWidth2 - ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 + (rightWidth/4) + minDistFromGroundHeight2 + minDistFromGroundWidth2 - ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			
			&&  !Physics.Linecast((transform.position + posChange2 + (transform.position + posChange2 - rightWidth*2.128f - firstSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2)) + upHeight*2.2f + noSurfaceDetectorHeight2, (transform.position + posChange2 + (transform.position + posChange2 - rightWidth*2.128f - firstSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2)) + upHeight*0.3f - noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast((transform.position + posChange2 + (transform.position + posChange2 - rightWidth*2.128f - firstSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2)) + upHeight*0.3f - noSurfaceDetectorHeight2, (transform.position + posChange2 + (transform.position + posChange2 - rightWidth*2.128f - firstSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2)) + upHeight*2.2f + noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 - ledgeSwitchFirstWidthBack + upHeight*2.2f + noSurfaceDetectorHeight2, transform.position + posChange2 - ledgeSwitchFirstWidthBack + upHeight*0.3f - noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 - ledgeSwitchFirstWidthBack + upHeight*0.3f - noSurfaceDetectorHeight2, transform.position + posChange2 - ledgeSwitchFirstWidthBack + upHeight*2.2f + noSurfaceDetectorHeight2, out hit, collisionLayers)
			
			&&  !Physics.Linecast(leftSpace, transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 - ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(leftSpace + ledgeSwitchHeight*0.375f, transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 - ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + ledgeSwitchHeight*0.375f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(leftSpace + ledgeSwitchHeight*0.75f, transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 - ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + ledgeSwitchHeight*0.75f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(leftSpace + ledgeSwitchHeight*1.125f, transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 - ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + ledgeSwitchHeight*1.125f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*0.375f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*0.75f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.125f, out hit, collisionLayers)
			//
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.45f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.8f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*2.1f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*2.405f, out hit, collisionLayers)
			
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*0.375f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*0.75f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.125f, out hit, collisionLayers)
			//
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.45f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.8f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*2.1f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*2.405f, out hit, collisionLayers)
			&&  !l1SecondBackSurfaceDetectorsHit && !l1SecondBackHit
			&&  l1FirstBackSurfaceDetectorsHit && l1FirstBackHit){
				l1FirstBackTimer += 0.01f;
				if (l1FirstBackTimer > 0.1f || rotTimer > 0){
					l1FirstBackClear = true;
				}
				else {
					l1FirstBackClear = false;
				}
			}
			else {
				l1FirstBackTimer = 0.0f;
				l1FirstBackClear = false;
			}
			//2
			if (!Physics.Linecast(transform.position + posChange1 + upHeight - ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 + minDistFromGroundHeight2 - ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange1 + upHeight - (rightWidth/4) - minDistFromGroundWidth2 - ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 - (rightWidth/4) + minDistFromGroundHeight2 - minDistFromGroundWidth2 - ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange1 + upHeight + (rightWidth/4) + minDistFromGroundWidth2 - ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 + (rightWidth/4) + minDistFromGroundHeight2 + minDistFromGroundWidth2 - ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			
			&&  !Physics.Linecast((transform.position + posChange2 + (transform.position + posChange2 - rightWidth*2.128f - secondSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2)) + upHeight*2.2f + noSurfaceDetectorHeight2, (transform.position + posChange2 + (transform.position + posChange2 - rightWidth*2.128f - secondSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2)) + upHeight*0.3f - noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast((transform.position + posChange2 + (transform.position + posChange2 - rightWidth*2.128f - secondSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2)) + upHeight*0.3f - noSurfaceDetectorHeight2, (transform.position + posChange2 + (transform.position + posChange2 - rightWidth*2.128f - secondSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2)) + upHeight*2.2f + noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 - ledgeSwitchSecondWidthBack + upHeight*2.2f + noSurfaceDetectorHeight2, transform.position + posChange2 - ledgeSwitchSecondWidthBack + upHeight*0.3f - noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 - ledgeSwitchSecondWidthBack + upHeight*0.3f - noSurfaceDetectorHeight2, transform.position + posChange2 - ledgeSwitchSecondWidthBack + upHeight*2.2f + noSurfaceDetectorHeight2, out hit, collisionLayers)
			
			&&  !Physics.Linecast(leftSpace, transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 - ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(leftSpace + ledgeSwitchHeight*0.375f, transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 - ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + ledgeSwitchHeight*0.375f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(leftSpace + ledgeSwitchHeight*0.75f, transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 - ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + ledgeSwitchHeight*0.75f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(leftSpace + ledgeSwitchHeight*1.125f, transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 - ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + ledgeSwitchHeight*1.125f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*0.375f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*0.75f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.125f, out hit, collisionLayers)
			//
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.45f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.8f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*2.1f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*2.405f, out hit, collisionLayers)
			
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*0.375f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*0.75f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.125f, out hit, collisionLayers)
			//
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.45f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.8f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*2.1f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*2.405f, out hit, collisionLayers)
			&&  !l2SecondBackSurfaceDetectorsHit && !l2SecondBackHit
			&&  l2FirstBackSurfaceDetectorsHit && l2FirstBackHit){
				l2FirstBackTimer += 0.01f;
				if (l2FirstBackTimer > 0.1f || rotTimer > 0){
					l2FirstBackClear = true;
				}
				else {
					l2FirstBackClear = false;
				}
			}
			else {
				l2FirstBackTimer = 0.0f;
				l2FirstBackClear = false;
			}
			//3
			if (!Physics.Linecast(transform.position + posChange1 + upHeight - ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 + minDistFromGroundHeight2 - ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange1 + upHeight - (rightWidth/4) - minDistFromGroundWidth2 - ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 - (rightWidth/4) + minDistFromGroundHeight2 - minDistFromGroundWidth2 - ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange1 + upHeight + (rightWidth/4) + minDistFromGroundWidth2 - ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 + (rightWidth/4) + minDistFromGroundHeight2 + minDistFromGroundWidth2 - ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			
			&&  !Physics.Linecast((transform.position + posChange2 + (transform.position + posChange2 - rightWidth*2.128f - thirdSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2)) + upHeight*2.2f + noSurfaceDetectorHeight2, (transform.position + posChange2 + (transform.position + posChange2 - rightWidth*2.128f - thirdSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2)) + upHeight*0.3f - noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast((transform.position + posChange2 + (transform.position + posChange2 - rightWidth*2.128f - thirdSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2)) + upHeight*0.3f - noSurfaceDetectorHeight2, (transform.position + posChange2 + (transform.position + posChange2 - rightWidth*2.128f - thirdSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2)) + upHeight*2.2f + noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 - ledgeSwitchThirdWidthBack + upHeight*2.2f + noSurfaceDetectorHeight2, transform.position + posChange2 - ledgeSwitchThirdWidthBack + upHeight*0.3f - noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 - ledgeSwitchThirdWidthBack + upHeight*0.3f - noSurfaceDetectorHeight2, transform.position + posChange2 - ledgeSwitchThirdWidthBack + upHeight*2.2f + noSurfaceDetectorHeight2, out hit, collisionLayers)
			
			&&  !Physics.Linecast(leftSpace, transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 - ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(leftSpace + ledgeSwitchHeight*0.375f, transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 - ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + ledgeSwitchHeight*0.375f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(leftSpace + ledgeSwitchHeight*0.75f, transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 - ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + ledgeSwitchHeight*0.75f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(leftSpace + ledgeSwitchHeight*1.125f, transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 - ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + ledgeSwitchHeight*1.125f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*0.375f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*0.75f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.125f, out hit, collisionLayers)
			//
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.45f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.8f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*2.1f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*2.405f, out hit, collisionLayers)
			
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*0.375f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*0.75f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.125f, out hit, collisionLayers)
			//
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.45f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.8f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*2.1f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*2.405f, out hit, collisionLayers)
			&&  !l3SecondBackSurfaceDetectorsHit && !l3SecondBackHit
			&&  l3FirstBackSurfaceDetectorsHit && l3FirstBackHit){
				l3FirstBackTimer += 0.01f;
				if (l3FirstBackTimer > 0.1f || rotTimer > 0){
					l3FirstBackClear = true;
				}
				else {
					l3FirstBackClear = false;
				}
			}
			else {
				l3FirstBackTimer = 0.0f;
				l3FirstBackClear = false;
			}
			
		}
	}
	
	void LedgeSwitchingClearSecondBackLeft () {
	
		if (!switching && ledgeSwitchingDetectors.allowLedgeSwitching && grabbedOn){

			//second back detectors
			//1
			if (!Physics.Linecast(transform.position + posChange1 + upHeight - ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 + minDistFromGroundHeight2 - ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange1 + upHeight - (rightWidth/4) - minDistFromGroundWidth2 - ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 - (rightWidth/4) + minDistFromGroundHeight2 - minDistFromGroundWidth2 - ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange1 + upHeight + (rightWidth/4) + minDistFromGroundWidth2 - ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 + (rightWidth/4) + minDistFromGroundHeight2 + minDistFromGroundWidth2 - ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			
			&&  !Physics.Linecast((transform.position + posChange2 + (transform.position + posChange2 - ledgeSwitchFirstNoSurfaceLength/1.75f - rightWidth*2.394f - firstSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2)) + upHeight*2.2f + noSurfaceDetectorHeight2, (transform.position + posChange2 + (transform.position + posChange2 - ledgeSwitchFirstNoSurfaceLength/1.75f - rightWidth*2.394f - firstSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2)) + upHeight*0.3f - noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast((transform.position + posChange2 + (transform.position + posChange2 - ledgeSwitchFirstNoSurfaceLength/1.75f - rightWidth*2.394f - firstSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2)) + upHeight*0.3f - noSurfaceDetectorHeight2, (transform.position + posChange2 + (transform.position + posChange2 - ledgeSwitchFirstNoSurfaceLength/1.75f - rightWidth*2.394f - firstSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2)) + upHeight*2.2f + noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 - ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + upHeight*2.2f + noSurfaceDetectorHeight2, transform.position + posChange2 - ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + upHeight*0.3f - noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 - ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + upHeight*0.3f - noSurfaceDetectorHeight2, transform.position + posChange2 - ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + upHeight*2.2f + noSurfaceDetectorHeight2, out hit, collisionLayers)
			
			&&  !Physics.Linecast(leftSpace, transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 - ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2 + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(leftSpace + ledgeSwitchHeight*0.375f, transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 - ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2 + ledgeSwitchHeight*0.375f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(leftSpace + ledgeSwitchHeight*0.75f, transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 - ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2 + ledgeSwitchHeight*0.75f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(leftSpace + ledgeSwitchHeight*1.125f, transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 - ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2 + ledgeSwitchHeight*1.125f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*0.375f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*0.75f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.125f, out hit, collisionLayers)
			//
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.45f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.8f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*2.1f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*2.405f, out hit, collisionLayers)
			
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*0.375f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*0.75f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.125f, out hit, collisionLayers)
			//
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.45f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*1.8f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*2.1f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/0.875f - ledgeSwitchFirstWidthBack + ledgeSwitchHeight*2.405f, out hit, collisionLayers)
			&&  !l1ThirdBackSurfaceDetectorsHit && !l1ThirdBackHit
			&&  l1SecondBackSurfaceDetectorsHit && l1SecondBackHit){
				l1SecondBackTimer += 0.01f;
				if (l1SecondBackTimer > 0.1f || rotTimer > 0){
					l1SecondBackClear = true;
				}
				else {
					l1SecondBackClear = false;
				}
			}
			else {
				l1SecondBackTimer = 0.0f;
				l1SecondBackClear = false;
			}
			//2
			if (!Physics.Linecast(transform.position + posChange1 + upHeight - ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 + minDistFromGroundHeight2 - ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange1 + upHeight - (rightWidth/4) - minDistFromGroundWidth2 - ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 - (rightWidth/4) + minDistFromGroundHeight2 - minDistFromGroundWidth2 - ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange1 + upHeight + (rightWidth/4) + minDistFromGroundWidth2 - ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 + (rightWidth/4) + minDistFromGroundHeight2 + minDistFromGroundWidth2 - ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			
			&&  !Physics.Linecast((transform.position + posChange2 + (transform.position + posChange2 - ledgeSwitchSecondNoSurfaceLength/1.75f - rightWidth*2.394f - secondSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2)) + upHeight*2.2f + noSurfaceDetectorHeight2, (transform.position + posChange2 + (transform.position + posChange2 - ledgeSwitchSecondNoSurfaceLength/1.75f - rightWidth*2.394f - secondSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2)) + upHeight*0.3f - noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast((transform.position + posChange2 + (transform.position + posChange2 - ledgeSwitchSecondNoSurfaceLength/1.75f - rightWidth*2.394f - secondSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2)) + upHeight*0.3f - noSurfaceDetectorHeight2, (transform.position + posChange2 + (transform.position + posChange2 - ledgeSwitchSecondNoSurfaceLength/1.75f - rightWidth*2.394f - secondSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2)) + upHeight*2.2f + noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 - ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + upHeight*2.2f + noSurfaceDetectorHeight2, transform.position + posChange2 - ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + upHeight*0.3f - noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 - ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + upHeight*0.3f - noSurfaceDetectorHeight2, transform.position + posChange2 - ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + upHeight*2.2f + noSurfaceDetectorHeight2, out hit, collisionLayers)
			
			&&  !Physics.Linecast(leftSpace, transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 - ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2 + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(leftSpace + ledgeSwitchHeight*0.375f, transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 - ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2 + ledgeSwitchHeight*0.375f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(leftSpace + ledgeSwitchHeight*0.75f, transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 - ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2 + ledgeSwitchHeight*0.75f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(leftSpace + ledgeSwitchHeight*1.125f, transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 - ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2 + ledgeSwitchHeight*1.125f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*0.375f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*0.75f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.125f, out hit, collisionLayers)
			//
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.45f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.8f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*2.1f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*2.405f, out hit, collisionLayers)
			
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*0.375f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*0.75f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.125f, out hit, collisionLayers)
			//
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.45f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*1.8f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*2.1f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/0.875f - ledgeSwitchSecondWidthBack + ledgeSwitchHeight*2.405f, out hit, collisionLayers)
			&&  !l2ThirdBackSurfaceDetectorsHit && !l2ThirdBackHit
			&&  l2SecondBackSurfaceDetectorsHit && l2SecondBackHit){
				l2SecondBackTimer += 0.01f;
				if (l2SecondBackTimer > 0.1f || rotTimer > 0){
					l2SecondBackClear = true;
				}
				else {
					l2SecondBackClear = false;
				}
			}
			else {
				l2SecondBackTimer = 0.0f;
				l2SecondBackClear = false;
			}
			//3
			if (!Physics.Linecast(transform.position + posChange1 + upHeight - ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 + minDistFromGroundHeight2 - ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange1 + upHeight - (rightWidth/4) - minDistFromGroundWidth2 - ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 - (rightWidth/4) + minDistFromGroundHeight2 - minDistFromGroundWidth2 - ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange1 + upHeight + (rightWidth/4) + minDistFromGroundWidth2 - ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 + (rightWidth/4) + minDistFromGroundHeight2 + minDistFromGroundWidth2 - ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			
			&&  !Physics.Linecast((transform.position + posChange2 + (transform.position + posChange2 - ledgeSwitchThirdNoSurfaceLength/1.75f - rightWidth*2.394f - thirdSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2)) + upHeight*2.2f + noSurfaceDetectorHeight2, (transform.position + posChange2 + (transform.position + posChange2 - ledgeSwitchThirdNoSurfaceLength/1.75f - rightWidth*2.394f - thirdSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2)) + upHeight*0.3f - noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast((transform.position + posChange2 + (transform.position + posChange2 - ledgeSwitchThirdNoSurfaceLength/1.75f - rightWidth*2.394f - thirdSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2)) + upHeight*0.3f - noSurfaceDetectorHeight2, (transform.position + posChange2 + (transform.position + posChange2 - ledgeSwitchThirdNoSurfaceLength/1.75f - rightWidth*2.394f - thirdSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2)) + upHeight*2.2f + noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 - ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + upHeight*2.2f + noSurfaceDetectorHeight2, transform.position + posChange2 - ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + upHeight*0.3f - noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 - ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + upHeight*0.3f - noSurfaceDetectorHeight2, transform.position + posChange2 - ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + upHeight*2.2f + noSurfaceDetectorHeight2, out hit, collisionLayers)
			
			&&  !Physics.Linecast(leftSpace, transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 - ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2 + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(leftSpace + ledgeSwitchHeight*0.375f, transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 - ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2 + ledgeSwitchHeight*0.375f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(leftSpace + ledgeSwitchHeight*0.75f, transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 - ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2 + ledgeSwitchHeight*0.75f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(leftSpace + ledgeSwitchHeight*1.125f, transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 - ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2 + ledgeSwitchHeight*1.125f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*0.375f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*0.75f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.125f, out hit, collisionLayers)
			//
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.45f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.8f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*2.1f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*2.405f, out hit, collisionLayers)
			
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*0.375f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*0.75f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.125f, out hit, collisionLayers)
			//
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.45f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.8f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*2.1f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*2.405f, out hit, collisionLayers)
			&&  !l3ThirdBackSurfaceDetectorsHit && !l3ThirdBackHit
			&&  l3SecondBackSurfaceDetectorsHit && l3SecondBackHit){
				l3SecondBackTimer += 0.01f;
				if (l3SecondBackTimer > 0.1f || rotTimer > 0){
					l3SecondBackClear = true;
				}
				else {
					l3SecondBackClear = false;
				}
			}
			else {
				l3SecondBackTimer = 0.0f;
				l3SecondBackClear = false;
			}
		}
	}
	
	
	void LedgeSwitchingClearSecondFrontRight () {
		
		if (!switching && ledgeSwitchingDetectors.allowLedgeSwitching && grabbedOn){
			
			//right
			
			//Determining if point on the right is clear to go to (the first 3 linecasts are bottom detectors, the 4th, 5th, 6th, and 7th are no surface detectors, and the 8th, 9th, 10, and 11th are space needed detectors that go from position to the surface detector,
			//the 12th, 13th, 14th, and 15th point directly forward to detect walls in front of the bottom half of the player, the 16th, 17th, 18th, and 19th point directly forward to detect walls in front of the top half of the player, the 4 after that start in front of the bottom half of the player and point directly back to detect walls,
			//and the last 4 linecasts start in front of the top half of the player and point directly back to detect walls as well)
			
			//second forward detectors
			//1
			if (!Physics.Linecast(transform.position + posChange1 + upHeight + ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 + minDistFromGroundHeight2 + ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange1 + upHeight - (rightWidth/4) - minDistFromGroundWidth2 + ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 - (rightWidth/4) + minDistFromGroundHeight2 - minDistFromGroundWidth2 + ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange1 + upHeight + (rightWidth/4) + minDistFromGroundWidth2 + ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 + (rightWidth/4) + minDistFromGroundHeight2 + minDistFromGroundWidth2 + ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			
			&&  !Physics.Linecast((transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/0.585f + rightWidth*1.33f + firstSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2)) + upHeight*2.2f + noSurfaceDetectorHeight2, (transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/0.585f + rightWidth*1.33f + firstSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2)) + upHeight*0.3f - noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast((transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/0.585f + rightWidth*1.33f + firstSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2)) + upHeight*0.3f - noSurfaceDetectorHeight2, (transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/0.585f + rightWidth*1.33f + firstSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2)) + upHeight*2.2f + noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/0.585f + ledgeSwitchFirstWidthForward + upHeight*2.2f + noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/0.585f + ledgeSwitchFirstWidthForward + upHeight*0.3f - noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/0.585f + ledgeSwitchFirstWidthForward + upHeight*0.3f - noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/0.585f + ledgeSwitchFirstWidthForward + upHeight*2.2f + noSurfaceDetectorHeight2, out hit, collisionLayers)
			
			&&  !Physics.Linecast(rightSpace, transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2 + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(rightSpace + ledgeSwitchHeight*0.375f, transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2 + ledgeSwitchHeight*0.375f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(rightSpace + ledgeSwitchHeight*0.75f, transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2 + ledgeSwitchHeight*0.75f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(rightSpace + ledgeSwitchHeight*1.125f, transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2 + ledgeSwitchHeight*1.125f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.585f + ledgeSwitchFirstWidthForward, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.585f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*0.375f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.585f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*0.75f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.585f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.125f, out hit, collisionLayers)
			//
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.585f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.45f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.585f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.8f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.585f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*2.1f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.585f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*2.405f, out hit, collisionLayers)
			
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.585f + ledgeSwitchFirstWidthForward, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.585f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*0.375f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.585f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*0.75f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.585f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.125f, out hit, collisionLayers)
			//
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.585f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.45f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.585f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.8f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.585f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*2.1f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.585f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*2.405f, out hit, collisionLayers)
			&&  !r1FirstForwardSurfaceDetectorsHit && !r1FirstForwardHit
			&&  r1SecondForwardHit){
				r1SecondForwardTimer += 0.01f;
				if (r1SecondForwardTimer > 0.1f || rotTimer > 0){
					r1SecondForwardClear = true;
				}
				else {
					r1SecondForwardClear = false;
				}
			}
			else {
				r1SecondForwardTimer = 0.0f;
				r1SecondForwardClear = false;
			}
			//2
			if (!Physics.Linecast(transform.position + posChange1 + upHeight + ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 + minDistFromGroundHeight2 + ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange1 + upHeight - (rightWidth/4) - minDistFromGroundWidth2 + ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 - (rightWidth/4) + minDistFromGroundHeight2 - minDistFromGroundWidth2 + ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange1 + upHeight + (rightWidth/4) + minDistFromGroundWidth2 + ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 + (rightWidth/4) + minDistFromGroundHeight2 + minDistFromGroundWidth2 + ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			
			&&  !Physics.Linecast((transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/0.585f + rightWidth*1.33f + secondSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2)) + upHeight*2.2f + noSurfaceDetectorHeight2, (transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/0.585f + rightWidth*1.33f + secondSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2)) + upHeight*0.3f - noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast((transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/0.585f + rightWidth*1.33f + secondSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2)) + upHeight*0.3f - noSurfaceDetectorHeight2, (transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/0.585f + rightWidth*1.33f + secondSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2)) + upHeight*2.2f + noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/0.585f + ledgeSwitchSecondWidthForward + upHeight*2.2f + noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/0.585f + ledgeSwitchSecondWidthForward + upHeight*0.3f - noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/0.585f + ledgeSwitchSecondWidthForward + upHeight*0.3f - noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/0.585f + ledgeSwitchSecondWidthForward + upHeight*2.2f + noSurfaceDetectorHeight2, out hit, collisionLayers)
			
			&&  !Physics.Linecast(rightSpace, transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2 + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(rightSpace + ledgeSwitchHeight*0.375f, transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2 + ledgeSwitchHeight*0.375f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(rightSpace + ledgeSwitchHeight*0.75f, transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2 + ledgeSwitchHeight*0.75f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(rightSpace + ledgeSwitchHeight*1.125f, transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2 + ledgeSwitchHeight*1.125f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.585f + ledgeSwitchSecondWidthForward, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.585f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*0.375f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.585f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*0.75f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.585f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.125f, out hit, collisionLayers)
			//
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.585f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.45f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.585f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.8f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.585f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*2.1f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.585f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*2.405f, out hit, collisionLayers)
			
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.585f + ledgeSwitchSecondWidthForward, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.585f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*0.375f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.585f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*0.75f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.585f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.125f, out hit, collisionLayers)
			//
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.585f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.45f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.585f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.8f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.585f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*2.1f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.585f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*2.405f, out hit, collisionLayers)
			&&  !r2FirstForwardSurfaceDetectorsHit && !r2FirstForwardHit
			&&  r2SecondForwardHit){
				r2SecondForwardTimer += 0.01f;
				if (r2SecondForwardTimer > 0.1f || rotTimer > 0){
					r2SecondForwardClear = true;
				}
				else {
					r2SecondForwardClear = false;
				}
			}
			else {
				r2SecondForwardTimer = 0.0f;
				r2SecondForwardClear = false;
			}
			//3
			if (!Physics.Linecast(transform.position + posChange1 + upHeight + ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 + minDistFromGroundHeight2 + ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange1 + upHeight - (rightWidth/4) - minDistFromGroundWidth2 + ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 - (rightWidth/4) + minDistFromGroundHeight2 - minDistFromGroundWidth2 + ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange1 + upHeight + (rightWidth/4) + minDistFromGroundWidth2 + ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 + (rightWidth/4) + minDistFromGroundHeight2 + minDistFromGroundWidth2 + ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			
			&&  !Physics.Linecast((transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/0.585f + rightWidth*1.33f + thirdSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2)) + upHeight*2.2f + noSurfaceDetectorHeight2, (transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/0.585f + rightWidth*1.33f + thirdSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2)) + upHeight*0.3f - noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast((transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/0.585f + rightWidth*1.33f + thirdSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2)) + upHeight*0.3f - noSurfaceDetectorHeight2, (transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/0.585f + rightWidth*1.33f + thirdSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2)) + upHeight*2.2f + noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/0.585f + ledgeSwitchThirdWidthForward + upHeight*2.2f + noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/0.585f + ledgeSwitchThirdWidthForward + upHeight*0.3f - noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/0.585f + ledgeSwitchThirdWidthForward + upHeight*0.3f - noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/0.585f + ledgeSwitchThirdWidthForward + upHeight*2.2f + noSurfaceDetectorHeight2, out hit, collisionLayers)
			
			&&  !Physics.Linecast(rightSpace, transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2 + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(rightSpace + ledgeSwitchHeight*0.375f, transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2 + ledgeSwitchHeight*0.375f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(rightSpace + ledgeSwitchHeight*0.75f, transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2 + ledgeSwitchHeight*0.75f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(rightSpace + ledgeSwitchHeight*1.125f, transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2 + ledgeSwitchHeight*1.125f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*0.375f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*0.75f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.125f, out hit, collisionLayers)
			//
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.45f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.8f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*2.1f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*2.405f, out hit, collisionLayers)
			
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*0.375f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*0.75f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.125f, out hit, collisionLayers)
			//
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.45f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*1.8f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*2.1f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/1.75f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f - ledgeSwitchThirdWidthBack + ledgeSwitchHeight*2.405f, out hit, collisionLayers)
			&&  !r3FirstForwardSurfaceDetectorsHit && !r3FirstForwardHit
			&&  r3SecondForwardHit){
				r3SecondForwardTimer += 0.01f;
				if (r3SecondForwardTimer > 0.1f || rotTimer > 0){
					r3SecondForwardClear = true;
				}
				else {
					r3SecondForwardClear = false;
				}
			}
			else {
				r3SecondForwardTimer = 0.0f;
				r3SecondForwardClear = false;
			}
			
		}
	}
	
	void LedgeSwitchingClearFirstFrontRight () {
		
		if (!switching && ledgeSwitchingDetectors.allowLedgeSwitching && grabbedOn){
			
			//first forward detectors
			//1
			if (!Physics.Linecast(transform.position + posChange1 + upHeight + ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 + minDistFromGroundHeight2 + ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange1 + upHeight - (rightWidth/4) - minDistFromGroundWidth2 + ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 - (rightWidth/4) + minDistFromGroundHeight2 - minDistFromGroundWidth2 + ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange1 + upHeight + (rightWidth/4) + minDistFromGroundWidth2 + ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 + (rightWidth/4) + minDistFromGroundHeight2 + minDistFromGroundWidth2 + ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			
			&&  !Physics.Linecast((transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/0.875f + rightWidth*1.596f + firstSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2)) + upHeight*2.2f + noSurfaceDetectorHeight2, (transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/0.875f + rightWidth*1.596f + firstSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2)) + upHeight*0.3f - noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast((transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/0.875f + rightWidth*1.596f + firstSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2)) + upHeight*0.3f - noSurfaceDetectorHeight2, (transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/0.875f + rightWidth*1.596f + firstSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2)) + upHeight*2.2f + noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + upHeight*2.2f + noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + upHeight*0.3f - noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + upHeight*0.3f - noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + upHeight*2.2f + noSurfaceDetectorHeight2, out hit, collisionLayers)
			
			&&  !Physics.Linecast(rightSpace, transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(rightSpace + ledgeSwitchHeight*0.375f, transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + ledgeSwitchHeight*0.375f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(rightSpace + ledgeSwitchHeight*0.75f, transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + ledgeSwitchHeight*0.75f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(rightSpace + ledgeSwitchHeight*1.125f, transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + ledgeSwitchHeight*1.125f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstWidthForward, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*0.375f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*0.75f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.125f, out hit, collisionLayers)
			//
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.45f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.8f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*2.1f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*2.405f, out hit, collisionLayers)
			
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstWidthForward, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*0.375f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*0.75f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.125f, out hit, collisionLayers)
			//
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.45f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.8f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*2.1f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*2.405f, out hit, collisionLayers)
			&&  !r1MiddleSurfaceDetectorsHit && !r1MiddleHit
			&&  r1FirstForwardSurfaceDetectorsHit && r1FirstForwardHit){
				r1FirstForwardTimer += 0.01f;
				if (r1FirstForwardTimer > 0.1f || rotTimer > 0){
					r1FirstForwardClear = true;
				}
				else {
					r1FirstForwardClear = false;
				}
			}
			else {
				r1FirstForwardTimer = 0.0f;
				r1FirstForwardClear = false;
			}
			//2
			if (!Physics.Linecast(transform.position + posChange1 + upHeight + ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 + minDistFromGroundHeight2 + ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange1 + upHeight - (rightWidth/4) - minDistFromGroundWidth2 + ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 - (rightWidth/4) + minDistFromGroundHeight2 - minDistFromGroundWidth2 + ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange1 + upHeight + (rightWidth/4) + minDistFromGroundWidth2 + ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 + (rightWidth/4) + minDistFromGroundHeight2 + minDistFromGroundWidth2 + ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			
			&&  !Physics.Linecast((transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/0.875f + rightWidth*1.596f + secondSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2)) + upHeight*2.2f + noSurfaceDetectorHeight2, (transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/0.875f + rightWidth*1.596f + secondSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2)) + upHeight*0.3f - noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast((transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/0.875f + rightWidth*1.596f + secondSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2)) + upHeight*0.3f - noSurfaceDetectorHeight2, (transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/0.875f + rightWidth*1.596f + secondSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2)) + upHeight*2.2f + noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + upHeight*2.2f + noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + upHeight*0.3f - noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + upHeight*0.3f - noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + upHeight*2.2f + noSurfaceDetectorHeight2, out hit, collisionLayers)
			
			&&  !Physics.Linecast(rightSpace, transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(rightSpace + ledgeSwitchHeight*0.375f, transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + ledgeSwitchHeight*0.375f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(rightSpace + ledgeSwitchHeight*0.75f, transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + ledgeSwitchHeight*0.75f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(rightSpace + ledgeSwitchHeight*1.125f, transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + ledgeSwitchHeight*1.125f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondWidthForward, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*0.375f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*0.75f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.125f, out hit, collisionLayers)
			//
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.45f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.8f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*2.1f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*2.405f, out hit, collisionLayers)
			
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondWidthForward, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*0.375f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*0.75f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.125f, out hit, collisionLayers)
			//
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.45f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.8f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*2.1f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*2.405f, out hit, collisionLayers)
			&&  !r2MiddleSurfaceDetectorsHit && !r2MiddleHit
			&&  r2FirstForwardSurfaceDetectorsHit && r2FirstForwardHit){
				r2FirstForwardTimer += 0.01f;
				if (r2FirstForwardTimer > 0.1f || rotTimer > 0){
					r2FirstForwardClear = true;
				}
				else {
					r2FirstForwardClear = false;
				}
			}
			else {
				r2FirstForwardTimer = 0.0f;
				r2FirstForwardClear = false;
			}
			//3
			if (!Physics.Linecast(transform.position + posChange1 + upHeight + ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 + minDistFromGroundHeight2 + ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange1 + upHeight - (rightWidth/4) - minDistFromGroundWidth2 + ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 - (rightWidth/4) + minDistFromGroundHeight2 - minDistFromGroundWidth2 + ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange1 + upHeight + (rightWidth/4) + minDistFromGroundWidth2 + ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 + (rightWidth/4) + minDistFromGroundHeight2 + minDistFromGroundWidth2 + ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			
			&&  !Physics.Linecast((transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/0.875f + rightWidth*1.596f + thirdSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2)) + upHeight*2.2f + noSurfaceDetectorHeight2, (transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/0.875f + rightWidth*1.596f + thirdSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2)) + upHeight*0.3f - noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast((transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/0.875f + rightWidth*1.596f + thirdSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2)) + upHeight*0.3f - noSurfaceDetectorHeight2, (transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/0.875f + rightWidth*1.596f + thirdSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2)) + upHeight*2.2f + noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward + upHeight*2.2f + noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward + upHeight*0.3f - noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward + upHeight*0.3f - noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward + upHeight*2.2f + noSurfaceDetectorHeight2, out hit, collisionLayers)
			
			&&  !Physics.Linecast(rightSpace, transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(rightSpace + ledgeSwitchHeight*0.375f, transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + ledgeSwitchHeight*0.375f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(rightSpace + ledgeSwitchHeight*0.75f, transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + ledgeSwitchHeight*0.75f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(rightSpace + ledgeSwitchHeight*1.125f, transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + ledgeSwitchHeight*1.125f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdWidthForward, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*0.375f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*0.75f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.125f, out hit, collisionLayers)
			//
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.45f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.8f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*2.1f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*2.405f, out hit, collisionLayers)
			
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdWidthForward, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*0.375f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*0.75f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.125f, out hit, collisionLayers)
			//
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.45f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.8f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*2.1f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*2.405f, out hit, collisionLayers)
			&&  !r3MiddleSurfaceDetectorsHit && !r3MiddleHit
			&&  r3FirstForwardSurfaceDetectorsHit && r3FirstForwardHit){
				r3FirstForwardTimer += 0.01f;
				if (r3FirstForwardTimer > 0.1f || rotTimer > 0){
					r3FirstForwardClear = true;
				}
				else {
					r3FirstForwardClear = false;
				}
			}
			else {
				r3FirstForwardTimer = 0.0f;
				r3FirstForwardClear = false;
			}
			
		}
	}
	
	void LedgeSwitchingClearMiddleRight () {
		
		if (!switching && ledgeSwitchingDetectors.allowLedgeSwitching && grabbedOn){
			
			//middle detectors
			//1
			if (!Physics.Linecast(transform.position + posChange1 + upHeight + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 + minDistFromGroundHeight2 + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange1 + upHeight - (rightWidth/4) - minDistFromGroundWidth2 + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 - (rightWidth/4) + minDistFromGroundHeight2 - minDistFromGroundWidth2 + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange1 + upHeight + (rightWidth/4) + minDistFromGroundWidth2 + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 + (rightWidth/4) + minDistFromGroundHeight2 + minDistFromGroundWidth2 + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			
			&&  !Physics.Linecast((transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/1.75f + rightWidth*1.862f + firstSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2)) + upHeight*2.2f + noSurfaceDetectorHeight2, (transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/1.75f + rightWidth*1.862f + firstSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2)) + upHeight*0.3f - noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast((transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/1.75f + rightWidth*1.862f + firstSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2)) + upHeight*0.3f - noSurfaceDetectorHeight2, (transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/1.75f + rightWidth*1.862f + firstSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2)) + upHeight*2.2f + noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + upHeight*2.2f + noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + upHeight*0.3f - noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + upHeight*0.3f - noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + upHeight*2.2f + noSurfaceDetectorHeight2, out hit, collisionLayers)
			
			&&  !Physics.Linecast(rightSpace, transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + rightWidth*2 + surfaceDetectorWidth2 + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(rightSpace + ledgeSwitchHeight*0.375f, transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + rightWidth*2 + surfaceDetectorWidth2 + ledgeSwitchHeight*0.375f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(rightSpace + ledgeSwitchHeight*0.75f, transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + rightWidth*2 + surfaceDetectorWidth2 + ledgeSwitchHeight*0.75f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(rightSpace + ledgeSwitchHeight*1.125f, transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + rightWidth*2 + surfaceDetectorWidth2 + ledgeSwitchHeight*1.125f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstWidthForward, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*0.375f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*0.75f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.125f, out hit, collisionLayers)
			//
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.45f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.8f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*2.1f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*2.405f, out hit, collisionLayers)
			
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstWidthForward, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*0.375f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*0.75f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.125f, out hit, collisionLayers)
			//
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.45f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.8f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*2.1f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*2.405f, out hit, collisionLayers)
			&&  !r1FirstBackSurfaceDetectorsHit && !r1FirstBackHit
			&&  r1MiddleSurfaceDetectorsHit && r1MiddleHit){
				r1MiddleTimer += 0.01f;
				if (r1MiddleTimer > 0.1f || rotTimer > 0){
					r1MiddleClear = true;
				}
				else {
					r1MiddleClear = false;
				}
			}
			else {
				r1MiddleTimer = 0.0f;
				r1MiddleClear = false;
			}
			//2
			if (!Physics.Linecast(transform.position + posChange1 + upHeight + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 + minDistFromGroundHeight2 + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange1 + upHeight - (rightWidth/4) - minDistFromGroundWidth2 + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 - (rightWidth/4) + minDistFromGroundHeight2 - minDistFromGroundWidth2 + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange1 + upHeight + (rightWidth/4) + minDistFromGroundWidth2 + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 + (rightWidth/4) + minDistFromGroundHeight2 + minDistFromGroundWidth2 + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			
			&&  !Physics.Linecast((transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/1.75f + rightWidth*1.862f + secondSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2)) + upHeight*2.2f + noSurfaceDetectorHeight2, (transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/1.75f + rightWidth*1.862f + secondSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2)) + upHeight*0.3f - noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast((transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/1.75f + rightWidth*1.862f + secondSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2)) + upHeight*0.3f - noSurfaceDetectorHeight2, (transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/1.75f + rightWidth*1.862f + secondSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2)) + upHeight*2.2f + noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + upHeight*2.2f + noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + upHeight*0.3f - noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + upHeight*0.3f - noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + upHeight*2.2f + noSurfaceDetectorHeight2, out hit, collisionLayers)
			
			&&  !Physics.Linecast(rightSpace, transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + rightWidth*2 + surfaceDetectorWidth2 + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(rightSpace + ledgeSwitchHeight*0.375f, transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + rightWidth*2 + surfaceDetectorWidth2 + ledgeSwitchHeight*0.375f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(rightSpace + ledgeSwitchHeight*0.75f, transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + rightWidth*2 + surfaceDetectorWidth2 + ledgeSwitchHeight*0.75f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(rightSpace + ledgeSwitchHeight*1.125f, transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + rightWidth*2 + surfaceDetectorWidth2 + ledgeSwitchHeight*1.125f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondWidthForward, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*0.375f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*0.75f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.125f, out hit, collisionLayers)
			//
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.45f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.8f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*2.1f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*2.405f, out hit, collisionLayers)
			
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondWidthForward, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*0.375f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*0.75f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.125f, out hit, collisionLayers)
			//
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.45f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.8f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*2.1f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*2.405f, out hit, collisionLayers)
			&&  !r2FirstBackSurfaceDetectorsHit && !r2FirstBackHit
			&&  r2MiddleSurfaceDetectorsHit && r2MiddleHit){
				r2MiddleTimer += 0.01f;
				if (r2MiddleTimer > 0.1f || rotTimer > 0){
					r2MiddleClear = true;
				}
				else {
					r2MiddleClear = false;
				}
			}
			else {
				r2MiddleTimer = 0.0f;
				r2MiddleClear = false;
			}
			//3
			if (!Physics.Linecast(transform.position + posChange1 + upHeight + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 + minDistFromGroundHeight2 + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange1 + upHeight - (rightWidth/4) - minDistFromGroundWidth2 + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 - (rightWidth/4) + minDistFromGroundHeight2 - minDistFromGroundWidth2 + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange1 + upHeight + (rightWidth/4) + minDistFromGroundWidth2 + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 + (rightWidth/4) + minDistFromGroundHeight2 + minDistFromGroundWidth2 + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			
			&&  !Physics.Linecast((transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/1.75f + rightWidth*1.862f + thirdSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2)) + upHeight*2.2f + noSurfaceDetectorHeight2, (transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/1.75f + rightWidth*1.862f + thirdSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2)) + upHeight*0.3f - noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast((transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/1.75f + rightWidth*1.862f + thirdSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2)) + upHeight*0.3f - noSurfaceDetectorHeight2, (transform.position + posChange2 + (transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/1.75f + rightWidth*1.862f + thirdSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2)) + upHeight*2.2f + noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + upHeight*2.2f + noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + upHeight*0.3f - noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + upHeight*0.3f - noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + upHeight*2.2f + noSurfaceDetectorHeight2, out hit, collisionLayers)
			
			&&  !Physics.Linecast(rightSpace, transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + rightWidth*2 + surfaceDetectorWidth2 + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(rightSpace + ledgeSwitchHeight*0.375f, transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + rightWidth*2 + surfaceDetectorWidth2 + ledgeSwitchHeight*0.375f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(rightSpace + ledgeSwitchHeight*0.75f, transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + rightWidth*2 + surfaceDetectorWidth2 + ledgeSwitchHeight*0.75f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(rightSpace + ledgeSwitchHeight*1.125f, transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + rightWidth*2 + surfaceDetectorWidth2 + ledgeSwitchHeight*1.125f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdWidthForward, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*0.375f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*0.75f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.125f, out hit, collisionLayers)
			//
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.45f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.8f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*2.1f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*2.405f, out hit, collisionLayers)
			
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdWidthForward, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*0.375f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*0.75f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.125f, out hit, collisionLayers)
			//
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.45f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.8f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*2.1f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*2.405f, out hit, collisionLayers)
			&&  !r3FirstBackSurfaceDetectorsHit && !r3FirstBackHit
			&&  r3MiddleSurfaceDetectorsHit && r3MiddleHit){
				r3MiddleTimer += 0.01f;
				if (r3MiddleTimer > 0.1f || rotTimer > 0){
					r3MiddleClear = true;
				}
				else {
					r3MiddleClear = false;
				}
			}
			else {
				r3MiddleTimer = 0.0f;
				r3MiddleClear = false;
			}
			
		}
	}
	
	
	void LedgeSwitchingClearFirstBackRight () {
		
		if (!switching && ledgeSwitchingDetectors.allowLedgeSwitching && grabbedOn){
	
			//first back detectors
			//1
			if (!Physics.Linecast(transform.position + posChange1 + upHeight - ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 + minDistFromGroundHeight2 - ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange1 + upHeight - (rightWidth/4) - minDistFromGroundWidth2 - ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 - (rightWidth/4) + minDistFromGroundHeight2 - minDistFromGroundWidth2 - ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange1 + upHeight + (rightWidth/4) + minDistFromGroundWidth2 - ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 + (rightWidth/4) + minDistFromGroundHeight2 + minDistFromGroundWidth2 - ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			
			&&  !Physics.Linecast((transform.position + posChange2 + (transform.position + posChange2 + rightWidth*2.128f + firstSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2)) + upHeight*2.2f + noSurfaceDetectorHeight2, (transform.position + posChange2 + (transform.position + posChange2 + rightWidth*2.128f + firstSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2)) + upHeight*0.3f - noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast((transform.position + posChange2 + (transform.position + posChange2 + rightWidth*2.128f + firstSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2)) + upHeight*0.3f - noSurfaceDetectorHeight2, (transform.position + posChange2 + (transform.position + posChange2 + rightWidth*2.128f + firstSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2)) + upHeight*2.2f + noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + ledgeSwitchFirstWidthForward + upHeight*2.2f + noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchFirstWidthForward + upHeight*0.3f - noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + ledgeSwitchFirstWidthForward + upHeight*0.3f - noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchFirstWidthForward + upHeight*2.2f + noSurfaceDetectorHeight2, out hit, collisionLayers)
			
			&&  !Physics.Linecast(rightSpace, transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 - ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(rightSpace + ledgeSwitchHeight*0.375f, transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 - ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + ledgeSwitchHeight*0.375f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(rightSpace + ledgeSwitchHeight*0.75f, transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 - ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + ledgeSwitchHeight*0.75f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(rightSpace + ledgeSwitchHeight*1.125f, transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 - ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + ledgeSwitchHeight*1.125f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*0.375f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*0.75f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.125f, out hit, collisionLayers)
			//
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.45f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.8f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*2.1f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*2.405f, out hit, collisionLayers)
			
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*0.375f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*0.75f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.125f, out hit, collisionLayers)
			//
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.45f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.8f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*2.1f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*2.405f, out hit, collisionLayers)
			&&  !r1SecondBackSurfaceDetectorsHit && !r1SecondBackHit
			&&  r1FirstBackSurfaceDetectorsHit && r1FirstBackHit){
				r1FirstBackTimer += 0.01f;
				if (r1FirstBackTimer > 0.1f || rotTimer > 0){
					r1FirstBackClear = true;
				}
				else {
					r1FirstBackClear = false;
				}
			}
			else {
				r1FirstBackTimer = 0.0f;
				r1FirstBackClear = false;
			}
			//2
			if (!Physics.Linecast(transform.position + posChange1 + upHeight - ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 + minDistFromGroundHeight2 - ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange1 + upHeight - (rightWidth/4) - minDistFromGroundWidth2 - ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 - (rightWidth/4) + minDistFromGroundHeight2 - minDistFromGroundWidth2 - ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange1 + upHeight + (rightWidth/4) + minDistFromGroundWidth2 - ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 + (rightWidth/4) + minDistFromGroundHeight2 + minDistFromGroundWidth2 - ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			
			&&  !Physics.Linecast((transform.position + posChange2 + (transform.position + posChange2 + rightWidth*2.128f + secondSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2)) + upHeight*2.2f + noSurfaceDetectorHeight2, (transform.position + posChange2 + (transform.position + posChange2 + rightWidth*2.128f + secondSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2)) + upHeight*0.3f - noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast((transform.position + posChange2 + (transform.position + posChange2 + rightWidth*2.128f + secondSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2)) + upHeight*0.3f - noSurfaceDetectorHeight2, (transform.position + posChange2 + (transform.position + posChange2 + rightWidth*2.128f + secondSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2)) + upHeight*2.2f + noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + ledgeSwitchSecondWidthForward + upHeight*2.2f + noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchSecondWidthForward + upHeight*0.3f - noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + ledgeSwitchSecondWidthForward + upHeight*0.3f - noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchSecondWidthForward + upHeight*2.2f + noSurfaceDetectorHeight2, out hit, collisionLayers)
			
			&&  !Physics.Linecast(rightSpace, transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 - ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(rightSpace + ledgeSwitchHeight*0.375f, transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 - ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + ledgeSwitchHeight*0.375f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(rightSpace + ledgeSwitchHeight*0.75f, transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 - ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + ledgeSwitchHeight*0.75f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(rightSpace + ledgeSwitchHeight*1.125f, transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 - ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + ledgeSwitchHeight*1.125f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*0.375f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*0.75f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.125f, out hit, collisionLayers)
			//
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.45f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.8f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*2.1f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*2.405f, out hit, collisionLayers)
			
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*0.375f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*0.75f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.125f, out hit, collisionLayers)
			//
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.45f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.8f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*2.1f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*2.405f, out hit, collisionLayers)
			&&  !r2SecondBackSurfaceDetectorsHit && !r2SecondBackHit
			&&  r2FirstBackSurfaceDetectorsHit && r2FirstBackHit){
				r2FirstBackTimer += 0.01f;
				if (r2FirstBackTimer > 0.1f || rotTimer > 0){
					r2FirstBackClear = true;
				}
				else {
					r2FirstBackClear = false;
				}
			}
			else {
				r2FirstBackTimer = 0.0f;
				r2FirstBackClear = false;
			}
			//3
			if (!Physics.Linecast(transform.position + posChange1 + upHeight - ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 + minDistFromGroundHeight2 - ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange1 + upHeight - (rightWidth/4) - minDistFromGroundWidth2 - ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 - (rightWidth/4) + minDistFromGroundHeight2 - minDistFromGroundWidth2 - ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange1 + upHeight + (rightWidth/4) + minDistFromGroundWidth2 - ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 + (rightWidth/4) + minDistFromGroundHeight2 + minDistFromGroundWidth2 - ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			
			&&  !Physics.Linecast((transform.position + posChange2 + (transform.position + posChange2 + rightWidth*2.128f + thirdSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2)) + upHeight*2.2f + noSurfaceDetectorHeight2, (transform.position + posChange2 + (transform.position + posChange2 + rightWidth*2.128f + thirdSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2)) + upHeight*0.3f - noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast((transform.position + posChange2 + (transform.position + posChange2 + rightWidth*2.128f + thirdSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2)) + upHeight*0.3f - noSurfaceDetectorHeight2, (transform.position + posChange2 + (transform.position + posChange2 + rightWidth*2.128f + thirdSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2)) + upHeight*2.2f + noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + ledgeSwitchThirdWidthForward + upHeight*2.2f + noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchThirdWidthForward + upHeight*0.3f - noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + ledgeSwitchThirdWidthForward + upHeight*0.3f - noSurfaceDetectorHeight2, transform.position + posChange2 + ledgeSwitchThirdWidthForward + upHeight*2.2f + noSurfaceDetectorHeight2, out hit, collisionLayers)
			
			&&  !Physics.Linecast(rightSpace, transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 - ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(rightSpace + ledgeSwitchHeight*0.375f, transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 - ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + ledgeSwitchHeight*0.375f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(rightSpace + ledgeSwitchHeight*0.75f, transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 - ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + ledgeSwitchHeight*0.75f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(rightSpace + ledgeSwitchHeight*1.125f, transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 - ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + ledgeSwitchHeight*1.125f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*0.375f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*0.75f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.125f, out hit, collisionLayers)
			//
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.45f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.8f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*2.1f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*2.405f, out hit, collisionLayers)
			
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*0.375f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*0.75f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.125f, out hit, collisionLayers)
			//
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.45f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.8f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*2.1f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*2.405f, out hit, collisionLayers)
			&&  !r3SecondBackSurfaceDetectorsHit && !r3SecondBackHit
			&&  r3FirstBackSurfaceDetectorsHit && r3FirstBackHit){
				r3FirstBackTimer += 0.01f;
				if (r3FirstBackTimer > 0.1f || rotTimer > 0){
					r3FirstBackClear = true;
				}
				else {
					r3FirstBackClear = false;
				}
			}
			else {
				r3FirstBackTimer = 0.0f;
				r3FirstBackClear = false;
			}
			
		}
	}
	
	void LedgeSwitchingClearSecondBackRight () {
		
		if (!switching && ledgeSwitchingDetectors.allowLedgeSwitching && grabbedOn){

			//second back detectors
			//1
			if (!Physics.Linecast(transform.position + posChange1 + upHeight - ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 + minDistFromGroundHeight2 - ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange1 + upHeight - (rightWidth/4) - minDistFromGroundWidth2 - ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 - (rightWidth/4) + minDistFromGroundHeight2 - minDistFromGroundWidth2 - ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange1 + upHeight + (rightWidth/4) + minDistFromGroundWidth2 - ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 + (rightWidth/4) + minDistFromGroundHeight2 + minDistFromGroundWidth2 - ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			
			&&  !Physics.Linecast((transform.position + posChange2 + (transform.position + posChange2 - ledgeSwitchFirstNoSurfaceLength/1.75f + rightWidth*2.394f + firstSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2)) + upHeight*2.2f + noSurfaceDetectorHeight2, (transform.position + posChange2 + (transform.position + posChange2 - ledgeSwitchFirstNoSurfaceLength/1.75f + rightWidth*2.394f + firstSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2)) + upHeight*0.3f - noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast((transform.position + posChange2 + (transform.position + posChange2 - ledgeSwitchFirstNoSurfaceLength/1.75f + rightWidth*2.394f + firstSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2)) + upHeight*0.3f - noSurfaceDetectorHeight2, (transform.position + posChange2 + (transform.position + posChange2 - ledgeSwitchFirstNoSurfaceLength/1.75f + rightWidth*2.394f + firstSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + firstNoSurfaceDetectorWidth2)) + upHeight*2.2f + noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 - ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + upHeight*2.2f + noSurfaceDetectorHeight2, transform.position + posChange2 - ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + upHeight*0.3f - noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 - ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + upHeight*0.3f - noSurfaceDetectorHeight2, transform.position + posChange2 - ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + upHeight*2.2f + noSurfaceDetectorHeight2, out hit, collisionLayers)
			
			&&  !Physics.Linecast(rightSpace, transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 - ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2 + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(rightSpace + ledgeSwitchHeight*0.375f, transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 - ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2 + ledgeSwitchHeight*0.375f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(rightSpace + ledgeSwitchHeight*0.75f, transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 - ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2 + ledgeSwitchHeight*0.75f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(rightSpace + ledgeSwitchHeight*1.125f, transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 - ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2 + ledgeSwitchHeight*1.125f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*0.375f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*0.75f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.125f, out hit, collisionLayers)
			//
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.45f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.8f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*2.1f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*2.405f, out hit, collisionLayers)
			
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*0.375f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*0.75f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.125f, out hit, collisionLayers)
			//
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.45f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*1.8f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*2.1f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchFirstNoSurfaceLength/1.75f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchFirstNoSurfaceLength/0.875f + ledgeSwitchFirstWidthForward + ledgeSwitchHeight*2.405f, out hit, collisionLayers)
			&&  !r1ThirdBackSurfaceDetectorsHit && !r1ThirdBackHit
			&&  r1SecondBackSurfaceDetectorsHit && r1SecondBackHit){
				r1SecondBackTimer += 0.01f;
				if (r1SecondBackTimer > 0.1f || rotTimer > 0){
					r1SecondBackClear = true;
				}
				else {
					r1SecondBackClear = false;
				}
			}
			else {
				r1SecondBackTimer = 0.0f;
				r1SecondBackClear = false;
			}
			//2
			if (!Physics.Linecast(transform.position + posChange1 + upHeight - ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 + minDistFromGroundHeight2 - ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange1 + upHeight - (rightWidth/4) - minDistFromGroundWidth2 - ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 - (rightWidth/4) + minDistFromGroundHeight2 - minDistFromGroundWidth2 - ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange1 + upHeight + (rightWidth/4) + minDistFromGroundWidth2 - ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 + (rightWidth/4) + minDistFromGroundHeight2 + minDistFromGroundWidth2 - ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			
			&&  !Physics.Linecast((transform.position + posChange2 + (transform.position + posChange2 - ledgeSwitchSecondNoSurfaceLength/1.75f + rightWidth*2.394f + secondSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2)) + upHeight*2.2f + noSurfaceDetectorHeight2, (transform.position + posChange2 + (transform.position + posChange2 - ledgeSwitchSecondNoSurfaceLength/1.75f + rightWidth*2.394f + secondSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2)) + upHeight*0.3f - noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast((transform.position + posChange2 + (transform.position + posChange2 - ledgeSwitchSecondNoSurfaceLength/1.75f + rightWidth*2.394f + secondSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2)) + upHeight*0.3f - noSurfaceDetectorHeight2, (transform.position + posChange2 + (transform.position + posChange2 - ledgeSwitchSecondNoSurfaceLength/1.75f + rightWidth*2.394f + secondSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + secondNoSurfaceDetectorWidth2)) + upHeight*2.2f + noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 - ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + upHeight*2.2f + noSurfaceDetectorHeight2, transform.position + posChange2 - ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + upHeight*0.3f - noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 - ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + upHeight*0.3f - noSurfaceDetectorHeight2, transform.position + posChange2 - ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + upHeight*2.2f + noSurfaceDetectorHeight2, out hit, collisionLayers)
			
			&&  !Physics.Linecast(rightSpace, transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 - ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2 + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(rightSpace + ledgeSwitchHeight*0.375f, transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 - ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2 + ledgeSwitchHeight*0.375f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(rightSpace + ledgeSwitchHeight*0.75f, transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 - ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2 + ledgeSwitchHeight*0.75f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(rightSpace + ledgeSwitchHeight*1.125f, transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 - ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2 + ledgeSwitchHeight*1.125f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*0.375f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*0.75f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.125f, out hit, collisionLayers)
			//
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.45f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.8f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*2.1f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*2.405f, out hit, collisionLayers)
			
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*0.375f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*0.75f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.125f, out hit, collisionLayers)
			//
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.45f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*1.8f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*2.1f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSecondNoSurfaceLength/1.75f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSecondNoSurfaceLength/0.875f + ledgeSwitchSecondWidthForward + ledgeSwitchHeight*2.405f, out hit, collisionLayers)
			&&  !r2ThirdBackSurfaceDetectorsHit && !r2ThirdBackHit
			&&  r2SecondBackSurfaceDetectorsHit && r2SecondBackHit){
				r2SecondBackTimer += 0.01f;
				if (r2SecondBackTimer > 0.1f || rotTimer > 0){
					r2SecondBackClear = true;
				}
				else {
					r2SecondBackClear = false;
				}
			}
			else {
				r2SecondBackTimer = 0.0f;
				r2SecondBackClear = false;
			}
			//3
			if (!Physics.Linecast(transform.position + posChange1 + upHeight - ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 + minDistFromGroundHeight2 - ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange1 + upHeight - (rightWidth/4) - minDistFromGroundWidth2 - ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 - (rightWidth/4) + minDistFromGroundHeight2 - minDistFromGroundWidth2 - ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange1 + upHeight + (rightWidth/4) + minDistFromGroundWidth2 - ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2, transform.position + posChange1 - upHeight/3 + (rightWidth/4) + minDistFromGroundHeight2 + minDistFromGroundWidth2 - ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2, out hit, collisionLayers)
			
			&&  !Physics.Linecast((transform.position + posChange2 + (transform.position + posChange2 - ledgeSwitchThirdNoSurfaceLength/1.75f + rightWidth*2.394f + thirdSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2)) + upHeight*2.2f + noSurfaceDetectorHeight2, (transform.position + posChange2 + (transform.position + posChange2 - ledgeSwitchThirdNoSurfaceLength/1.75f + rightWidth*2.394f + thirdSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2)) + upHeight*0.3f - noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast((transform.position + posChange2 + (transform.position + posChange2 - ledgeSwitchThirdNoSurfaceLength/1.75f + rightWidth*2.394f + thirdSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2)) + upHeight*0.3f - noSurfaceDetectorHeight2, (transform.position + posChange2 + (transform.position + posChange2 - ledgeSwitchThirdNoSurfaceLength/1.75f + rightWidth*2.394f + thirdSwitchSurfaceWidth + surfaceDetectorForward2)*((noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2) + 1))/(2 + (noSurfaceDetectorWidth2 + thirdNoSurfaceDetectorWidth2)) + upHeight*2.2f + noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 - ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + upHeight*2.2f + noSurfaceDetectorHeight2, transform.position + posChange2 - ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + upHeight*0.3f - noSurfaceDetectorHeight2, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 - ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + upHeight*0.3f - noSurfaceDetectorHeight2, transform.position + posChange2 - ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + upHeight*2.2f + noSurfaceDetectorHeight2, out hit, collisionLayers)
			
			&&  !Physics.Linecast(rightSpace, transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 - ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2 + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(rightSpace + ledgeSwitchHeight*0.375f, transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 - ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2 + ledgeSwitchHeight*0.375f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(rightSpace + ledgeSwitchHeight*0.75f, transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 - ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2 + ledgeSwitchHeight*0.75f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			&&  !Physics.Linecast(rightSpace + ledgeSwitchHeight*1.125f, transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 - ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2 + ledgeSwitchHeight*1.125f + wallInFrontDetectorUpAmount2, out hit, collisionLayers)
			
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*0.375f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*0.75f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.125f, out hit, collisionLayers)
			//
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.45f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.8f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*2.1f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*2.405f, out hit, collisionLayers)
			
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*0.375f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*0.75f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.125f, out hit, collisionLayers)
			//
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.45f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*1.8f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*2.1f, out hit, collisionLayers)
			&&  !Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchThirdNoSurfaceLength/1.75f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchThirdNoSurfaceLength/0.875f + ledgeSwitchThirdWidthForward + ledgeSwitchHeight*2.405f, out hit, collisionLayers)
			&&  !r3ThirdBackSurfaceDetectorsHit && !r3ThirdBackHit
			&&  r3SecondBackSurfaceDetectorsHit && r3SecondBackHit){
				r3SecondBackTimer += 0.01f;
				if (r3SecondBackTimer > 0.1f || rotTimer > 0){
					r3SecondBackClear = true;
				}
				else {
					r3SecondBackClear = false;
				}
			}
			else {
				r3SecondBackTimer = 0.0f;
				r3SecondBackClear = false;
			}
		}
	}
	
	
	void LedgeSwitchHitPointsSecondFrontLeft(){
		
		if (!switching && ledgeSwitchingDetectors.allowLedgeSwitching && grabbedOn){
			
			//left
			//determining if and where point was hit on the left
			//second forward
			//surface detectors
			//1
			if (!Physics.Linecast(transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.585f - rightWidth*2 - surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.585f - rightWidth*2 - surfaceDetectorWidth2 + surfaceDetectorHeight2, out hit, collisionLayers) && Physics.Linecast(transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.585f - rightWidth*2 - surfaceDetectorWidth2 + surfaceDetectorHeight2, transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/0.585f - rightWidth*2 - surfaceDetectorWidth2, out hit, collisionLayers)
			||  Physics.Linecast(transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.585f - rightWidth*2 - surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.8f + ledgeSwitchSurfaceLength/0.585f - rightWidth*2 - surfaceDetectorWidth2, out hit, collisionLayers)){
				
				//ledge switch point detectors
				if (!Physics.Linecast(transform.position + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.585f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.585f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, out switchHitPoint, collisionLayers) && Physics.Linecast(transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.585f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/0.585f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)
				||  Physics.Linecast(transform.position + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.585f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*0.8f + ledgeSwitchSurfaceLength/0.585f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)){
					if (((Mathf.Acos(Mathf.Clamp(switchHitPoint.normal.y, -1f, 1f))) * 57.2958f) <= ledgeAngleLimit){
					
					l1SecondForwardHit = true;
					if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2), transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2), out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l1SecondForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(6.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l1SecondForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(6.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l1SecondForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(6.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l1SecondForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(6.5f/length2);
					}
					//
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l1SecondForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(6.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l1SecondForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(6.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l1SecondForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(6.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l1SecondForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(6.5f/length2);
					}
					//
					else {
						l1SecondForwardHitPoint = new Vector3(switchHitPoint.point.x - transform.forward.x*length2, switchHitPoint.point.y - (height2*1.15f), switchHitPoint.point.z - transform.forward.x*length2) + new Vector3(-transform.forward.x*length2/10, onLedgeHeight2/10, -transform.forward.z*length2/10);
					}
						
					}
					else {
					l1SecondForwardHit = false;
					}
					
				}
				else {
					l1SecondForwardHit = false;
				}
			}
			else {
				l1SecondForwardHit = false;
			}
			//2
			if (!Physics.Linecast(transform.position + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.585f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.585f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, out switchHitPoint, collisionLayers) && Physics.Linecast(transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.585f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/0.585f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)
			||  Physics.Linecast(transform.position + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.585f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*0.8f + ledgeSwitchSurfaceLength/0.585f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)){
				if (((Mathf.Acos(Mathf.Clamp(switchHitPoint.normal.y, -1f, 1f))) * 57.2958f) <= ledgeAngleLimit){
					
					l2SecondForwardHit = true;
					if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2), transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2), out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
					l2SecondForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(6.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
					l2SecondForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(6.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
					l2SecondForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(6.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
					l2SecondForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(6.5f/length2);
					}
					//
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
					l2SecondForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(6.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
					l2SecondForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(6.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
					l2SecondForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(6.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
					l2SecondForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(6.5f/length2);
					}
					//
					else {
					l2SecondForwardHitPoint = new Vector3(switchHitPoint.point.x - transform.forward.x*length2, switchHitPoint.point.y - (height2*1.15f), switchHitPoint.point.z - transform.forward.x*length2) + new Vector3(-transform.forward.x*length2/10, onLedgeHeight2/10, -transform.forward.z*length2/10);
					}
					
				}
				else {
					l2SecondForwardHit = false;
				}
			}
			else {
				l2SecondForwardHit = false;
			}
			//3
			if (!Physics.Linecast(transform.position + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.585f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.585f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, out switchHitPoint, collisionLayers) && Physics.Linecast(transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.585f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/0.585f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)
			||  Physics.Linecast(transform.position + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.585f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*0.8f + ledgeSwitchSurfaceLength/0.585f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)){
				if (((Mathf.Acos(Mathf.Clamp(switchHitPoint.normal.y, -1f, 1f))) * 57.2958f) <= ledgeAngleLimit){
					
					l3SecondForwardHit = true;
					if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2), transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2), out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
					l3SecondForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(6.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
					l3SecondForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(6.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
					l3SecondForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(6.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
					l3SecondForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(6.5f/length2);
					}
					//
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
					l3SecondForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(6.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
					l3SecondForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(6.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
					l3SecondForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(6.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
					l3SecondForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(6.5f/length2);
					}
					//
					else {
					l3SecondForwardHitPoint = new Vector3(switchHitPoint.point.x - transform.forward.x*length2, switchHitPoint.point.y - (height2*1.15f), switchHitPoint.point.z - transform.forward.x*length2) + new Vector3(-transform.forward.x*length2/10, onLedgeHeight2/10, -transform.forward.z*length2/10);
					}
					
				}
				else {
					l3SecondForwardHit = false;
				}
				
			}
			else {
				l3SecondForwardHit = false;
			}
			
		}
	}
	
	void LedgeSwitchHitPointsFirstFrontLeft(){
		
		if (!switching && ledgeSwitchingDetectors.allowLedgeSwitching && grabbedOn){
			
			//first forward
			//surface detectors
			//1
			if (!Physics.Linecast(transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2 + surfaceDetectorHeight2, out hit, collisionLayers) && Physics.Linecast(transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2 + surfaceDetectorHeight2, transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2, out hit, collisionLayers)
			||  Physics.Linecast(transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.8f + ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2, out hit, collisionLayers)){
				
				l1FirstForwardSurfaceDetectorsHit = true;
				
			}
			else {
				l1FirstForwardSurfaceDetectorsHit = false;
				l1FirstForwardHit = false;
			}
			//2
			if (!Physics.Linecast(transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2 + surfaceDetectorHeight2, out hit, collisionLayers) && Physics.Linecast(transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2 + surfaceDetectorHeight2, transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2, out hit, collisionLayers)
			||  Physics.Linecast(transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.8f + ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2, out hit, collisionLayers)){
				
				l2FirstForwardSurfaceDetectorsHit = true;
				
			}
			else {
				l2FirstForwardSurfaceDetectorsHit = false;
				l2FirstForwardHit = false;
			}
			//3
			if (!Physics.Linecast(transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2 + surfaceDetectorHeight2, out hit, collisionLayers) && Physics.Linecast(transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2 + surfaceDetectorHeight2, transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2, out hit, collisionLayers)
			||  Physics.Linecast(transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.8f + ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2, out hit, collisionLayers)){
				
				l3FirstForwardSurfaceDetectorsHit = true;
				
			}
			else {
				l3FirstForwardSurfaceDetectorsHit = false;
				l3FirstForwardHit = false;
			}
			//ledge switch point detectors
			//1
			if (!Physics.Linecast(transform.position + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, out switchHitPoint, collisionLayers) && Physics.Linecast(transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)
			||  Physics.Linecast(transform.position + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*0.8f + ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)){
				if (((Mathf.Acos(Mathf.Clamp(switchHitPoint.normal.y, -1f, 1f))) * 57.2958f) <= ledgeAngleLimit && !switching){
					
					l1FirstForwardHit = true;
					if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2), transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2), out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l1FirstForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(5.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l1FirstForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(5.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l1FirstForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(5.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l1FirstForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(5.5f/length2);
					}
					//
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l1FirstForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(5.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l1FirstForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(5.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l1FirstForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(5.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l1FirstForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(5.5f/length2);
					}
					//
					else {
						l1FirstForwardHitPoint = new Vector3(switchHitPoint.point.x - transform.forward.x*length2, switchHitPoint.point.y - (height2*1.15f), switchHitPoint.point.z - transform.forward.x*length2) + new Vector3(-transform.forward.x*length2/10, onLedgeHeight2/10, -transform.forward.z*length2/10);
					}
					
				}
				else {
					l1FirstForwardHit = false;
				}
			}
			else {
				l1FirstForwardHit = false;
			}
			//2
			if (!Physics.Linecast(transform.position + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, out switchHitPoint, collisionLayers) && Physics.Linecast(transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)
			||  Physics.Linecast(transform.position + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*0.8f + ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)){
				if (((Mathf.Acos(Mathf.Clamp(switchHitPoint.normal.y, -1f, 1f))) * 57.2958f) <= ledgeAngleLimit && !switching){
					
					l2FirstForwardHit = true;
					if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2), transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2), out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l2FirstForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(5.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l2FirstForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(5.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l2FirstForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(5.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l2FirstForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(5.5f/length2);
					}
					//
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l2FirstForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(5.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l2FirstForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(5.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l2FirstForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(5.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l2FirstForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(5.5f/length2);
					}
					//
					else {
						l2FirstForwardHitPoint = new Vector3(switchHitPoint.point.x - transform.forward.x*length2, switchHitPoint.point.y - (height2*1.15f), switchHitPoint.point.z - transform.forward.x*length2) + new Vector3(-transform.forward.x*length2/10, onLedgeHeight2/10, -transform.forward.z*length2/10);
					}
					
				}
				else {
					l2FirstForwardHit = false;
				}
			}
			else {
				l2FirstForwardHit = false;
			}
			//3
			if (!Physics.Linecast(transform.position + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, out switchHitPoint, collisionLayers) && Physics.Linecast(transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)
			||  Physics.Linecast(transform.position + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*0.8f + ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)){
				if (((Mathf.Acos(Mathf.Clamp(switchHitPoint.normal.y, -1f, 1f))) * 57.2958f) <= ledgeAngleLimit && !switching){
					
					l3FirstForwardHit = true;
					if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2), transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2), out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l3FirstForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(5.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l3FirstForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(5.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l3FirstForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(5.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l3FirstForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(5.5f/length2);
					}
					//
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l3FirstForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(5.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l3FirstForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(5.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l3FirstForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(5.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l3FirstForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(5.5f/length2);
					}
					//
					else {
						l3FirstForwardHitPoint = new Vector3(switchHitPoint.point.x - transform.forward.x*length2, switchHitPoint.point.y - (height2*1.15f), switchHitPoint.point.z - transform.forward.x*length2) + new Vector3(-transform.forward.x*length2/10, onLedgeHeight2/10, -transform.forward.z*length2/10);
					}
					
				}
				else {
					l3FirstForwardHit = false;
				}
			}
			else {
				l3FirstForwardHit = false;
			}
			
		}
	}
	
	void LedgeSwitchHitPointsMiddleLeft(){
		
		if (!switching && ledgeSwitchingDetectors.allowLedgeSwitching && grabbedOn){
			
			//middle
			//surface detectors
			//1
			if (!Physics.Linecast(transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + surfaceDetectorHeight2, out hit, collisionLayers) && Physics.Linecast(transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + surfaceDetectorHeight2, transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2, out hit, collisionLayers)
			||  Physics.Linecast(transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.8f + ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2, out hit, collisionLayers)){
				
				l1MiddleSurfaceDetectorsHit = true;
				
			}
			else {
				l1MiddleSurfaceDetectorsHit = false;
				l1MiddleHit = false;
			}
			//2
			if (!Physics.Linecast(transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + surfaceDetectorHeight2, out hit, collisionLayers) && Physics.Linecast(transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + surfaceDetectorHeight2, transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2, out hit, collisionLayers)
			||  Physics.Linecast(transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.8f + ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2, out hit, collisionLayers)){
				
				l2MiddleSurfaceDetectorsHit = true;
				
			}
			else {
				l2MiddleSurfaceDetectorsHit = false;
				l2MiddleHit = false;
			}
			//3
			if (!Physics.Linecast(transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + surfaceDetectorHeight2, out hit, collisionLayers) && Physics.Linecast(transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + surfaceDetectorHeight2, transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2, out hit, collisionLayers)
			||  Physics.Linecast(transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.8f + ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2, out hit, collisionLayers)){
				
				l3MiddleSurfaceDetectorsHit = true;
				
			}
			else {
				l3MiddleSurfaceDetectorsHit = false;
				l3MiddleHit = false;
			}
			//ledge switch point detectors
			//1
			if (!Physics.Linecast(transform.position + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, out switchHitPoint, collisionLayers) && Physics.Linecast(transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)
			||  Physics.Linecast(transform.position + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*0.8f + ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)){
				if (((Mathf.Acos(Mathf.Clamp(switchHitPoint.normal.y, -1f, 1f))) * 57.2958f) <= ledgeAngleLimit){
					
					l1MiddleHit = true;
					if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2), transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2), out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l1MiddleHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(3.8f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l1MiddleHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(3.8f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l1MiddleHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(3.8f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l1MiddleHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(3.8f/length2);
					}
					//
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l1MiddleHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(3.8f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l1MiddleHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(3.8f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l1MiddleHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(3.8f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l1MiddleHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(3.8f/length2);
					}
					//
					else {
						l1MiddleHitPoint = new Vector3(switchHitPoint.point.x - transform.forward.x*length2, switchHitPoint.point.y - (height2*1.15f), switchHitPoint.point.z - transform.forward.x*length2) + new Vector3(-transform.forward.x*length2/10, onLedgeHeight2/10, -transform.forward.z*length2/10);
					}
					
				}
				else {
					l1MiddleHit = false;
				}
			}
			else {
				l1MiddleHit = false;
			}
			//2
			if (!Physics.Linecast(transform.position + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, out switchHitPoint, collisionLayers) && Physics.Linecast(transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)
			||  Physics.Linecast(transform.position + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*0.8f + ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)){
				if (((Mathf.Acos(Mathf.Clamp(switchHitPoint.normal.y, -1f, 1f))) * 57.2958f) <= ledgeAngleLimit){
					
					l2MiddleHit = true;
					if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2), transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2), out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l2MiddleHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(3.8f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l2MiddleHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(3.8f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l2MiddleHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(3.8f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l2MiddleHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(3.8f/length2);
					}
					//
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l2MiddleHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(3.8f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l2MiddleHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(3.8f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l2MiddleHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(3.8f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l2MiddleHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(3.8f/length2);
					}
					//
					else {
						l2MiddleHitPoint = new Vector3(switchHitPoint.point.x - transform.forward.x*length2, switchHitPoint.point.y - (height2*1.15f), switchHitPoint.point.z - transform.forward.x*length2) + new Vector3(-transform.forward.x*length2/10, onLedgeHeight2/10, -transform.forward.z*length2/10);
					}
					
				}
				else {
					l2MiddleHit = false;
				}
			}
			else {
				l2MiddleHit = false;
			}
			//3
			if (!Physics.Linecast(transform.position + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, out switchHitPoint, collisionLayers) && Physics.Linecast(transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)
			||  Physics.Linecast(transform.position + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*0.8f + ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)){
				if (((Mathf.Acos(Mathf.Clamp(switchHitPoint.normal.y, -1f, 1f))) * 57.2958f) <= ledgeAngleLimit){
					
					l3MiddleHit = true;
					if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2), transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2), out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l3MiddleHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(3.8f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l3MiddleHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(3.8f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l3MiddleHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(3.8f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l3MiddleHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(3.8f/length2);
					}
					//
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l3MiddleHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(3.8f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l3MiddleHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(3.8f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l3MiddleHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(3.8f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l3MiddleHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(3.8f/length2);
					}
					//
					else {
						l3MiddleHitPoint = new Vector3(switchHitPoint.point.x - transform.forward.x*length2, switchHitPoint.point.y - (height2*1.15f), switchHitPoint.point.z - transform.forward.x*length2) + new Vector3(-transform.forward.x*length2/10, onLedgeHeight2/10, -transform.forward.z*length2/10);
					}
					
				}
				else {
					l3MiddleHit = false;
				}
			}
			else {
				l3MiddleHit = false;
			}
			
		}
	}
	
	
	void LedgeSwitchHitPointsFirstBackLeft () {
		
		if (!switching && ledgeSwitchingDetectors.allowLedgeSwitching && grabbedOn){
			
			//first back
			//surface detectors
			//1
			if (!Physics.Linecast(transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f - rightWidth*2 - surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f - rightWidth*2 - surfaceDetectorWidth2 + surfaceDetectorHeight2, out hit, collisionLayers) && Physics.Linecast(transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f - rightWidth*2 - surfaceDetectorWidth2 + surfaceDetectorHeight2, transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 - rightWidth*2 - surfaceDetectorWidth2, out hit, collisionLayers)
			||  Physics.Linecast(transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f - rightWidth*2 - surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.8f - rightWidth*2 - surfaceDetectorWidth2, out hit, collisionLayers)){
				
				l1FirstBackSurfaceDetectorsHit = true;
				
			}
			else {
				l1FirstBackSurfaceDetectorsHit = false;
				l1FirstBackHit = false;
			}
			//2
			if (!Physics.Linecast(transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f - rightWidth*2 - surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f - rightWidth*2 - surfaceDetectorWidth2 + surfaceDetectorHeight2, out hit, collisionLayers) && Physics.Linecast(transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f - rightWidth*2 - surfaceDetectorWidth2 + surfaceDetectorHeight2, transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 - rightWidth*2 - surfaceDetectorWidth2, out hit, collisionLayers)
			||  Physics.Linecast(transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f - rightWidth*2 - surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.8f - rightWidth*2 - surfaceDetectorWidth2, out hit, collisionLayers)){
				
				l2FirstBackSurfaceDetectorsHit = true;
				
			}
			else {
				l2FirstBackSurfaceDetectorsHit = false;
				l2FirstBackHit = false;
			}
			//3
			if (Physics.Linecast(transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f - rightWidth*2 - surfaceDetectorWidth2 + surfaceDetectorHeight2, transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 - rightWidth*2 - surfaceDetectorWidth2, out hit, collisionLayers) && !Physics.Linecast(transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f - rightWidth*2 - surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f - rightWidth*2 - surfaceDetectorWidth2 + surfaceDetectorHeight2, out hit, collisionLayers)
			||  Physics.Linecast(transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f - rightWidth*2 - surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.8f - rightWidth*2 - surfaceDetectorWidth2, out hit, collisionLayers)){
				
				l3FirstBackSurfaceDetectorsHit = true;
				
			}
			else {
				l3FirstBackSurfaceDetectorsHit = false;
				l3FirstBackHit = false;
			}
			//ledge switch point detectors
			//1
			if (!Physics.Linecast(transform.position + posChange2 + upHeight*1.5f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, out switchHitPoint, collisionLayers) && Physics.Linecast(transform.position + posChange2 + upHeight*2.2f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)
			||  Physics.Linecast(transform.position + posChange2 + upHeight*1.5f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*0.8f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)){
				if (((Mathf.Acos(Mathf.Clamp(switchHitPoint.normal.y, -1f, 1f))) * 57.2958f) <= ledgeAngleLimit){
					
					l1FirstBackHit = true;
					if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2), transform.position + posChange2 + wallInFrontDetectorUpAmount2 - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2), out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l1FirstBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.9f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l1FirstBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.9f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l1FirstBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.9f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l1FirstBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.9f/length2);
					}
					//
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l1FirstBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.9f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l1FirstBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.9f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l1FirstBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.9f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l1FirstBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.9f/length2);
					}
					//
					else {
						l1FirstBackHitPoint = new Vector3(switchHitPoint.point.x - transform.forward.x*length2, switchHitPoint.point.y - (height2*1.15f), switchHitPoint.point.z - transform.forward.x*length2) + new Vector3(-transform.forward.x*length2/10, onLedgeHeight2/10, -transform.forward.z*length2/10);
					}
					
				}
				else {
					l1FirstBackHit = false;
				}
			}
			else {
				l1FirstBackHit = false;
			}
			//2
			if (!Physics.Linecast(transform.position + posChange2 + upHeight*1.5f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, out switchHitPoint, collisionLayers) && Physics.Linecast(transform.position + posChange2 + upHeight*2.2f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)
			||  Physics.Linecast(transform.position + posChange2 + upHeight*1.5f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*0.8f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)){
				if (((Mathf.Acos(Mathf.Clamp(switchHitPoint.normal.y, -1f, 1f))) * 57.2958f) <= ledgeAngleLimit){
					
					l2FirstBackHit = true;
					if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2), transform.position + posChange2 + wallInFrontDetectorUpAmount2 - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2), out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l2FirstBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.9f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l2FirstBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.9f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l2FirstBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.9f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l2FirstBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.9f/length2);
					}
					//
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l2FirstBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.9f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l2FirstBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.9f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l2FirstBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.9f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l2FirstBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.9f/length2);
					}
					//
					else {
						l2FirstBackHitPoint = new Vector3(switchHitPoint.point.x - transform.forward.x*length2, switchHitPoint.point.y - (height2*1.15f), switchHitPoint.point.z - transform.forward.x*length2) + new Vector3(-transform.forward.x*length2/10, onLedgeHeight2/10, -transform.forward.z*length2/10);
					}
					
				}
				else {
					l2FirstBackHit = false;
				}
			}
			else {
				l2FirstBackHit = false;
			}
			//3
			if (!Physics.Linecast(transform.position + posChange2 + upHeight*1.5f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, out switchHitPoint, collisionLayers) && Physics.Linecast(transform.position + posChange2 + upHeight*2.2f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)
			||  Physics.Linecast(transform.position + posChange2 + upHeight*1.5f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*0.8f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)){
				if (((Mathf.Acos(Mathf.Clamp(switchHitPoint.normal.y, -1f, 1f))) * 57.2958f) <= ledgeAngleLimit){
					
					l3FirstBackHit = true;
					if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2), transform.position + posChange2 + wallInFrontDetectorUpAmount2 - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2), out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l3FirstBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.9f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l3FirstBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.9f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l3FirstBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.9f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l3FirstBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.9f/length2);
					}
					//
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l3FirstBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.9f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l3FirstBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.9f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l3FirstBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.9f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l3FirstBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.9f/length2);
					}
					//
					else {
						l3FirstBackHitPoint = new Vector3(switchHitPoint.point.x - transform.forward.x*length2, switchHitPoint.point.y - (height2*1.15f), switchHitPoint.point.z - transform.forward.x*length2) + new Vector3(-transform.forward.x*length2/10, onLedgeHeight2/10, -transform.forward.z*length2/10);
					}
					
				}
				else {
					l3FirstBackHit = false;
				}
			}
			else {
				l3FirstBackHit = false;
			}
			
		}
	}
	
	void LedgeSwitchHitPointsSecondBackLeft () {
		
		if (!switching && ledgeSwitchingDetectors.allowLedgeSwitching && grabbedOn){
			
			//second back
			//surface detectors
			//1
			if (!Physics.Linecast(transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f - ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + surfaceDetectorHeight2, out hit, collisionLayers) && Physics.Linecast(transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + surfaceDetectorHeight2, transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 - ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2, out hit, collisionLayers)
			||  Physics.Linecast(transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f - ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.8f - ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2, out hit, collisionLayers)){
				
				l1SecondBackSurfaceDetectorsHit = true;
				
			}
			else {
				l1SecondBackSurfaceDetectorsHit = false;
				l1SecondBackHit = false;
			}
			//2
			if (!Physics.Linecast(transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f - ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + surfaceDetectorHeight2, out hit, collisionLayers) && Physics.Linecast(transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + surfaceDetectorHeight2, transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 - ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2, out hit, collisionLayers)
			||  Physics.Linecast(transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f - ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.8f - ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2, out hit, collisionLayers)){
				
				l2SecondBackSurfaceDetectorsHit = true;
				
			}
			else {
				l2SecondBackSurfaceDetectorsHit = false;
				l2SecondBackHit = false;
			}
			//3
			if (!Physics.Linecast(transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f - ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + surfaceDetectorHeight2, out hit, collisionLayers) && Physics.Linecast(transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + surfaceDetectorHeight2, transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 - ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2, out hit, collisionLayers)
			||  Physics.Linecast(transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f - ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.8f - ledgeSwitchSurfaceLength/1.75f - rightWidth*2 - surfaceDetectorWidth2, out hit, collisionLayers)){
				
				l3SecondBackSurfaceDetectorsHit = true;
				
			}
			else {
				l3SecondBackSurfaceDetectorsHit = false;
				l3SecondBackHit = false;
			}
			//ledge switch point detectors
			//1
			if (!Physics.Linecast(transform.position + posChange2 + upHeight*1.5f - ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, out switchHitPoint, collisionLayers) && Physics.Linecast(transform.position + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 - ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)
			||  Physics.Linecast(transform.position + posChange2 + upHeight*1.5f - ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*0.8f - ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)){
				if (((Mathf.Acos(Mathf.Clamp(switchHitPoint.normal.y, -1f, 1f))) * 57.2958f) <= ledgeAngleLimit){
					
					l1SecondBackHit = true;
					if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2), transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2), out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l1SecondBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.6f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l1SecondBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.6f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l1SecondBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.6f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l1SecondBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.6f/length2);
					}
					//
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l1SecondBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.6f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l1SecondBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.6f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l1SecondBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.6f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + firstSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l1SecondBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.6f/length2);
					}
					//
					else {
						l1SecondBackHitPoint = new Vector3(switchHitPoint.point.x - transform.forward.x*length2, switchHitPoint.point.y - (height2*1.15f), switchHitPoint.point.z - transform.forward.x*length2) + new Vector3(-transform.forward.x*length2/10, onLedgeHeight2/10, -transform.forward.z*length2/10);
					}
					
				}
				else {
					l1SecondBackHit = false;
				}
			}
			else {
				l1SecondBackHit = false;
			}
			//2
			if (!Physics.Linecast(transform.position + posChange2 + upHeight*1.5f - ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, out switchHitPoint, collisionLayers) && Physics.Linecast(transform.position + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 - ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)
			||  Physics.Linecast(transform.position + posChange2 + upHeight*1.5f - ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*0.8f - ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)){
				if (((Mathf.Acos(Mathf.Clamp(switchHitPoint.normal.y, -1f, 1f))) * 57.2958f) <= ledgeAngleLimit){
					
					l2SecondBackHit = true;
					if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2), transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2), out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l2SecondBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.6f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l2SecondBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.6f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l2SecondBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.6f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l2SecondBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.6f/length2);
					}
					//
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l2SecondBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.6f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l2SecondBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.6f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l2SecondBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.6f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + secondSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l2SecondBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.6f/length2);
					}
					//
					else {
						l2SecondBackHitPoint = new Vector3(switchHitPoint.point.x - transform.forward.x*length2, switchHitPoint.point.y - (height2*1.15f), switchHitPoint.point.z - transform.forward.x*length2) + new Vector3(-transform.forward.x*length2/10, onLedgeHeight2/10, -transform.forward.z*length2/10);
					}
					
				}
				else {
					l2SecondBackHit = false;
				}
			}
			else {
				l2SecondBackHit = false;
			}
			//3
			if (!Physics.Linecast(transform.position + posChange2 + upHeight*1.5f - ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, out switchHitPoint, collisionLayers) && Physics.Linecast(transform.position + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 - ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)
			||  Physics.Linecast(transform.position + posChange2 + upHeight*1.5f - ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*0.8f - ledgeSwitchSurfaceLength/1.75f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)){
				if (((Mathf.Acos(Mathf.Clamp(switchHitPoint.normal.y, -1f, 1f))) * 57.2958f) <= ledgeAngleLimit){
					
					l3SecondBackHit = true;
					if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2), transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2), out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l3SecondBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.6f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l3SecondBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.6f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l3SecondBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.6f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l3SecondBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.6f/length2);
					}
					//
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l3SecondBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.6f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l3SecondBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.6f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l3SecondBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.6f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f - (rightWidth*2.67f + thirdSwitchSurfaceWidth - surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						l3SecondBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.6f/length2);
					}
					//
					else {
						l3SecondBackHitPoint = new Vector3(switchHitPoint.point.x - transform.forward.x*length2, switchHitPoint.point.y - (height2*1.15f), switchHitPoint.point.z - transform.forward.x*length2) + new Vector3(-transform.forward.x*length2/10, onLedgeHeight2/10, -transform.forward.z*length2/10);
					}
					
				}
				else {
					l3SecondBackHit = false;
				}
			}
			else {
				l3SecondBackHit = false;
			}
			
		}
	}
	
	void LedgeSwitchHitPointsThirdBackLeft () {
		
		if (!switching && ledgeSwitchingDetectors.allowLedgeSwitching && grabbedOn){
			
			//third back
			//surface detectors
			//1
			if (!Physics.Linecast(transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f - ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2 + surfaceDetectorHeight2, out hit, collisionLayers) && Physics.Linecast(transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2 + surfaceDetectorHeight2, transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 - ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2, out hit, collisionLayers)
			||  Physics.Linecast(transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f - ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position - firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.8f - ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2, out hit, collisionLayers)){
				
				l1ThirdBackSurfaceDetectorsHit = true;
				
			}
			else {
				l1ThirdBackSurfaceDetectorsHit = false;
				l1ThirdBackHit = false;
			}
			//2
			if (!Physics.Linecast(transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f - ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2 + surfaceDetectorHeight2, out hit, collisionLayers) && Physics.Linecast(transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2 + surfaceDetectorHeight2, transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 - ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2, out hit, collisionLayers)
			||  Physics.Linecast(transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f - ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position - secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.8f - ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2, out hit, collisionLayers)){
				
				l2ThirdBackSurfaceDetectorsHit = true;
				
			}
			else {
				l2ThirdBackSurfaceDetectorsHit = false;
				l2ThirdBackHit = false;
			}
			//3
			if (!Physics.Linecast(transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f - ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2 + surfaceDetectorHeight2, out hit, collisionLayers) && Physics.Linecast(transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2 + surfaceDetectorHeight2, transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 - ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2, out hit, collisionLayers)
			||  Physics.Linecast(transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f - ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position - thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.8f - ledgeSwitchSurfaceLength/0.875f - rightWidth*2 - surfaceDetectorWidth2, out hit, collisionLayers)){
				
				l3ThirdBackSurfaceDetectorsHit = true;
				
			}
			else {
				l3ThirdBackSurfaceDetectorsHit = false;
				l3ThirdBackHit = false;
			}
			//ledge switch point detectors
			//1
			if (!Physics.Linecast(transform.position + posChange2 + upHeight*1.5f - ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, out switchHitPoint, collisionLayers) && Physics.Linecast(transform.position + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 - ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)
			||  Physics.Linecast(transform.position + posChange2 + upHeight*1.5f - ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*0.8f - ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - firstSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)){
				if (((Mathf.Acos(Mathf.Clamp(switchHitPoint.normal.y, -1f, 1f))) * 57.2958f) <= ledgeAngleLimit){
					
					l1ThirdBackHit = true;
					
				}
				else {
					l1ThirdBackHit = false;
				}
			}
			else {
				l1ThirdBackHit = false;
			}
			//2
			if (!Physics.Linecast(transform.position + posChange2 + upHeight*1.5f - ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, out switchHitPoint, collisionLayers) && Physics.Linecast(transform.position + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 - ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)
			||  Physics.Linecast(transform.position + posChange2 + upHeight*1.5f - ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*0.8f - ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - secondSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)){
				if (((Mathf.Acos(Mathf.Clamp(switchHitPoint.normal.y, -1f, 1f))) * 57.2958f) <= ledgeAngleLimit){
					
					l2ThirdBackHit = true;
					
				}
				else {
					l2ThirdBackHit = false;
				}
			}
			else {
				l2ThirdBackHit = false;
			}
			//3
			if (!Physics.Linecast(transform.position + posChange2 + upHeight*1.5f - ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, out switchHitPoint, collisionLayers) && Physics.Linecast(transform.position + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 - ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)
			||  Physics.Linecast(transform.position + posChange2 + upHeight*1.5f - ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*0.8f - ledgeSwitchSurfaceLength/0.875f - rightWidth*2.67f - thirdSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)){
				if (((Mathf.Acos(Mathf.Clamp(switchHitPoint.normal.y, -1f, 1f))) * 57.2958f) <= ledgeAngleLimit){
					
					l3ThirdBackHit = true;
					
				}
				else {
					l3ThirdBackHit = false;
				}
			}
			else {
				l3ThirdBackHit = false;
			}
			
		}
	}
	
	
	void LedgeSwitchHitPointsSecondFrontRight () {
		
		if (!switching && ledgeSwitchingDetectors.allowLedgeSwitching && grabbedOn){
			
			//right
			//determining if and where point was hit on the right
			//second forward
			//surface detectors
			//1
			if (!Physics.Linecast(transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.585f + rightWidth*2 + surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.585f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, out hit, collisionLayers) && Physics.Linecast(transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.585f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/0.585f + rightWidth*2 + surfaceDetectorWidth2, out hit, collisionLayers)
			||  Physics.Linecast(transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.585f + rightWidth*2 + surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.8f + ledgeSwitchSurfaceLength/0.585f + rightWidth*2 + surfaceDetectorWidth2, out hit, collisionLayers)){
				
				//ledge switch point detectors
				if (!Physics.Linecast(transform.position + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.585f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.585f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, out switchHitPoint, collisionLayers) && Physics.Linecast(transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.585f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/0.585f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)
				||  Physics.Linecast(transform.position + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.585f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*0.8f + ledgeSwitchSurfaceLength/0.585f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)){
					if (((Mathf.Acos(Mathf.Clamp(switchHitPoint.normal.y, -1f, 1f))) * 57.2958f) <= ledgeAngleLimit){
					
					r1SecondForwardHit = true;
					if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2), transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2), out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r1SecondForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(6.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r1SecondForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(6.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r1SecondForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(6.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r1SecondForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(6.5f/length2);
					}
					//
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r1SecondForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(6.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r1SecondForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(6.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r1SecondForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(6.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r1SecondForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(6.5f/length2);
					}
					//
					else {
						r1SecondForwardHitPoint = new Vector3(switchHitPoint.point.x - transform.forward.x*length2, switchHitPoint.point.y - (height2*1.15f), switchHitPoint.point.z - transform.forward.x*length2) + new Vector3(-transform.forward.x*length2/10, onLedgeHeight2/10, -transform.forward.z*length2/10);
					}
					
					}
					else {
					r1SecondForwardHit = false;
					}
				}
				else {
					r1SecondForwardHit = false;
				}
				
			}
			else {
				r1SecondForwardHit = false;
			}
			//2
			if (!Physics.Linecast(transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.585f + rightWidth*2 + surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.585f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, out hit, collisionLayers) && Physics.Linecast(transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.585f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/0.585f + rightWidth*2 + surfaceDetectorWidth2, out hit, collisionLayers)
			||  Physics.Linecast(transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.585f + rightWidth*2 + surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.8f + ledgeSwitchSurfaceLength/0.585f + rightWidth*2 + surfaceDetectorWidth2, out hit, collisionLayers)){
				
				//ledge switch point detectors
				if (!Physics.Linecast(transform.position + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.585f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.585f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, out switchHitPoint, collisionLayers) && Physics.Linecast(transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.585f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/0.585f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)
				||  Physics.Linecast(transform.position + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.585f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*0.8f + ledgeSwitchSurfaceLength/0.585f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)){
					if (((Mathf.Acos(Mathf.Clamp(switchHitPoint.normal.y, -1f, 1f))) * 57.2958f) <= ledgeAngleLimit){
						
					r2SecondForwardHit = true;
					if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2), transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2), out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r2SecondForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(6.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r2SecondForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(6.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r2SecondForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(6.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r2SecondForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(6.5f/length2);
					}
					//
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
					r2SecondForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(6.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
					r2SecondForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(6.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
					r2SecondForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(6.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
					r2SecondForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(6.5f/length2);
					}
					//
					else {
						r2SecondForwardHitPoint = new Vector3(switchHitPoint.point.x - transform.forward.x*length2, switchHitPoint.point.y - (height2*1.15f), switchHitPoint.point.z - transform.forward.x*length2) + new Vector3(-transform.forward.x*length2/10, onLedgeHeight2/10, -transform.forward.z*length2/10);
					}
					
					}
					else {
					r2SecondForwardHit = false;
					}
				}
				else {
					r2SecondForwardHit = false;
				}
				
			}
			else {
				r2SecondForwardHit = false;
			}
			//3
			if (!Physics.Linecast(transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.585f + rightWidth*2 + surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.585f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, out hit, collisionLayers) && Physics.Linecast(transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.585f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/0.585f + rightWidth*2 + surfaceDetectorWidth2, out hit, collisionLayers)
			||  Physics.Linecast(transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.585f + rightWidth*2 + surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.8f + ledgeSwitchSurfaceLength/0.585f + rightWidth*2 + surfaceDetectorWidth2, out hit, collisionLayers)){
				
				//ledge switch point detectors
				if (!Physics.Linecast(transform.position + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.585f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.585f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, out switchHitPoint, collisionLayers) && Physics.Linecast(transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.585f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/0.585f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)
				||  Physics.Linecast(transform.position + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.585f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*0.8f + ledgeSwitchSurfaceLength/0.585f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)){
					if (((Mathf.Acos(Mathf.Clamp(switchHitPoint.normal.y, -1f, 1f))) * 57.2958f) <= ledgeAngleLimit){
					
					r3SecondForwardHit = true;
					if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2), transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2), out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r3SecondForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(6.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r3SecondForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(6.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r3SecondForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(6.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r3SecondForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(6.5f/length2);
					}
					//
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
					r3SecondForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(6.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
					r3SecondForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(6.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
					r3SecondForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(6.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
					r3SecondForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(6.5f/length2);
					}
					//
					else {
						r3SecondForwardHitPoint = new Vector3(switchHitPoint.point.x - transform.forward.x*length2, switchHitPoint.point.y - (height2*1.15f), switchHitPoint.point.z - transform.forward.x*length2) + new Vector3(-transform.forward.x*length2/10, onLedgeHeight2/10, -transform.forward.z*length2/10);
					}
					
					}
					else {
					r3SecondForwardHit = false;
					}
				}
				else {
					r3SecondForwardHit = false;
				}
				
			}
			else {
				r3SecondForwardHit = false;
			}
			
		}
	}
	
	void LedgeSwitchHitPointsFirstFrontRight () {
		
		if (!switching && ledgeSwitchingDetectors.allowLedgeSwitching && grabbedOn){
			
			//first forward
			//surface detectors
			//1
			if (!Physics.Linecast(transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, out hit, collisionLayers) && Physics.Linecast(transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2, out hit, collisionLayers)
			||  Physics.Linecast(transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.8f + ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2, out hit, collisionLayers)){
				
				r1FirstForwardSurfaceDetectorsHit = true;
				
			}
			else {
				r1FirstForwardSurfaceDetectorsHit = false;
				r1FirstForwardHit = false;
			}
			//2
			if (!Physics.Linecast(transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, out hit, collisionLayers) && Physics.Linecast(transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2, out hit, collisionLayers)
			||  Physics.Linecast(transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.8f + ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2, out hit, collisionLayers)){
				
				r2FirstForwardSurfaceDetectorsHit = true;
				
			}
			else {
				r2FirstForwardSurfaceDetectorsHit = false;
				r2FirstForwardHit = false;
			}
			//3
			if (!Physics.Linecast(transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, out hit, collisionLayers) && Physics.Linecast(transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2, out hit, collisionLayers)
			||  Physics.Linecast(transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.8f + ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2, out hit, collisionLayers)){
				
				r3FirstForwardSurfaceDetectorsHit = true;
				
			}
			else {
				r3FirstForwardSurfaceDetectorsHit = false;
				r3FirstForwardHit = false;
			}
			//ledge switch point detectors
			//1
			if (!Physics.Linecast(transform.position + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, out switchHitPoint, collisionLayers) && Physics.Linecast(transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)
			||  Physics.Linecast(transform.position + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*0.8f + ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)){
				if (((Mathf.Acos(Mathf.Clamp(switchHitPoint.normal.y, -1f, 1f))) * 57.2958f) <= ledgeAngleLimit && !switching){
					
					r1FirstForwardHit = true;
					if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2), transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2), out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r1FirstForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(5.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r1FirstForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(5.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r1FirstForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(5.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r1FirstForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(5.5f/length2);
					}
					//
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r1FirstForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(5.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r1FirstForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(5.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r1FirstForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(5.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r1FirstForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(5.5f/length2);
					}
					//
					else {
						r1FirstForwardHitPoint = new Vector3(switchHitPoint.point.x - transform.forward.x*length2, switchHitPoint.point.y - (height2*1.15f), switchHitPoint.point.z - transform.forward.x*length2) + new Vector3(-transform.forward.x*length2/10, onLedgeHeight2/10, -transform.forward.z*length2/10);
					}
					
				}
				else {
					r1FirstForwardHit = false;
				}
			}
			else {
				r1FirstForwardHit = false;
			}
			//2
			if (!Physics.Linecast(transform.position + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, out switchHitPoint, collisionLayers) && Physics.Linecast(transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)
			||  Physics.Linecast(transform.position + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*0.8f + ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)){
				if (((Mathf.Acos(Mathf.Clamp(switchHitPoint.normal.y, -1f, 1f))) * 57.2958f) <= ledgeAngleLimit && !switching){
					
					r2FirstForwardHit = true;
					if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2), transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2), out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r2FirstForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(5.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r2FirstForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(5.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r2FirstForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(5.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r2FirstForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(5.5f/length2);
					}
					//
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r2FirstForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(5.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r2FirstForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(5.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r2FirstForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(5.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r2FirstForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(5.5f/length2);
					}
					//
					else {
						r2FirstForwardHitPoint = new Vector3(switchHitPoint.point.x - transform.forward.x*length2, switchHitPoint.point.y - (height2*1.15f), switchHitPoint.point.z - transform.forward.x*length2) + new Vector3(-transform.forward.x*length2/10, onLedgeHeight2/10, -transform.forward.z*length2/10);
					}
					
				}
				else {
					r2FirstForwardHit = false;
				}
			}
			else {
				r2FirstForwardHit = false;
			}
			//3
			if (!Physics.Linecast(transform.position + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, out switchHitPoint, collisionLayers) && Physics.Linecast(transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)
			||  Physics.Linecast(transform.position + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*0.8f + ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)){
				if (((Mathf.Acos(Mathf.Clamp(switchHitPoint.normal.y, -1f, 1f))) * 57.2958f) <= ledgeAngleLimit && !switching){
					
					r3FirstForwardHit = true;
					if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2), transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2), out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r3FirstForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(5.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r3FirstForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(5.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r3FirstForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(5.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r3FirstForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(5.5f/length2);
					}
					//
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r3FirstForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(5.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r3FirstForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(5.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r3FirstForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(5.5f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r3FirstForwardHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(5.5f/length2);
					}
					//
					else {
						r3FirstForwardHitPoint = new Vector3(switchHitPoint.point.x - transform.forward.x*length2, switchHitPoint.point.y - (height2*1.15f), switchHitPoint.point.z - transform.forward.x*length2) + new Vector3(-transform.forward.x*length2/10, onLedgeHeight2/10, -transform.forward.z*length2/10);
					}
					
				}
				else {
					r3FirstForwardHit = false;
				}
			}
			else {
				r3FirstForwardHit = false;
			}
			
		}
	}
	
	void LedgeSwitchHitPointsMiddleRight () {
		
		if (!switching && ledgeSwitchingDetectors.allowLedgeSwitching && grabbedOn){
			
			//middle
			//surface detectors
			//1
			if (!Physics.Linecast(transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, out hit, collisionLayers) && Physics.Linecast(transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2, out hit, collisionLayers)
			||  Physics.Linecast(transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.8f + ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2, out hit, collisionLayers)){
				
				r1MiddleSurfaceDetectorsHit = true;
				
			}
			else {
				r1MiddleSurfaceDetectorsHit = false;
				r1MiddleHit = false;
			}
			//2
			if (!Physics.Linecast(transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, out hit, collisionLayers) && Physics.Linecast(transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2, out hit, collisionLayers)
			||  Physics.Linecast(transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.8f + ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2, out hit, collisionLayers)){
				
				r2MiddleSurfaceDetectorsHit = true;
				
			}
			else {
				r2MiddleSurfaceDetectorsHit = false;
				r2MiddleHit = false;
			}
			//3
			if (!Physics.Linecast(transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, out hit, collisionLayers) && Physics.Linecast(transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2, out hit, collisionLayers)
			||  Physics.Linecast(transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.8f + ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2, out hit, collisionLayers)){
				
				r3MiddleSurfaceDetectorsHit = true;
				
			}
			else {
				r3MiddleSurfaceDetectorsHit = false;
				r3MiddleHit = false;
			}
			//ledge switch point detectors
			//1
			if (!Physics.Linecast(transform.position + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, out switchHitPoint, collisionLayers) && Physics.Linecast(transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)
			||  Physics.Linecast(transform.position + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*0.8f + ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)){
				if (((Mathf.Acos(Mathf.Clamp(switchHitPoint.normal.y, -1f, 1f))) * 57.2958f) <= ledgeAngleLimit){
					
					r1MiddleHit = true;
					if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2), transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2), out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r1MiddleHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(3.8f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r1MiddleHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(3.8f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r1MiddleHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(3.8f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r1MiddleHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(3.8f/length2);
					}
					//
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r1MiddleHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(3.8f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r1MiddleHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(3.8f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r1MiddleHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(3.8f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r1MiddleHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(3.8f/length2);
					}
					//
					else {
						r1MiddleHitPoint = new Vector3(switchHitPoint.point.x - transform.forward.x*length2, switchHitPoint.point.y - (height2*1.15f), switchHitPoint.point.z - transform.forward.x*length2) + new Vector3(-transform.forward.x*length2/10, onLedgeHeight2/10, -transform.forward.z*length2/10);
					}
					
				}
				else {
					r1MiddleHit = false;
				}
			}
			else {
				r1MiddleHit = false;
			}
			//2
			if (!Physics.Linecast(transform.position + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, out switchHitPoint, collisionLayers) && Physics.Linecast(transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)
			||  Physics.Linecast(transform.position + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*0.8f + ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)){
				if (((Mathf.Acos(Mathf.Clamp(switchHitPoint.normal.y, -1f, 1f))) * 57.2958f) <= ledgeAngleLimit){
					
					r2MiddleHit = true;
					if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2), transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2), out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r2MiddleHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(3.8f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r2MiddleHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(3.8f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r2MiddleHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(3.8f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r2MiddleHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(3.8f/length2);
					}
					//
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r2MiddleHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(3.8f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r2MiddleHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(3.8f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r2MiddleHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(3.8f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r2MiddleHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(3.8f/length2);
					}
					//
					else {
						r2MiddleHitPoint = new Vector3(switchHitPoint.point.x - transform.forward.x*length2, switchHitPoint.point.y - (height2*1.15f), switchHitPoint.point.z - transform.forward.x*length2) + new Vector3(-transform.forward.x*length2/10, onLedgeHeight2/10, -transform.forward.z*length2/10);
					}
					
				}
				else {
					r2MiddleHit = false;
				}
			}
			else {
				r2MiddleHit = false;
			}
			//3
			if (!Physics.Linecast(transform.position + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, out switchHitPoint, collisionLayers) && Physics.Linecast(transform.position + posChange2 + upHeight*2.2f + ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)
			||  Physics.Linecast(transform.position + posChange2 + upHeight*1.5f + ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*0.8f + ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)){
				if (((Mathf.Acos(Mathf.Clamp(switchHitPoint.normal.y, -1f, 1f))) * 57.2958f) <= ledgeAngleLimit){
					
					r3MiddleHit = true;
					if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2), transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2), out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r3MiddleHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(3.8f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r3MiddleHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(3.8f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r3MiddleHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(3.8f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r3MiddleHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(3.8f/length2);
					}
					//
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r3MiddleHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(3.8f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r3MiddleHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(3.8f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r3MiddleHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(3.8f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r3MiddleHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(3.8f/length2);
					}
					//
					else {
						r3MiddleHitPoint = new Vector3(switchHitPoint.point.x - transform.forward.x*length2, switchHitPoint.point.y - (height2*1.15f), switchHitPoint.point.z - transform.forward.x*length2) + new Vector3(-transform.forward.x*length2/10, onLedgeHeight2/10, -transform.forward.z*length2/10);
					}
					
				}
				else {
					r3MiddleHit = false;
				}
			}
			else {
				r3MiddleHit = false;
			}
			
		}
	}
	
	
	void LedgeSwitchHitPointsFirstBackRight () {
		
		if (!switching && ledgeSwitchingDetectors.allowLedgeSwitching && grabbedOn){
			
			//first back
			//surface detectors
			//1
			if (!Physics.Linecast(transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f + rightWidth*2 + surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, out hit, collisionLayers) && Physics.Linecast(transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + rightWidth*2 + surfaceDetectorWidth2, out hit, collisionLayers)
			||  Physics.Linecast(transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f + rightWidth*2 + surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.8f + rightWidth*2 + surfaceDetectorWidth2, out hit, collisionLayers)){
				
				r1FirstBackSurfaceDetectorsHit = true;
				
			}
			else {
				r1FirstBackSurfaceDetectorsHit = false;
				r1FirstBackHit = false;
			}
			//2
			if (!Physics.Linecast(transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f + rightWidth*2 + surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, out hit, collisionLayers) && Physics.Linecast(transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + rightWidth*2 + surfaceDetectorWidth2, out hit, collisionLayers)
			||  Physics.Linecast(transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f + rightWidth*2 + surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.8f + rightWidth*2 + surfaceDetectorWidth2, out hit, collisionLayers)){
				
				r2FirstBackSurfaceDetectorsHit = true;
				
			}
			else {
				r2FirstBackSurfaceDetectorsHit = false;
				r2FirstBackHit = false;
			}
			//3
			if (!Physics.Linecast(transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f + rightWidth*2 + surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, out hit, collisionLayers) && Physics.Linecast(transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + rightWidth*2 + surfaceDetectorWidth2, out hit, collisionLayers)
			||  Physics.Linecast(transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f + rightWidth*2 + surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.8f + rightWidth*2 + surfaceDetectorWidth2, out hit, collisionLayers)){
				
				r3FirstBackSurfaceDetectorsHit = true;
				
			}
			else {
				r3FirstBackSurfaceDetectorsHit = false;
				r3FirstBackHit = false;
			}
			//ledge switch point detectors
			//1
			if (!Physics.Linecast(transform.position + posChange2 + upHeight*1.5f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, out switchHitPoint, collisionLayers) && Physics.Linecast(transform.position + posChange2 + upHeight*2.2f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)
			||  Physics.Linecast(transform.position + posChange2 + upHeight*1.5f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*0.8f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)){
				if (((Mathf.Acos(Mathf.Clamp(switchHitPoint.normal.y, -1f, 1f))) * 57.2958f) <= ledgeAngleLimit){
					
					r1FirstBackHit = true;
					if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2), transform.position + posChange2 + wallInFrontDetectorUpAmount2 + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2), out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r1FirstBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.9f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r1FirstBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.9f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r1FirstBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.9f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r1FirstBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.9f/length2);
					}
					//
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r1FirstBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.9f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r1FirstBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.9f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r1FirstBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.9f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r1FirstBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.9f/length2);
					}
					//
					else {
						r1FirstBackHitPoint = new Vector3(switchHitPoint.point.x - transform.forward.x*length2, switchHitPoint.point.y - (height2*1.15f), switchHitPoint.point.z - transform.forward.x*length2) + new Vector3(-transform.forward.x*length2/10, onLedgeHeight2/10, -transform.forward.z*length2/10);
					}
					
				}
				else {
					r1FirstBackHit = false;
				}
			}
			else {
				r1FirstBackHit = false;
			}
			//2
			if (!Physics.Linecast(transform.position + posChange2 + upHeight*1.5f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, out switchHitPoint, collisionLayers) && Physics.Linecast(transform.position + posChange2 + upHeight*2.2f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)
			||  Physics.Linecast(transform.position + posChange2 + upHeight*1.5f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*0.8f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)){
				if (((Mathf.Acos(Mathf.Clamp(switchHitPoint.normal.y, -1f, 1f))) * 57.2958f) <= ledgeAngleLimit){
					
					r2FirstBackHit = true;
					if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2), transform.position + posChange2 + wallInFrontDetectorUpAmount2 + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2), out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r2FirstBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.9f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r2FirstBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.9f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r2FirstBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.9f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r2FirstBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.9f/length2);
					}
					//
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r2FirstBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.9f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r2FirstBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.9f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r2FirstBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.9f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r2FirstBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.9f/length2);
					}
					//
					else {
						r2FirstBackHitPoint = new Vector3(switchHitPoint.point.x - transform.forward.x*length2, switchHitPoint.point.y - (height2*1.15f), switchHitPoint.point.z - transform.forward.x*length2) + new Vector3(-transform.forward.x*length2/10, onLedgeHeight2/10, -transform.forward.z*length2/10);
					}
					
				}
				else {
					r2FirstBackHit = false;
				}
			}
			else {
				r2FirstBackHit = false;
			}
			//3
			if (!Physics.Linecast(transform.position + posChange2 + upHeight*1.5f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, out switchHitPoint, collisionLayers) && Physics.Linecast(transform.position + posChange2 + upHeight*2.2f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)
			||  Physics.Linecast(transform.position + posChange2 + upHeight*1.5f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*0.8f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)){
				if (((Mathf.Acos(Mathf.Clamp(switchHitPoint.normal.y, -1f, 1f))) * 57.2958f) <= ledgeAngleLimit){
					
					r3FirstBackHit = true;
					if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2), transform.position + posChange2 + wallInFrontDetectorUpAmount2 + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2), out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r3FirstBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.9f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r3FirstBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.9f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r3FirstBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.9f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r3FirstBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.9f/length2);
					}
					//
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r3FirstBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.9f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r3FirstBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.9f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r3FirstBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.9f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r3FirstBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.9f/length2);
					}
					//
					else {
						r3FirstBackHitPoint = new Vector3(switchHitPoint.point.x - transform.forward.x*length2, switchHitPoint.point.y - (height2*1.15f), switchHitPoint.point.z - transform.forward.x*length2) + new Vector3(-transform.forward.x*length2/10, onLedgeHeight2/10, -transform.forward.z*length2/10);
					}
					
				}
				else {
					r3FirstBackHit = false;
				}
			}
			else {
				r3FirstBackHit = false;
			}
			
		}
	}
	
	void LedgeSwitchHitPointsSecondBackRight () {
		
		if (!switching && ledgeSwitchingDetectors.allowLedgeSwitching && grabbedOn){
			
			//second back
			//surface detectors
			//1
			if (!Physics.Linecast(transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f - ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, out hit, collisionLayers) && Physics.Linecast(transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 - ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2, out hit, collisionLayers)
			||  Physics.Linecast(transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f - ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.8f - ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2, out hit, collisionLayers)){
				
				r1SecondBackSurfaceDetectorsHit = true;
				
			}
			else {
				r1SecondBackSurfaceDetectorsHit = false;
				r1SecondBackHit = false;
			}
			//2
			if (!Physics.Linecast(transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f - ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, out hit, collisionLayers) && Physics.Linecast(transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 - ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2, out hit, collisionLayers)
			||  Physics.Linecast(transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f - ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.8f - ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2, out hit, collisionLayers)){
				
				r2SecondBackSurfaceDetectorsHit = true;
				
			}
			else {
				r2SecondBackSurfaceDetectorsHit = false;
				r2SecondBackHit = false;
			}
			//3
			if (!Physics.Linecast(transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f - ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, out hit, collisionLayers) && Physics.Linecast(transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 - ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2, out hit, collisionLayers)
			||  Physics.Linecast(transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f - ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.8f - ledgeSwitchSurfaceLength/1.75f + rightWidth*2 + surfaceDetectorWidth2, out hit, collisionLayers)){
				
				r3SecondBackSurfaceDetectorsHit = true;
				
			}
			else {
				r3SecondBackSurfaceDetectorsHit = false;
				r3SecondBackHit = false;
			}
			//ledge switch point detectors
			//1
			if (!Physics.Linecast(transform.position + posChange2 + upHeight*1.5f - ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, out switchHitPoint, collisionLayers) && Physics.Linecast(transform.position + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 - ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)
			||  Physics.Linecast(transform.position + posChange2 + upHeight*1.5f - ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*0.8f - ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)){
				if (((Mathf.Acos(Mathf.Clamp(switchHitPoint.normal.y, -1f, 1f))) * 57.2958f) <= ledgeAngleLimit){
					
					r1SecondBackHit = true;
					if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2), transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2), out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r1SecondBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.6f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r1SecondBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.6f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r1SecondBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.6f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r1SecondBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.6f/length2);
					}
					//
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r1SecondBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.6f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r1SecondBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.6f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r1SecondBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.6f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r1SecondBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.6f/length2);
					}
					//
					else {
						r1SecondBackHitPoint = new Vector3(switchHitPoint.point.x - transform.forward.x*length2, switchHitPoint.point.y - (height2*1.15f), switchHitPoint.point.z - transform.forward.x*length2) + new Vector3(-transform.forward.x*length2/10, onLedgeHeight2/10, -transform.forward.z*length2/10);
					}
					
				}
				else {
					r1SecondBackHit = false;
				}
			}
			else {
				r1SecondBackHit = false;
			}
			//2
			if (!Physics.Linecast(transform.position + posChange2 + upHeight*1.5f - ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, out switchHitPoint, collisionLayers) && Physics.Linecast(transform.position + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 - ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)
			||  Physics.Linecast(transform.position + posChange2 + upHeight*1.5f - ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*0.8f - ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)){
				if (((Mathf.Acos(Mathf.Clamp(switchHitPoint.normal.y, -1f, 1f))) * 57.2958f) <= ledgeAngleLimit){
					
					r2SecondBackHit = true;
					if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2), transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2), out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r2SecondBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.6f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r2SecondBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.6f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r2SecondBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.6f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r2SecondBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.6f/length2);
					}
					//
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r2SecondBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.6f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r2SecondBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.6f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r2SecondBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.6f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r2SecondBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.6f/length2);
					}
					//
					else {
						r2SecondBackHitPoint = new Vector3(switchHitPoint.point.x - transform.forward.x*length2, switchHitPoint.point.y - (height2*1.15f), switchHitPoint.point.z - transform.forward.x*length2) + new Vector3(-transform.forward.x*length2/10, onLedgeHeight2/10, -transform.forward.z*length2/10);
					}
					
				}
				else {
					r2SecondBackHit = false;
				}
			}
			else {
				r2SecondBackHit = false;
			}
			//3
			if (!Physics.Linecast(transform.position + posChange2 + upHeight*1.5f - ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, out switchHitPoint, collisionLayers) && Physics.Linecast(transform.position + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 - ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)
			||  Physics.Linecast(transform.position + posChange2 + upHeight*1.5f - ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*0.8f - ledgeSwitchSurfaceLength/1.75f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)){
				if (((Mathf.Acos(Mathf.Clamp(switchHitPoint.normal.y, -1f, 1f))) * 57.2958f) <= ledgeAngleLimit){
					
					r3SecondBackHit = true;
					if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2), transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2), out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r3SecondBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.6f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.375f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r3SecondBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.6f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*0.75f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r3SecondBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.6f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/1.75f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.125f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r3SecondBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.6f/length2);
					}
					//
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.45f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r3SecondBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.6f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*1.8f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r3SecondBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.6f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.1f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r3SecondBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.6f/length2);
					}
					else if (Physics.Linecast(transform.position + posChange2 + wallInFrontDetectorUpAmount2 - ledgeSwitchSurfaceLength/0.875f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, transform.position + posChange2 + wallInFrontDetectorUpAmount2 + ledgeSwitchSurfaceLength/0.585f + (rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2) + ledgeSwitchHeight*2.405f, out hit, collisionLayers) && ((Mathf.Acos(Mathf.Clamp(hit.normal.y, -1f, 1f))) * 57.2958f) >= 45){
						r3SecondBackHitPoint = new Vector3(hit.point.x, switchHitPoint.point.y - (height2*1.15f), hit.point.z) + hit.normal/(2.6f/length2);
					}
					//
					else {
						r3SecondBackHitPoint = new Vector3(switchHitPoint.point.x - transform.forward.x*length2, switchHitPoint.point.y - (height2*1.15f), switchHitPoint.point.z - transform.forward.x*length2) + new Vector3(-transform.forward.x*length2/10, onLedgeHeight2/10, -transform.forward.z*length2/10);
					}
					
				}
				else {
					r3SecondBackHit = false;
				}
			}
			else {
				r3SecondBackHit = false;
			}
			
		}
	}
	
	void LedgeSwitchHitPointsThirdBackRight () {
		
		if (!switching && ledgeSwitchingDetectors.allowLedgeSwitching && grabbedOn){
			
			//third back
			//surface detectors
			//1
			if (!Physics.Linecast(transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f - ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, out hit, collisionLayers) && Physics.Linecast(transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 - ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2, out hit, collisionLayers)
			||  Physics.Linecast(transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f - ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position + firstSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.8f - ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2, out hit, collisionLayers)){
				
				r1ThirdBackSurfaceDetectorsHit = true;
				
			}
			else {
				r1ThirdBackSurfaceDetectorsHit = false;
				r1ThirdBackHit = false;
			}
			//2
			if (!Physics.Linecast(transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f - ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, out hit, collisionLayers) && Physics.Linecast(transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 - ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2, out hit, collisionLayers)
			||  Physics.Linecast(transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f - ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position + secondSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.8f - ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2, out hit, collisionLayers)){
				
				r2ThirdBackSurfaceDetectorsHit = true;
				
			}
			else {
				r2ThirdBackSurfaceDetectorsHit = false;
				r2ThirdBackHit = false;
			}
			//3
			if (!Physics.Linecast(transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f - ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, out hit, collisionLayers) && Physics.Linecast(transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2 + surfaceDetectorHeight2, transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 - ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2, out hit, collisionLayers)
			||  Physics.Linecast(transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*1.5f - ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2 + underPlatformMaxSurfaceLevelHeight2, transform.position + thirdSurfaceDetectorWidth2 + surfaceDetectorForward2 + posChange2 + upHeight*0.8f - ledgeSwitchSurfaceLength/0.875f + rightWidth*2 + surfaceDetectorWidth2, out hit, collisionLayers)){
				
				r3ThirdBackSurfaceDetectorsHit = true;
				
			}
			else {
				r3ThirdBackSurfaceDetectorsHit = false;
				r3ThirdBackHit = false;
			}
			//ledge switch point detectors
			//1
			if (!Physics.Linecast(transform.position + posChange2 + upHeight*1.5f - ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, out switchHitPoint, collisionLayers) && Physics.Linecast(transform.position + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 - ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)
			||  Physics.Linecast(transform.position + posChange2 + upHeight*1.5f - ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*0.8f - ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + firstSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)){
				if (((Mathf.Acos(Mathf.Clamp(switchHitPoint.normal.y, -1f, 1f))) * 57.2958f) <= ledgeAngleLimit){
					
					r1ThirdBackHit = true;
					
				}
				else {
					r1ThirdBackHit = false;
				}
			}
			else {
				r1ThirdBackHit = false;
			}
			//2
			if (!Physics.Linecast(transform.position + posChange2 + upHeight*1.5f - ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, out switchHitPoint, collisionLayers) && Physics.Linecast(transform.position + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 - ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)
			||  Physics.Linecast(transform.position + posChange2 + upHeight*1.5f - ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*0.8f - ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + secondSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)){
				if (((Mathf.Acos(Mathf.Clamp(switchHitPoint.normal.y, -1f, 1f))) * 57.2958f) <= ledgeAngleLimit){
					
					r2ThirdBackHit = true;
					
				}
				else {
					r2ThirdBackHit = false;
				}
			}
			else {
				r2ThirdBackHit = false;
			}
			//3
			if (!Physics.Linecast(transform.position + posChange2 + upHeight*1.5f - ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, out switchHitPoint, collisionLayers) && Physics.Linecast(transform.position + posChange2 + upHeight*2.2f - ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2 + surfaceDetectorHeight2, transform.position + posChange2 + upHeight*0.3f - surfaceDetectorHeight2 - ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)
			||  Physics.Linecast(transform.position + posChange2 + upHeight*1.5f - ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2 + underPlatformMaxSurfaceLevelHeight2, transform.position + posChange2 + upHeight*0.8f - ledgeSwitchSurfaceLength/0.875f + rightWidth*2.67f + thirdSwitchSurfaceWidth + surfaceDetectorForward2, out switchHitPoint, collisionLayers)){
				if (((Mathf.Acos(Mathf.Clamp(switchHitPoint.normal.y, -1f, 1f))) * 57.2958f) <= ledgeAngleLimit){
					
					r3ThirdBackHit = true;
					
				}
				else {
					r3ThirdBackHit = false;
				}
			}
			else {
				r3ThirdBackHit = false;
			}
		}
		
	}
	
	void OnControllerColliderHit(ControllerColliderHit hit) {
		if (getOn){
			if (climbable || climbPossible){
				//getting position to grab on to ledge
				playerPosXZ = transform.position + posChange2;
				//grab on to ledge
				grabbedOn = true;
				canGrabBackOn = false;
			}
		}
		noCollisionTimer = 0;
	}
	
	void OnCollisionStay (Collision hit) {
		if (getOn){
			if (climbable || climbPossible){
				//getting position to grab on to ledge
				playerPosXZ = transform.position + posChange2;
				//grab on to ledge
				grabbedOn = true;
				canGrabBackOn = false;
			}
		}
		noCollisionTimer = 0;
	}
	
}